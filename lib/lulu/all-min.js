;(function(u,D){if(D.isKeyEventBind||!u.addEventListener){return{}}var O=navigator.platform||navigator.userAgent;var J='windows';if(/mac/i.test(O)){J='mac'}var G='chrome';if(typeof u.mozFullScreen!='undefined'){G='moz'}else if(typeof u.msHidden!='undefined'||typeof u.hidden=='undefined'){G='ie'}var K=({windows:{ctrlKey:false,altKey:true,shiftKey:false},mac:{ctrlKey:true,altKey:true,shiftKey:false}})[J];var P=function(j,k){if(!j){return''}k=k||'x';var m='';var o=0;var y;for(o;o<j.length;o+=1)j.charCodeAt(o)>=55296&&j.charCodeAt(o)<=56319?(y=(65536+1024*(Number(j.charCodeAt(o))-55296)+Number(j.charCodeAt(o+1))-56320).toString(16),o+=1):y=j.charCodeAt(o).toString(16),m+=k+y;return m.substr(k.length)};var L=null;var Q=function(w){if(u.hasTipsShow){return}var B=u.documentElement.scrollTop||u.body.scrollTop;var z=u.documentElement.scrollLeft||u.body.scrollLeft;w.forEach(function(k){if(k.clientHeight*k.clientWidth==0){return}var m=k.getAttribute('accesskey');var o=[];for(var y in K){if(K[y]){o.push(y)}}o.push(m);var n=k.getBoundingClientRect();var t=u.createElement('div');t.className='ui-kbd-tips AK_Tips';t.setAttribute('style','top:'+(n.top+B)+'px;left:'+(n.left+z)+'px;');t.innerHTML=o.map(function(j){return'<kbd>'+j.replace('Key','')+'</kbd>'}).join('+');u.body.appendChild(t);t.fromTarget=k});u.hasTipsShow=true;L=setTimeout(function(){H()},3000)};var H=function(){clearTimeout(L);var k=u.querySelectorAll('.AK_Tips');[].slice.call(k).forEach(function(j){if(j.fromTarget){j.fromTarget.hasTipsShow=null}u.body.removeChild(j)});u.hasTipsShow=null};u.addEventListener('keydown',function(m){var o=false;var y=m.target||u.activeElement;var n=y.tagName.toLowerCase();if(n=='textarea'||(n=='input'&&/checkbox|radio|select|file|button|image|hidden/i.test(y.type)==false)){o=true}var t=u.querySelectorAll('a[accesskey],area[accesskey],button[accesskey],input[accesskey],label[accesskey],legend[accesskey],textarea[accesskey]');if(t.length==0){return}var w=[].slice.call(t);var B=w.map(function(j){return j.getAttribute('accesskey')});var z=-1;B.forEach(function(j,k){if((m.key&&m.key==j)||(m.keyIdentifier&&parseInt(m.keyIdentifier.toLowerCase().replace('u+',''),16)==parseInt(P(j),16))){z=k;return false}});if(m.altKey==false&&m.shiftKey==false&&m.ctrlKey==false){if(o){return}if(w[z]){setTimeout(function(){w[z].focus()},1);m.preventDefault()}}else if(m.altKey==false&&m.shiftKey==true&&m.ctrlKey==false){if(m.keyCode==191&&!o){u.hasTipsShow?H():Q(w)}}else if(w[z]&&!o&&(G=='ie'||G=='moz')&&m.altKey&&!m.shiftKey&&!m.ctrlKey){w[z].click()}});u.addEventListener('mousedown',function(){H()});var R={37:'left',38:'up',39:'right',40:'down',13:'enter',9:'tab',27:'esc'};var F='ui-outline';var C={add:function(j){j.classList.add(F)},remove:function(j){j.classList.remove(F)},removeAll:function(){[].slice.call(u.querySelectorAll('.'+F)).forEach(function(j){C.remove(j)})},has:function(j){j.classList.contains(F)}};var M=null;D.isKeyEvent=false;u.addEventListener('keydown',function(m){D.isKeyEvent=true;clearTimeout(M);M=setTimeout(function(){D.isKeyEvent=false},100);var o=R[m.keyCode];if(!o){return}var y=u.activeElement;if(!y||/body/i.test(y.tagName)){return}if(o=='enter'&&(/^radio|checkbox$/i.test(y.type)||y.getAttribute('tabindex')=='0')){y.click();m.preventDefault();return}var n=null;var t=u.querySelectorAll('.ESC');if(o=='esc'&&t.length){[].slice.call(t).forEach(function(j){var k=j.id;n=k&&u.querySelector('[data-target="'+k+'"],[data-target2="'+k+'"],ui-drop[target="'+k+'"]');if(n&&j.style.display!=='none'&&j.clientHeight>0){if(n.hide){n.hide()}else if(n['ui-drop']){n['ui-drop'].hide()}else{n.click()}}else if(j==document.activeElement&&j.click){j.click()}})}var w=y.getAttribute('data-focus');var B=y.getAttribute('data-target');var z=null;if(!w&&!B){return}if(w){z=u.getElementById(w)}else if(B){z=u.getElementById(B)}if(!z||(z.clientWidth==0&&z.clientHeight==0)){return}if(o=='tab'){C.removeAll();var I=z;if(!z.getAttribute('tabindex')){I=z.querySelector('a[href], button:not(:disabled), input:not(:disabled)')}if(I){I.focus()}return}if(o=='enter'){var N=z.querySelector('.'+F);if(N&&w){m.preventDefault();N.click();return}if(B){return}}if(o=='esc'){n=u.querySelector('a[data-target="'+B+'"],input[data-target="'+B+'"]');if(w){y.blur()}else if(n&&/ESC/.test(n.className)==false){n.click()}return}var E=[].slice.call(z.querySelectorAll('a[href], button:not(:disabled), input:not(:disabled)'));var A=-1;if(E.length==0){return}E.forEach(function(j,k){if(w){if(C.has(j)){A=k}}else if(y==j){A=k}C.remove(j)});m.preventDefault();if(o=='left'||o=='up'){A--;if(A<0){A=-1}}else if(o=='right'||o=='down'){A++;if(A>E.length-1){A=E.length}}if(E[A]){if(w){C.add(E[A])}else{E[A].focus()}}});u.addEventListener('mousedown',function(j){var k=j.target;if(k&&!C.has(k)){C.removeAll()}});u.addEventListener('click',function(j){var k=j.target;var m=u.activeElement;var o=k.getAttribute('tabindex')||'-1';if(k&&k==m&&(/^radio|checkbox$/i.test(m.type)||o>=0)&&D.isKeyEvent==false&&/none/.test(getComputedStyle(k).outline)==false){m.blur()}});u.addEventListener('focusin',function(j){var k=j.target;if(!k){return}if(/^javascript/.test(k.href)&&!k.getAttribute('role')){k.setAttribute('role','button')}if(!D.isKeyEvent){return}var m=window.getComputedStyle(k);if(/none|auto/.test(m.outlineStyle)&&(!j.path||j.path[0]===k)){C.add(k)}});u.addEventListener('focusout',function(j){var k=j.target;if(k){C.remove(k)}});D.isKeyEventBind=true;return{}})(document,window);HTMLElement.prototype.follow=function(k,m){n defaults={offsets:{x:0,y:0},safeArea:[0,0,0,0],position:'4-1',edgeAdjust:true};if(k&&Object.prototype.toString.call(k)==='[object Object]'){m=k;k=null}for(var o y(m||(m={}))){if(typeof m[o]=='undefined'){delete m[o]}}n t=Object.assign({},defaults,m);if(!k){n strTarget=this.getAttribute('is-follow')||this.dataset.target;if(!strTarget){return}k=document.getElementById(strTarget)||document.querySelector('.'+strTarget)||document.querySelector(strTarget);if(!k){return}}n arrLegalPosition=['4-1','1-4','5-7','2-3','2-1','6-8','3-4','4-3','8-6','1-2','7-5','3-2'];n dataOffsets=this.dataset.offsets;n arrOffsets=[];if(t.offsets.map&&t.offsets.length){arrOffsets=t.offsets}else if(typeof t.offsets=='string'){arrOffsets=t.offsets.trim().split(/,\s*|\s+/)}if(dataOffsets&&!m.offsets){arrOffsets=dataOffsets.trim().split(/,\s*|\s+/)}if(arrOffsets.length){t.offsets={};t.offsets.x=arrOffsets[0];t.offsets.y=arrOffsets[1]||arrOffsets[0]}n dataOffsetX=this.dataset.offsetX;n dataOffsetY=this.dataset.offsetY;if(dataOffsetX){t.offsets.x=dataOffsetX}if(dataOffsetY){t.offsets.y=dataOffsetY}t.offsets.x*=1;t.offsets.y*=1;n dataPosition=this.dataset.position;n dataAlign=this.dataset.align;n isDataAlignMatch=arrLegalPosition.some((strLegalPosition)=>{return strLegalPosition===dataAlign});if(!dataPosition&&dataAlign&&isDataAlignMatch){dataPosition=dataAlign}if(dataPosition&&(!m||!m.position)){t.position=dataPosition}n dataEdgeAdjust=this.dataset.edgeAdjust||t.edgeAdjust;n isEdgeAdjust=!((dataEdgeAdjust==='0')||(dataEdgeAdjust==='none')||(dataEdgeAdjust==='false')||(dataEdgeAdjust===false));if(typeof dataEdgeAdjust=='string'&&typeof t.edgeAdjust!='boolean'){t.edgeAdjust=isEdgeAdjust}n strOriginPosition=k.style.position;if(strOriginPosition!='absolute'){k.style.position='absolute'}n objBoundTrigger=this.getBoundingClientRect();n objBoundTarget=k.getBoundingClientRect();if(objBoundTarget.width*objBoundTarget.height===0){k.style.position=strOriginPosition||'';window.console.warn((k.id?'id为'+k.id+'的':'')+'目前元素尺寸为0，无法定位');return}n numScrollTop=window.pageYOffset;n numScrollLeft=window.pageXOffset;n numWinWidth=window.innerWidth;n numWinHeight=window.innerHeight;if((objBoundTrigger.left<0&&objBoundTrigger.right<0)||(objBoundTrigger.top<0&&objBoundTrigger.bottom<0)||(objBoundTrigger.left>numWinWidth&&objBoundTrigger.right>numWinWidth)||(objBoundTrigger.top>numWinHeight&&objBoundTrigger.bottom>numWinHeight)){t.edgeAdjust=isEdgeAdjust=false}n eleOffsetParent=k.offsetParent;n objBoundOffsetParent=eleOffsetParent.getBoundingClientRect();const element={follow:k};this.element=this.element?Object.assign(this.element,element):element;this.params=this.params?Object.assign(this.params,t):t;n objOffsets=t.offsets;n numOffsetTop=objBoundOffsetParent.top+numScrollTop;n numOffsetLeft=objBoundOffsetParent.left+numScrollLeft;if(eleOffsetParent===document.body&&window.getComputedStyle(eleOffsetParent).position==='static'){numOffsetTop=0;numOffsetLeft=0}n strPosition=t.position;n numTargetLeft,numTargetTop;n zIndex=function(){n objStyleTarget=window.getComputedStyle(k);n numZIndexTarget=Number(objStyleTarget.zIndex);n numZIndexNew=19;eleOffsetParent.childNodes.forEach((eleChild)=>{if(eleChild.nodeType!==1)return;n objStyleChild=window.getComputedStyle(eleChild);n numZIndexChild=objStyleChild.zIndex*1;if(numZIndexChild&&k!==eleChild&&objStyleChild.display!=='none'){numZIndexNew=Math.max(numZIndexChild+1,numZIndexNew)}});if(numZIndexNew!==numZIndexTarget){k.style.zIndex=numZIndexNew}};if(typeof strPosition!=='string'&&strPosition.length===2){n arrPosition=strPosition;numTargetLeft=arrPosition[0]+objOffsets.x;numTargetTop=arrPosition[1]+objOffsets.y;if(t.edgeAdjust===true){if(numTargetLeft+objBoundTarget.width>numWinWidth+numScrollLeft){numTargetLeft=numWinWidth+numScrollLeft-objBoundTarget.width-objOffsets.x}if(numTargetTop+objBoundTarget.height>numWinHeight+numScrollTop){numTargetTop=numWinHeight+numScrollTop-objBoundTarget.height-objOffsets.y}}k.style.left=`${numTargetLeft}px`;k.style.top=`${numTargetTop}px`;k.dataset.align='3-1';zIndex();return}n isAlignMatch=arrLegalPosition.some((strLegalPosition)=>{return strLegalPosition===strPosition});if(isAlignMatch===false){strPosition=defaults.position}n arrSafeArea=this.dataset.safeArea||getComputedStyle(k).getPropertyValue('--safe-area')||t.safeArea;if(typeof arrSafeArea=='string'){arrSafeArea=arrSafeArea.trim().split(/(?:,\s*|\s+)/)}arrSafeArea=arrSafeArea.map(function(j){return parseFloat(j)||0});if(arrSafeArea.length==1){arrSafeArea=arrSafeArea.concat(arrSafeArea[0],arrSafeArea[0],arrSafeArea[0])}else if(arrSafeArea.length==2){arrSafeArea.push(arrSafeArea[0]);arrSafeArea.push(arrSafeArea[1])}else if(arrSafeArea.length==3){arrSafeArea.push(arrSafeArea[1])}const objIsOverflow={'left-right':objBoundTarget.width+objOffsets.x+arrSafeArea[3]>objBoundTrigger.left,'top-bottom':objBoundTrigger.top-(objBoundTarget.height+objOffsets.y+arrSafeArea[0])<0,'right-left':objBoundTrigger.right+objBoundTarget.width+objOffsets.x+arrSafeArea[1]>numWinWidth,'bottom-top':objBoundTrigger.bottom+objBoundTarget.height+objOffsets.y+arrSafeArea[2]>numWinHeight,'right-right':objBoundTarget.width+objOffsets.x+arrSafeArea[3]>objBoundTrigger.right,'left-left':objBoundTrigger.left+objBoundTarget.width+objOffsets.x+arrSafeArea[1]>numWinWidth,'bottom-bottom':objBoundTarget.height+objOffsets.y+arrSafeArea[0]>objBoundTrigger.bottom,'top-top':objBoundTrigger.top+objBoundTarget.height+objOffsets.y+arrSafeArea[2]>numWinHeight};n strDirection='bottom';var w=()=>{switch(strPosition){case'1-4':case'5-7':case'2-3':{numTargetTop=objBoundTrigger.top-objBoundTarget.height;if(strPosition==='1-4'){numTargetLeft=objBoundTrigger.left}else if(strPosition==='5-7'){numTargetLeft=objBoundTrigger.left-(objBoundTarget.width-objBoundTrigger.width)/2}else{numTargetLeft=objBoundTrigger.left-(objBoundTarget.width-objBoundTrigger.width)}strDirection='top';if(isEdgeAdjust&&objIsOverflow['top-bottom']){if(!objIsOverflow['bottom-top']){strPosition=({'1-4':'4-1','5-7':'7-5','2-3':'3-2'})[strPosition];w()}else if(!objIsOverflow['left-right']||!objIsOverflow['right-left']){strPosition=({'1-4':'2-1','5-7':'6-8','2-3':'3-4'})[strPosition];w()}}break}case'2-1':case'6-8':case'3-4':{numTargetLeft=objBoundTrigger.right;if(strPosition==='2-1'){numTargetTop=objBoundTrigger.top}else if(strPosition==='6-8'){numTargetTop=objBoundTrigger.top-(objBoundTarget.height-objBoundTrigger.height)/2}else{numTargetTop=objBoundTrigger.top-(objBoundTarget.height-objBoundTrigger.height)}strDirection='right';if(isEdgeAdjust&&objIsOverflow['right-left']){if(!objIsOverflow['left-right']){strPosition=({'2-1':'1-2','6-8':'8-6','3-4':'4-3'})[strPosition];w()}else if(!objIsOverflow['top-bottom']||!objIsOverflow['bottom-top']){strPosition=({'2-1':'1-4','6-8':'5-7','3-4':'2-3'})[strPosition];w()}}break}case'4-1':case'7-5':case'3-2':{numTargetTop=objBoundTrigger.bottom;if(strPosition==='4-1'){numTargetLeft=objBoundTrigger.left}else if(strPosition==='7-5'){numTargetLeft=objBoundTrigger.left-(objBoundTarget.width-objBoundTrigger.width)/2}else{numTargetLeft=objBoundTrigger.left-(objBoundTarget.width-objBoundTrigger.width)}strDirection='bottom';if(isEdgeAdjust&&objIsOverflow['bottom-top']){if(!objIsOverflow['top-bottom']){strPosition=({'4-1':'1-4','7-5':'5-7','3-2':'2-3'})[strPosition];w()}else if(!objIsOverflow['left-right']||!objIsOverflow['right-left']){strPosition=({'4-1':'2-1','7-5':'6-8','3-2':'3-4'})[strPosition];w()}}break}case'1-2':case'8-6':case'4-3':{numTargetLeft=objBoundTrigger.left-objBoundTarget.width;if(strPosition==='1-2'){numTargetTop=objBoundTrigger.top}else if(strPosition==='8-6'){numTargetTop=objBoundTrigger.top-(objBoundTarget.height-objBoundTrigger.height)/2}else{numTargetTop=objBoundTrigger.top-(objBoundTarget.height-objBoundTrigger.height)}strDirection='left';if(isEdgeAdjust&&objIsOverflow['left-right']){if(!objIsOverflow['right-left']){strPosition=({'1-2':'2-1','8-6':'6-8','4-3':'3-4'})[strPosition];w()}else if(!objIsOverflow['top-bottom']||!objIsOverflow['bottom-top']){strPosition=({'1-2':'1-4','8-6':'5-7','4-3':'2-3'})[strPosition];w()}}break}}};w();numTargetLeft=numTargetLeft+objOffsets.x-numOffsetLeft;numTargetTop=numTargetTop+objOffsets.y-numOffsetTop;if(isEdgeAdjust){if(strDirection=='top'){numTargetTop=numTargetTop-arrSafeArea[2]}else if(strDirection=='bottom'){numTargetTop=numTargetTop+arrSafeArea[0]}else if(strDirection=='left'){numTargetLeft=numTargetLeft-arrSafeArea[1]}else{numTargetLeft=numTargetLeft+arrSafeArea[3]}}numTargetTop+=numScrollTop;numTargetLeft+=numScrollLeft;k.style.left=`${Math.round(numTargetLeft)}px`;k.style.top=`${Math.round(numTargetTop)}px`;objBoundTarget=k.getBoundingClientRect();if(isEdgeAdjust){if(strDirection=='top'||strDirection=='bottom'){if(objBoundTarget.left<arrSafeArea[3]){numTargetLeft=numTargetLeft+(arrSafeArea[3]-objBoundTarget.left)}else if(objBoundTarget.right+arrSafeArea[1]>numWinWidth){numTargetLeft=numTargetLeft-(objBoundTarget.right+arrSafeArea[1]-numWinWidth)}}else if(objBoundTarget.top<arrSafeArea[0]){numTargetTop+=arrSafeArea[0]-objBoundTarget.top}else if(objBoundTarget.bottom+arrSafeArea[2]>numWinHeight){numTargetTop-=(objBoundTarget.bottom+arrSafeArea[2]-numWinHeight)}k.style.left=`${Math.round(numTargetLeft)}px`;k.style.top=`${Math.round(numTargetTop)}px`}k.dataset.align=strPosition;k.dataset.direction=strDirection;zIndex();if(!k.zIndex){k.zIndex=zIndex}};[NodeList.prototype,HTMLCollection.prototype].forEach(prop=>{prop.follow=function(){[...this].forEach(node=>{if(node.nodeType===1){node.follow.apply(node,this.arguments)}})}});class Tab extends HTMLElement{static get observedAttributes(){return['open']}static get defaults(){return{eventType:'click',history:false,autoplay:3000}}constructor(trigger,options){super();let eleTrigger=null;if(typeof trigger=='string'){eleTrigger=document.getElementById(trigger)}else if(typeof trigger=='object'){if(trigger.tagName){eleTrigger=trigger}else if(!options){options=trigger}}options=options||{};if(eleTrigger){let strTriggerId=eleTrigger.id;if(!strTriggerId){strTriggerId=('lulu_'+Math.random()).replace('0.','');eleTrigger.id=strTriggerId;this.htmlFor=strTriggerId}if(eleTrigger.getAttribute('name')){this.name=eleTrigger.getAttribute('name')}if(eleTrigger.hasAttribute('open')){this.open=true}for(let paramsKey in Tab.defaults){if(typeof eleTrigger.dataset[paramsKey.toLowerCase()]!='undefined'){this[paramsKey]=eleTrigger.dataset[paramsKey.toLowerCase()]}else if(typeof options[paramsKey]!='undefined'){this[paramsKey]=eleTrigger.dataset[paramsKey.toLowerCase()]=options[paramsKey]}}let strIsTab=eleTrigger.getAttribute('is-tab');if(strIsTab&&!eleTrigger.dataset.target){eleTrigger.dataset.target=strIsTab}if(eleTrigger.tabIndex==-1){eleTrigger.setAttribute('tabindex',0)}}let objElement=this.element||{};this.element=new Proxy(objElement,{get:(target,prop)=>{if(prop=='target'){let strIdTarget=this.target;let eleTarget=null;let eleTrigger=this.element.trigger;if(!strIdTarget&&eleTrigger){strIdTarget=eleTrigger.dataset.target||eleTrigger.getAttribute('href');if(strIdTarget&&/#/.test(strIdTarget)){strIdTarget=strIdTarget.split('#')[1]}}if(strIdTarget){eleTarget=document.getElementById(strIdTarget)}return eleTarget}if(prop=='trigger'){return(this.htmlFor&&document.getElementById(this.htmlFor))||this}return target[prop]},set:(target,prop,value)=>{if(typeof value=='string'){value=document.getElementById(value)||document.querySelector(value)}if(value&&typeof value.nodeType!='number'){return false}target[prop]=value;if(prop=='target'&&value){let eleTarget=value;let strId=eleTarget.id;if(!strId){strId=('lulu_'+Math.random()).replace('0.','');eleTarget.id=strId}if(this.element.trigger==this){if(this.target!=strId){this.target=strId}}else if(this.element.trigger){this.element.trigger.setAttribute('data-target',strId)}}return true}});this.setParams(options);if(eleTrigger&&!this.parentElement&&eleTrigger!=this){let eleHidden=document.querySelector('body > div[hidden="tab"]');if(!eleHidden){eleHidden=document.createElement('div');eleHidden.setAttribute('hidden','tab');document.body.append(eleHidden)}eleHidden.append(this)}}get eventType(){let strEventType=this.getAttribute('eventtype')||Tab.defaults.eventType;if(strEventType=='hover'){strEventType='mouseenter'}return strEventType}set eventType(value){this.setAttribute('eventtype',value)}get history(){return this.hasAttribute('history')||Tab.defaults.history}set history(value){this.toggleAttribute('history',value)}get autoplay(){let strAttrAutoplay=this.getAttribute('autoplay');if(typeof strAttrAutoplay!=='string'){return false}if(/^\d+$/.test(strAttrAutoplay)){return strAttrAutoplay*1}return Tab.defaults.autoplay}set autoplay(value){if(!value&&value!==''){this.removeAttribute('autoplay')}else{this.setAttribute('autoplay',value)}}get name(){return this.getAttribute('name')}set name(value){this.setAttribute('name',value)}get htmlFor(){return this.getAttribute('for')}set htmlFor(v){this.setAttribute('for',v)}get target(){return this.getAttribute('target')}set target(value){this.setAttribute('target',value)}get open(){return this.hasAttribute('open')}set open(value){this.toggleAttribute('open',value)}setParams(options){this.params=this.params||{};options=options||{};Object.assign(this.params,options)}switch(){let strName=this.name;let eleTabGroup=[];if(strName){eleTabGroup=document.querySelectorAll('ui-tab[name="'+strName+'"]');if(!this.open){eleTabGroup.forEach(tab=>{if(tab.open){tab.open=false}});this.open=true}}else{this.open=!this.open}const location=window.location;if(this.history==true&&strName&&/tab\d{10,16}/.test(strName)==false){if(!this.element.target){return}let strId=this.element.target.id;const objURLParams=new URLSearchParams(location.search);objURLParams.set(strName,strId);let strHash=location.hash;if(strId==strHash){location.hash=strHash=''}window.history.replaceState(null,document.title,location.href.split('?')[0]+'?'+objURLParams.toString()+strHash)}}autoSwitch(){let numTimeAutoplay=this.autoplay;let strName=this.name;if(numTimeAutoplay&&strName){let eleTabGroup=document.querySelectorAll('ui-tab[name="'+strName+'"]');clearTimeout(this.timer);if(numTimeAutoplay&&strName&&eleTabGroup.length>1){let indexTab=[].slice.call(eleTabGroup).findIndex(tab=>{return tab==this});indexTab++;if(indexTab>=eleTabGroup.length){indexTab=0}this.timer=setTimeout(()=>{eleTabGroup[indexTab].switch();eleTabGroup[indexTab].autoSwitch()},numTimeAutoplay)}}}events(){if(this.eventType=='mouseover'||this.eventType=='mouseenter'){this.element.trigger.addEventListener(this.eventType,()=>{Tab.hoverTimer=setTimeout(()=>{this.switch()},150)},false);this.element.trigger.addEventListener(this.eventType.replace('over','out').replace('enter','leave'),()=>{clearTimeout(Tab.hoverTimer)})}this.element.trigger.addEventListener('click',(event)=>{if(/^(:?javas|#)/.test(event.target.getAttribute('href'))){event.preventDefault()}this.switch()},false);if(this.autoplay&&this.name){[this.element.trigger,this.element.target].forEach((ele)=>{ele.addEventListener('mouseenter',()=>{clearTimeout(this.timer)});ele.addEventListener('mouseleave',()=>{this.autoSwitch()})});let eleFirstOpenTab=document.querySelector('ui-tab[name="'+this.name+'"][open]');if(eleFirstOpenTab){eleFirstOpenTab.autoSwitch()}}}connectedCallback(){if(!this.closest('a, button')&&!this.querySelector('a, button')){this.setAttribute('tabindex','0')}let eleTarget=this.element.target;let eleTrigger=this.element.trigger;if(eleTrigger){eleTrigger.setAttribute('role','tab')}if(eleTarget){eleTarget.setAttribute('role','tabpanel')}this.events();let objURLParams=new URLSearchParams(window.location.search);objURLParams.forEach((value,key)=>{if(eleTrigger&&eleTarget&&this.name==key&&eleTarget.id==value&&!eleTrigger.hasAttribute('open')){eleTrigger.click()}});this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-tab'}}));this.isConnectedCallback=true;this.dispatchEvent(new CustomEvent('DOMContentLoaded'));if(eleTrigger!=this){eleTrigger.dispatchEvent(new CustomEvent('DOMContentLoaded'));if(eleTrigger.hasAttribute('is-tab')){eleTrigger.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-tab'}}));eleTrigger.setAttribute('defined','')}}}attributeChangedCallback(name,newValue,oldValue){if(this.element&&name==='open'&&typeof newValue!=typeof oldValue){const elePanel=this.element.target;if(!elePanel){return}if(this.open){elePanel.classList.add('active');this.setAttribute('aria-selected','true');this.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-tab'}}))}else{elePanel.classList.remove('active');this.setAttribute('aria-selected','false');this.dispatchEvent(new CustomEvent('hide',{detail:{type:'ui-tab'}}))}let eleTrigger=this.element.trigger;if(eleTrigger&&eleTrigger!=this){eleTrigger.toggleAttribute('open',this.open)}if(eleTrigger&&this.name&&/ui-tab/.test(eleTrigger.className)){eleTrigger.parentElement.style.setProperty('--ui-tab-width',eleTrigger.clientWidth);eleTrigger.parentElement.style.setProperty('--ui-tab-left',eleTrigger.offsetLeft)}this.dispatchEvent(new CustomEvent('switch'))}}}NodeList.prototype.tab=function(j={}){const o=this;let strName=j.name||'';for(var k m o){if(!strName&&k.getAttribute('name')){strName=k.getAttribute('name')}}if(!strName){strName=('tab'+Math.random()).replace('0.','')}for(let k m o){k.setAttribute('name',strName);k['ui-tab']=new Tab(k,j)}};if(!customElements.get('ui-tab')){customElements.define('ui-tab',Tab)}window.Tab=Tab;(function(){function n(){document.querySelectorAll('[is-tab]').forEach(function(j){if(!j['ui-tab']){j['ui-tab']=new Tab(j)}});var y=new MutationObserver(function(o){o.forEach(function(m){m.addedNodes.forEach(function(k){if(!k.tagName){return}if(k.hasAttribute('is-tab')){if(!k['ui-tab']){k['ui-tab']=new Tab(k)}}else{k.querySelectorAll('[is-tab]').forEach(function(j){if(!j['ui-tab']){j['ui-tab']=new Tab(j)}})}})})});y.observe(document.body,{childList:true,subtree:true})}if(document.readyState!='loading'){n()}else{window.addEventListener('DOMContentLoaded',n)}})();class Select extends HTMLSelectElement{static get observedAttributes(){return['multiple','disabled','width']}constructor(){super();if(!this.element){this.element={button:null,combobox:null,datalist:null}}this.observer=null;this.resizeObserver=null;this.setProperty()}static addClass(){return['ui','select'].concat([].slice.call(arguments)).join('-')}set multiple(value){return this.toggleAttribute('multiple',Boolean(value))}get multiple(){return this.hasAttribute('multiple')}render(){this.create();this.refresh();this.events()}remove(){if(this.parentElement){this.parentElement.removeChild(this)}if(this.element.combobox){this.element.combobox.remove()}}getData(){if(!this.options.length){return[{html:''}]}let eleOptgroups=this.querySelectorAll('optgroup');let isIntent=!!this.querySelector('optgroup[label]');if(eleOptgroups.length){let arrData=[];eleOptgroups.forEach(optgroup=>{arrData.push({html:optgroup.label,disabled:optgroup.disabled,className:optgroup.className,divide:!isIntent});optgroup.querySelectorAll('option').forEach(option=>{arrData.push({html:option.innerHTML,value:option.value,selected:option.selected,disabled:optgroup.disabled||option.disabled,className:option.className,intent:isIntent})})});return arrData}return[].slice.call(this.options).map(option=>{return{html:option.innerHTML,value:option.value,selected:option.selected,disabled:option.disabled,className:option.className}})}get width(){let strAttrWidth=this.getAttribute('width');if(strAttrWidth&&Number(strAttrWidth)===parseFloat(strAttrWidth)){strAttrWidth=strAttrWidth+'px'}return strAttrWidth}set width(value){if(/\d/.test(value)==false){return}this.setAttribute('width',value)}getWidth(){return this.style.width||this.width||this.offsetWidth+'px'}setWidth(){if(this.element.combobox){const width=this.getWidth();this.element.combobox.style.width=width;this.style.transform='';if(width.lastIndexOf('%')!==-1&&this.originPosition!='absolute'&&this.originPosition!='fixed'){this.style.transform=`scaleX(${this.parentElement.clientWidth*parseFloat(width)*0.01/this.offsetWidth})`}}}create(){if(this.element&&this.element.combobox){return}const strId=('lulu_'+(this.id||Math.random())).replace('0.','');const BUTTON_CLASS=Select.addClass('button');const DATALIST_CLASS=Select.addClass('datalist');let strOriginPosition=window.getComputedStyle(this).position;this.originPosition=strOriginPosition;this.insertAdjacentHTML('afterend',`<div role="combobox"style="width: ${this.getWidth()}">${!this.multiple?`<a class="${BUTTON_CLASS}"data-target="${strId}"aria-owns="${strId}"aria-expanded="false"style="display: ${this.multiple ? 'none' : 'block'}"${!this.disabled?'href="javascript:;" ':''}role="button"/></a>`:''}<div id="${strId}"role="listbox"aria-expanded="false"class="${DATALIST_CLASS}"${!this.multiple?'aria-hidden="true"':''}></div></div>`);let eleCombobox=this.nextElementSibling;Object.assign(this.element,{combobox:eleCombobox,button:eleCombobox.querySelector(`.${BUTTON_CLASS}`),datalist:eleCombobox.querySelector(`.${DATALIST_CLASS}`)});if(strOriginPosition!='fixed'){this.style.position='absolute'}this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}refresh(data){const isMultiple=this.multiple;const eleSelect=this;const eleCombobox=this.element.combobox;const eleButton=this.element.button;const eleDatalist=this.element.datalist;if(!eleDatalist){return}const strId=eleDatalist.id;data=data||this.getData();eleCombobox.className=(`${eleSelect.className}${Select.addClass()}`).trim();if(isMultiple){eleCombobox.style.height=eleSelect.style.height||(eleSelect.offsetHeight+'px')}else if(eleSelect[eleSelect.selectedIndex]){const strHtmlSelected=eleSelect[eleSelect.selectedIndex].innerHTML;eleButton.innerHTML=`<span class="${Select.addClass('text')}">${strHtmlSelected}</span><i class="${Select.addClass('icon')}"aria-hidden="true"></i>`}let index=-1;eleDatalist.innerHTML=data.map((obj)=>{let arrCl=[Select.addClass('datalist','li'),obj.className];if(obj.selected)arrCl.push('selected');if(obj.disabled)arrCl.push('disabled');if(typeof obj.divide!='undefined'){if(obj.divide){arrCl=[Select.addClass('datalist','hr'),obj.className];return`<div class="${arrCl.join(' ')}"></div>`}return`<div class="${arrCl.join(' ')}"role="heading">${obj.html}</div>`}index++;if(obj.intent){arrCl.push(Select.addClass('intent'))}if(!obj.html){return`<span class="${arrCl.join(' ')} disabled"></span>`}if(isMultiple){return`<a class="${arrCl.join(' ')}"data-index=${index}>${obj.html}</a>`}return`<a ${obj.disabled?'':' href="javascript:" '}class="${arrCl.join(' ')}"data-index=${index}data-target="${strId}"role="option"aria-selected="${obj.selected}">${obj.html}</a>`}).join('')}events(){if(this.multiple){this.createMultipleEvent()}else{this.createNormalEvent()}}createNormalEvent(){if(!document.isSelectMouseEvent){document.addEventListener('click',(event)=>{var target=event.target;if(!target||!target.closest){return}const eleCombobox=target.closest('.'+Select.addClass());const eleSelect=eleCombobox&&eleCombobox.previousElementSibling;if(!eleSelect||!eleSelect.element){return}const objElement=eleSelect.element;const eleButton=objElement.button;const eleDatalist=objElement.datalist;if(eleButton.contains(target)){if(eleSelect.disabled)return false;eleCombobox.classList.toggle('active');if(eleCombobox.classList.contains('active')){var isOverflow=eleDatalist.getBoundingClientRect().bottom+window.pageYOffset>Math.max(document.body.clientHeight,window.innerHeight);eleCombobox.classList[isOverflow?'add':'remove']('reverse');eleButton.setAttribute('aria-expanded','true');var arrDataScrollTop=eleCombobox.dataScrollTop;var eleDatalistSelected=eleDatalist.querySelector('.selected');if(arrDataScrollTop&&eleDatalistSelected&&arrDataScrollTop[1]===eleDatalistSelected.getAttribute('data-index')&&arrDataScrollTop[2]===eleDatalistSelected.innerText){eleDatalist.scrollTop=arrDataScrollTop[0];delete eleCombobox.dataScrollTop}}else{eleCombobox.classList.remove('reverse');eleButton.setAttribute('aria-expanded','false')}}else if(eleDatalist.contains(target)){var eleList=target;var eleOption=null;var isDisabled=eleList.classList.contains('disabled');var indexOption=eleList.getAttribute('data-index');var scrollTop=eleDatalist.scrollTop;eleCombobox.dataScrollTop=[scrollTop,indexOption,eleList.innerText];if(!isDisabled){eleOption=eleSelect[indexOption];if(eleOption){eleOption.selected=true}}eleCombobox.classList.remove('active');eleButton.setAttribute('aria-expanded','false');eleButton.focus();eleButton.blur();if(!isDisabled){eleSelect.refresh();eleSelect.dispatchEvent(new CustomEvent('change',{'bubbles':true}))}}});document.addEventListener('mouseup',(event)=>{var target=event.target;if(!target){return}const eleCombobox=document.querySelector('select+.ui-select.active');if(eleCombobox&&!eleCombobox.contains(target)){eleCombobox.classList.remove('active');eleCombobox.classList.remove('reverse')}});document.isSelectMouseEvent=true}}createMultipleEvent(){const eleDatalist=this.element.datalist;this.addEventListener('change',()=>{this.refresh()});this.addEventListener('scroll',()=>{eleDatalist.scrollTop=this.scrollTop});this.addEventListener('mousedown',()=>{this.setAttribute('data-active','true')});this.addEventListener('mousemove',(event)=>{if(this.getAttribute('data-active')){this.refresh();return}var clientY=event.clientY;var clientX=event.clientX;var elesFromPoint=document.elementsFromPoint(clientX,clientY);var eleListAll=eleDatalist.querySelectorAll('a');for(var indexList=0;indexList<eleListAll.length;indexList++){var eleList=eleListAll[indexList];eleList.removeAttribute('href');if([...elesFromPoint].includes(eleList)){if(!eleList.classList.contains('selected')&&!eleList.classList.contains('disabled')){eleList.href='javascript:'}break}}});this.addEventListener('mouseout',()=>{var eleListAllWithHref=eleDatalist.querySelectorAll('a[href]');eleListAllWithHref.forEach(function(j){j.removeAttribute('href')})});document.addEventListener('mouseup',()=>{this.removeAttribute('data-active')})}setProperty(){Object.defineProperty(this,'value',{configurable:true,enumerable:true,writeable:true,get:()=>{let valArr=[];[].slice.call(this.options).forEach((option)=>{if(option.selected){valArr.push(option.value)}});return valArr.join()},set:(value)=>{let isMatch=false;value=this.multiple?value.split(','):[value.toString()];[].slice.call(this.options).forEach((option)=>{if(!this.multiple&&isMatch)return;if(value.indexOf(option.value)!==-1){option.selected=isMatch=true}else if(this.multiple){option.selected=false}})}});const props=Object.getOwnPropertyDescriptor(HTMLSelectElement.prototype,'selectedIndex');Object.defineProperty(HTMLSelectElement.prototype,'selectedIndex',{...props,set(v){if(this.options[v]){this.options[v].selected=true}}})}attributeChangedCallback(name){const eleButton=this.element.button;if(name==='disabled'){if(!eleButton)return;if(this.disabled){eleButton.removeAttribute('href')}else{eleButton.setAttribute('href','javascript:;')}}else if(name==='multiple'){if(this.element.combobox){this.element.combobox.remove();this.render()}}else if(name=='width'){this.setWidth()}}connectedCallback(){this.observer=new MutationObserver((mutationsList)=>{let isRefresh=true;mutationsList.forEach(mutation=>{if(mutation.type=='attributes'&&mutation.target.hasAttribute('selected')){mutation.target.selected=true;isRefresh=false}});if(isRefresh){this.refresh()}});this.resizeObserver=new ResizeObserver(()=>{this.setWidth()});this.observer.observe(this,{childList:true,subtree:true,attributes:true,attributeFilter:['selected']});this.resizeObserver.observe(this);this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-select'}}));this.isConnectedCallback=true;this.render()}disconnectedCallback(){this.remove();this.observer.disconnect();this.resizeObserver.disconnect()}}const propOptionSelected=Object.getOwnPropertyDescriptor(HTMLOptionElement.prototype,'selected');Object.defineProperty(HTMLOptionElement.prototype,'selected',{...propOptionSelected,set(value){propOptionSelected.set.call(this,value);if(this.parentElement&&this.parentElement.refresh){this.parentElement.refresh()}}});if(!customElements.get('ui-select')){customElements.define('ui-select',Select,{extends:'select'})}class Drop extends HTMLElement{static get observedAttributes(){return['open','target']}static get defaults(){return{eventtype:'click',position:'7-5'}}constructor(eleTrigger,eleTarget,options){super();options=options||{};this.params=this.params||{};this.params=new Proxy(this.params,{get:(params,prop)=>{if(!prop){return}prop=prop.toLowerCase();let value=params[prop];let eleTrigger=this.element.trigger;if(typeof value=='undefined'){value=eleTrigger.getAttribute(prop)||eleTrigger.dataset[prop];if(prop=='width'){if(eleTrigger!==this){value=eleTrigger.dataset[prop]}else{value=eleTrigger.getAttribute(prop)}}if(typeof value=='undefined'&&Drop.defaults[prop]){value=Drop.defaults[prop]}}return value},set:(params,prop,value)=>{params[prop.toLowerCase()]=value;return true}});let objElement=this.element||{};this.element=new Proxy(objElement,{get:(target,prop)=>{if(prop=='target'){let strIdTarget=this.getAttribute('target');let eleTarget=target[prop];if(!eleTarget&&strIdTarget){eleTarget=document.getElementById(strIdTarget)}return eleTarget}if(prop=='trigger'){return target[prop]||this}return target[prop]},set:(target,prop,value)=>{if(typeof value=='string'){value=document.getElementById(value)||document.querySelector(value)}if(value&&typeof value.nodeType!='number'){return false}target[prop]=value;if(prop=='target'&&value){let eleTarget=value;let strId=eleTarget.id;if(!strId){strId=('lulu_'+Math.random()).replace('0.','');eleTarget.id=strId}let eleTrigger=this.element.trigger;if(eleTrigger==this){if(this.target!=strId){this.target=strId}}else if(eleTrigger){let strAttrTarget=eleTrigger.dataset.target;if(strAttrTarget&&document.querySelector('datalist[id="'+strAttrTarget+'"]')){eleTrigger.setAttribute('data-target2',strId)}else{eleTrigger.setAttribute('data-target',strId)}}}return true}});[...arguments].forEach(function(j){if(typeof j=='object'&&j&&!j.tagName){options=j}});if(eleTrigger){this.element.trigger=eleTrigger}eleTrigger=this.element.trigger;if(eleTrigger){if(eleTarget&&eleTarget!==options){this.element.target=eleTarget}else if(!eleTarget&&eleTrigger.dataset&&eleTrigger.dataset.target){this.element.target=eleTrigger.dataset.target}}this.setParams(options);if(this.open){if(document.readyState!='loading'){this.show()}else{window.addEventListener('DOMContentLoaded',()=>{this.show()})}}if(eleTrigger!==this){this.addEventListener('connected',function(){this.remove()});eleTrigger['ui-drop']=this;document.body.append(this)}}get htmlFor(){return this.getAttribute('for')}set htmlFor(v){this.setAttribute('for',v)}get target(){return this.getAttribute('target')}set target(value){this.setAttribute('target',value)}get eventType(){return this.getAttribute('eventtype')||'click'}set eventType(value){this.setAttribute('eventtype',value)}get open(){return this.hasAttribute('open')}set open(value){this.toggleAttribute('open',value)}setParams(options){options=options||{};let funCallShow=options.onShow;let funCallHide=options.onHide;if(typeof funCallShow=='function'){this.addEventListener('show',function(j){funCallShow.call(this,j)});delete options.onShow}if(typeof funCallHide=='function'){this.addEventListener('hide',function(j){funCallHide.call(this,j)});delete options.onHide}Object.assign(this.params,options||{})}events(isIgnoreTarget){let eleTrigger=this.element.trigger;let eleTarget=this.element.target;if(!eleTarget&&!isIgnoreTarget){return}if(eleTarget&&eleTarget.matches('datalist')){return}const objParams=this.params;const funGetClosestChild=(element)=>{if(!objParams.selector){return null}const eleClosestSelector=element.closest(objParams.selector);if(eleTrigger.contains(eleClosestSelector)==false){return null}return eleClosestSelector};switch(objParams.eventType){case'null':{break}case'hover':case'mouseover':case'mouseenter':{if(!eleTarget){setTimeout(()=>{if(this.element.target){this.events()}},1);return}eleTarget.timerHover=null;eleTarget.timerHold=null;if(!eleTrigger.isBindDropEvents){eleTrigger.addEventListener('mouseover',event=>{if(event.relatedTarget!==event.target){const eleClosestSelector=funGetClosestChild(event.target);if(eleClosestSelector){this.element.trigger=eleClosestSelector}if(!objParams.selector||eleClosestSelector){eleTarget.timerHover=setTimeout(()=>{this.show()},150);clearTimeout(eleTarget.timerHold)}}});eleTrigger.addEventListener('mouseout',(event)=>{if(this.element.trigger==event.target||this.element.trigger.contains(event.target)){clearTimeout(eleTarget.timerHover);eleTarget.timerHold=setTimeout(()=>{this.hide()},200)}});if(eleTarget&&!eleTarget.isBindDropHover){eleTarget.addEventListener('mouseenter',()=>{clearTimeout(eleTarget.timerHold)});eleTarget.addEventListener('mouseleave',()=>{eleTarget.timerHold=setTimeout(()=>{let eleRelatedTrigger=eleTarget.element.trigger;if(eleRelatedTrigger&&eleRelatedTrigger.eventType=='hover'){eleRelatedTrigger.hide()}},100)});eleTarget.isBindDropHover=true}eleTrigger.addEventListener('click',event=>{if(!window.isKeyEvent){return}event.preventDefault();const eleClosestSelector=funGetClosestChild(event.target);if(eleClosestSelector){this.element.trigger=eleClosestSelector}if(!objParams.selector||eleClosestSelector){if(!this.open){this.show()}else{this.hide()}}});if(this.eventType!='hover'){this.eventType='hover'}}break}case'click':case'contextmenu':{if(!eleTrigger.isBindDropEvents||eleTrigger.isBindDropEvents!==objParams.eventType){eleTrigger.addEventListener(objParams.eventType,event=>{event.preventDefault();const eleClosestSelector=funGetClosestChild(event.target);if(eleClosestSelector){this.element.trigger=eleClosestSelector}if(!objParams.selector||eleClosestSelector){if(objParams.eventType=='contextmenu'){objParams.position=[event.pageX,event.pageY];this.show();return}if(!this.open){this.show()}else{this.hide()}}})}break}default:{break}}if(objParams.eventType!='null'&&!eleTrigger.isBindDocMouseUp){document.addEventListener('mouseup',event=>{let eleClicked=event&&event.target;if(!eleClicked||!this.open){return}let eleTrigger=this.element.trigger;let eleTarget=this.element.target;if(eleTrigger.contains(eleClicked)==false&&(!eleTarget||eleTarget.contains(eleClicked)==false)){this.hide()}});eleTrigger.isBindDocMouseUp=true}eleTrigger.isBindDropEvents=objParams.eventType||true;window.addEventListener('resize',()=>{this.position()});this.dispatchEvent(new CustomEvent('DOMContentLoaded'));if(eleTrigger!=this){eleTrigger.dispatchEvent(new CustomEvent('DOMContentLoaded'))}}position(){let eleTrigger=this.element.trigger;let eleTarget=this.element.target;if(this.open&&eleTarget&&window.getComputedStyle(eleTrigger).display!='none'){eleTrigger.follow(eleTarget,{offsets:this.params.offsets,position:this.params.position,edgeAdjust:this.params.edgeAdjust})}return this}show(){let eleTrigger=this.element.trigger;let eleTarget=this.element.target;if(eleTarget&&document.body.contains(eleTarget)==false){document.body.appendChild(eleTarget)}if(eleTarget){eleTarget.style.position='absolute';eleTarget.style.display='inline';eleTarget.classList.add('ESC');eleTarget.tabIndex=-1;eleTarget.focus({preventScroll:true});eleTarget.element=eleTarget.element||{};eleTarget.element.trigger=this}eleTrigger.setAttribute('aria-expanded','true');if(!this.open){this.open=true}this.position();this.dispatchEvent(new CustomEvent('show'));if(eleTrigger!=this){eleTrigger.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-drop'}}))}return this}hide(){let eleTrigger=this.element.trigger;let eleTarget=this.element.target;if(eleTarget){eleTarget.style.display='none';eleTarget.classList.remove('ESC');if(eleTarget.element){delete eleTarget.element.trigger}}eleTrigger.setAttribute('aria-expanded','false');if(window.isKeyEvent){eleTrigger.focus()}if(this.open){this.open=false}this.dispatchEvent(new CustomEvent('hide'));if(eleTrigger!=this){eleTrigger.dispatchEvent(new CustomEvent('hide',{detail:{type:'ui-drop'}}))}return this}list(eleTrigger,data,options){[...arguments].forEach(argument=>{const strTypeArgument=typeof argument;if(strTypeArgument==='string'){eleTrigger=document.querySelector(argument)}else if(strTypeArgument==='function'){data=argument}else if(strTypeArgument==='object'){if(typeof argument.nodeType==='number'){if(argument.matches('datalist')){data=function(){let eleOptgroups=argument.querySelectorAll('optgroup');let isSubTitle=!!argument.querySelector('optgroup[label]');if(eleOptgroups.length){let arrData=[];eleOptgroups.forEach(optgroup=>{if(isSubTitle){arrData.push({id:'-1',value:optgroup.label,disabled:optgroup.disabled,className:optgroup.className,heading:true})}else{arrData.push({})}optgroup.querySelectorAll('option').forEach(option=>{arrData.push({id:option.value,value:option.innerHTML||option.value,selected:option.selected,disabled:optgroup.disabled||option.disabled,className:option.className,label:option.label,accessKey:option.accessKey})})});return arrData}return[...argument.querySelectorAll('option')].map((option,index)=>{let value=option.innerHTML;let id=option.value;if(!value){value=option.value;id=option.id||index;if(!value){return{}}}return{id:id,value:value,selected:option.selected,className:option.className,disabled:option.disabled,label:option.label,accessKey:option.accessKey}})};if(eleTrigger==argument){eleTrigger=null}}else{eleTrigger=argument}}else if(argument.map){data=argument}else{options=argument}}});if(eleTrigger&&typeof eleTrigger.nodeType!=='number'){eleTrigger=null}eleTrigger=eleTrigger||this.element.trigger;if(!eleTrigger){return this}if(!data){data=[]}const defaults={eventType:'click',offsets:{x:0,y:0},position:'4-1',selector:'',width:'',onShow:()=>{},onHide:()=>{},onSelect:()=>{}};const objParams={};options=options||{};Object.keys(defaults).forEach(prop=>{objParams[prop]=options[prop]||this.params[prop]||defaults[prop]});const SELECTED='selected';const DISABLED='disabled';const CL={add:function(){return['ui-droplist'].concat([].slice.call(arguments)).join('-')},toString:()=>{return'ui-droplist'}};let strMethod='innerHTML';if(eleTrigger.matches('input')){strMethod='value'}let eleTarget=document.createElement('div');eleTarget.setAttribute('role','listbox');eleTarget.setAttribute('tabindex','-1');if(/^\d+$/.test(objParams.width)){eleTarget.style.width=objParams.width+'px'}else{eleTarget.style.width=objParams.width}eleTarget.className=CL.add('x');this.data=data;let arrListData=data;let funGetMatchIndex=(arr)=>{let strMatchIndex='-1';let isSomeItemSelected=false;let funRecursion=(arrData,arrIndex)=>{if(!arrData||!arrData.length){return}arrData.forEach((objData,numIndex)=>{const arrCurrentIndex=arrIndex.concat(numIndex);if(objData&&objData.data){funRecursion(objData.data,arrCurrentIndex);return}if(objData&&objData[SELECTED]&&!objData[DISABLED]&&objData.value){eleTrigger[strMethod]=objData.value;strMatchIndex=arrCurrentIndex.join('-')}if(objData&&objData[SELECTED]){isSomeItemSelected=true}})};funRecursion(arr,[]);const strTrigger=(eleTrigger[strMethod]||'').trim();if(isSomeItemSelected==false&&strTrigger){funRecursion=(arrData,arrIndex)=>{if(!arrData||!arrData.length){return}arrData.forEach((objData,numIndex)=>{const arrCurrentIndex=arrIndex.concat(numIndex);if(objData&&objData.data){funRecursion(objData.data,arrCurrentIndex);return}if(typeof objData.value==='string'&&objData.value.trim()==strTrigger){strMatchIndex=arrCurrentIndex.join('-');objData[SELECTED]=true}})};funRecursion(arr,[])}return strMatchIndex};let strMatchIndex=-1;if(typeof data!=='function'&&data.length&&data.map){strMatchIndex=funGetMatchIndex(arrListData)}const funRender=(eleTarget,arrListData)=>{if(typeof arrListData==='function'){arrListData=arrListData();strMatchIndex=funGetMatchIndex(arrListData)}if(!arrListData||!arrListData.length){arrListData=[{value:'没有数据',disabled:true}]}else{arrListData=arrListData.map(arrData=>{if(typeof arrData=='string'&&arrData!=='-'){return{value:arrData}}return arrData})}let isSomeItemSelected=arrListData.some(objData=>{return objData&&objData[SELECTED]});eleTarget.innerHTML=(()=>{let strHtml='';const funStep=(arrData,arrIndex)=>{let strHtmlStep='';arrData.forEach((objData,numIndex)=>{if(objData=='-'||objData===null||JSON.stringify(objData)=='{}'){strHtmlStep+='<hr class="'+CL.add('hr')+'">';return}const arrCurrentIndex=arrIndex.concat(numIndex);const strAttrHref=objData.href||'javascript:';let strAttrTarget='';if(objData.target){strAttrTarget=' target="'+objData.target+'"'}let strAttrSublist='';if(objData.data){strAttrSublist=' data-sublist'}let strAttrLabel='';if(objData.label){strAttrLabel=' aria-label="'+objData.label+'"'}let strAttrAccess='';if(objData.accessKey){strAttrAccess=`accesskey="${objData.accessKey}"`}if(isSomeItemSelected==false&&strMatchIndex==arrCurrentIndex.join('-')){objData[SELECTED]=true}let strAttrClass=CL.add('li')+' '+objData.className;if(objData[SELECTED]){strAttrClass=strAttrClass+' '+SELECTED}strAttrClass=strAttrClass.trim();if(objData.heading==true){if(objData.disabled){strAttrClass+=' disabled'}strHtmlStep+='<div class="'+strAttrClass+'"'+strAttrLabel+' role="heading">'+objData.value+'</div>';return}if(objData[DISABLED]!=true){strHtmlStep+='<a href="'+strAttrHref+'"'+strAttrTarget+strAttrLabel+strAttrAccess+' class="'+strAttrClass+'" data-index="'+arrCurrentIndex.join('-')+'" role="option" aria-selected="'+(objData[SELECTED]||'false')+'" '+strAttrSublist+'>'+objData.value+'</a>';if(objData.data){strHtmlStep+='<div class="'+CL.add('xx')+'"><div class="'+CL.add('x')+'" role="listbox">'+funStep(objData.data,arrCurrentIndex)+'</div></div>'}}else{strHtmlStep+='<span class="'+strAttrClass+'"'+strAttrLabel+strAttrAccess+'>'+objData.value+'</span>'}});return strHtmlStep};strHtml+=funStep(arrListData,[]);return strHtml})();eleTarget.listData=arrListData};this.setParams({eventType:objParams.eventType,offsets:objParams.offsets,selector:objParams.selector,position:objParams.position,onShow:function(){funRender.call(this,eleTarget,this.data);objParams.onShow.apply(this,arguments)},onHide:objParams.onHide});this.element.trigger=eleTrigger;this.element.target=eleTarget;this.events();eleTarget.addEventListener('click',event=>{if(event.target.nodeType!=1||!event.target.closest){return}const eleClicked=event.target.closest('a');if(!eleClicked){return}const arrListData=eleTarget.listData;const strIndex=eleClicked.getAttribute('data-index');if(!strIndex){return}let objItemData=null;strIndex.split('-').forEach(numIndex=>{if(objItemData===null){objItemData=arrListData[numIndex]}else if(objItemData.data){objItemData=objItemData.data[numIndex]}else{objItemData=objItemData[numIndex]}});if(!objItemData){return}if(typeof eleClicked.getAttribute('data-sublist')==='string'){eleClicked.classList.add(SELECTED);const eleSubTarget=eleClicked.nextElementSibling.querySelector('.'+CL.add('x'));if(!eleSubTarget){return}eleSubTarget.style.transform='';eleSubTarget.classList.remove('reverse');const objBounding=eleSubTarget.getBoundingClientRect();if(objBounding.right>document.documentElement.clientWidth){eleSubTarget.classList.add('reverse')}let offsetTop=0;if(objBounding.bottom>window.innerHeight){offsetTop=window.innerHeight-objBounding.bottom}eleSubTarget.style.transform='translateY('+offsetTop+'px)';return}if(strIndex!=strMatchIndex){let objLastItemData=null;if(strMatchIndex!='-1'){strMatchIndex.split('-').forEach(numIndex=>{if(objLastItemData===null){objLastItemData=arrListData[numIndex]}else if(objLastItemData.data){objLastItemData=objLastItemData.data[numIndex]}else{objLastItemData=objLastItemData[numIndex]}});if(objLastItemData){delete objLastItemData[SELECTED]}}objItemData[SELECTED]=true;strMatchIndex=strIndex}(this.params.onSelect||objParams.onSelect).call(this,objItemData,eleClicked);this.dispatchEvent(new CustomEvent('select',{detail:{data:objItemData,target:eleClicked}}));if(eleTrigger!=this){eleTrigger.dispatchEvent(new CustomEvent('select',{detail:{type:'ui-drop',data:objItemData,target:eleClicked}}))}if(objParams.eventType!='contextmenu'&&objParams.selector==''&&!objItemData.href){eleTrigger[strMethod]=objItemData.value}this.hide()});eleTarget.addEventListener('mouseover',event=>{if(event.target.nodeType!=1||!event.target.closest){return}const eleHovered=event.target.closest('a');if(!eleHovered){return}const eleItemSublist=eleHovered.parentElement.querySelector('.'+SELECTED+'[data-sublist]');if(eleItemSublist&&eleItemSublist!=eleHovered){eleItemSublist.classList.remove(SELECTED)}if(eleHovered.classList.contains(SELECTED)==false&&typeof eleHovered.getAttribute('data-sublist')==='string'){eleHovered.click()}});return this}panel(eleTrigger,options){if(arguments.length===2){eleTrigger=arguments[0];options=arguments[1]}else if(arguments.length===1){options=arguments[0];if(options.matches&&options.matches('dialog')){let eleTarget=options;let strButtons=eleTarget.dataset.buttons||'';options={content:eleTarget.innerHTML,title:eleTarget.title,buttons:[{value:strButtons.split(',')[0].trim(),events:()=>{eleTarget.dispatchEvent(new CustomEvent('ensure',{detail:{drop:this}}))}},{value:(strButtons.split(',')[1]||'').trim(),events:()=>{eleTarget.dispatchEvent(new CustomEvent('cancel',{detail:{drop:this}}));this.hide()}}]}}eleTrigger=null}if(typeof eleTrigger==='string'){eleTrigger=document.querySelector(eleTrigger)}eleTrigger=eleTrigger||this.element.trigger;if(!eleTrigger){return this}const defaults={title:'',content:'',buttons:[{},{}],width:'auto',eventType:'click',selector:'',offsets:{x:0,y:0},position:'4-1',onShow:()=>{},onHide:()=>{}};const objParams=Object.assign({},defaults,options||{});const CL={add:function(){return['ui-dropanel'].concat([].slice.call(arguments)).join('-')},toString:()=>{return'ui-dropanel'}};const elePanel=document.createElement('div');elePanel.className=CL.add('x');if(/^\d+$/.test(objParams.width)){elePanel.style.width=objParams.width+'px'}else if(/^\d+\D+$/.test(objParams.width)){elePanel.style.width=objParams.width}const eleTitle=document.createElement('h5');eleTitle.className=CL.add('title');eleTitle.innerHTML=objParams.title;const eleClose=document.createElement('button');eleClose.setAttribute('aria-label','关闭');eleClose.className=CL.add('close');const eleContent=document.createElement('content');eleContent.className=CL.add('content');eleContent.innerHTML=objParams.content;const eleFooter=document.createElement('div');eleFooter.className=CL.add('footer');elePanel.appendChild(eleTitle);elePanel.appendChild(eleClose);elePanel.appendChild(eleContent);elePanel.appendChild(eleFooter);this.setParams({eventType:objParams.eventType,offsets:objParams.offsets,selector:objParams.selector,position:objParams.position,onShow:objParams.onShow,onHide:objParams.onHide});Object.assign(this.element,{trigger:eleTrigger,target:elePanel,panel:elePanel,title:eleTitle,close:eleClose,content:eleContent,footer:eleFooter});this.events();eleClose.addEventListener('click',()=>{this.hide()},false);objParams.buttons.forEach((objBtn,numIndex)=>{objBtn=objBtn||{};let strType=objBtn.type||'';if(!strType&&numIndex==0){strType=objParams.buttons.length>1?'danger':'primary'}let strValue=objBtn.value;if(!strValue){strValue=['确定','取消'][numIndex]}let objEvents=objBtn.events||{click:()=>{this.hide()}};if(typeof objEvents==='function'){objEvents={click:objEvents}}let eleBtn=null;if(objBtn['for']){eleBtn=document.createElement('label');eleBtn.setAttribute('for',objBtn['for']);eleBtn.setAttribute('role','button')}else if(objBtn.form){eleBtn.setAttribute('form',objBtn.form);eleBtn.type='submit'}else{eleBtn=document.createElement('button');this.element['button'+numIndex]=eleBtn}eleBtn.innerHTML=strValue;eleBtn.className=String(CL).replace('dropanel','button')+' '+CL.add('button')+' '+(objBtn.className||'');if(strType){eleBtn.setAttribute('data-type',strType)}this.element['button'+numIndex]=eleBtn;for(let strEventType in objEvents){eleBtn.addEventListener(strEventType,event=>{event.drop=this;objEvents[strEventType](event)},false)}this.element.footer.appendChild(eleBtn)});return this}connectedCallback(){let eleTarget=this.element.target;let eleTrigger=this.element.trigger;if(eleTrigger.open){eleTrigger.setAttribute('aria-expanded','true')}else{eleTrigger.setAttribute('aria-expanded','false')}if(!eleTarget){this.events(eleTrigger===this)}else if(eleTarget.matches('datalist')){this.list(eleTarget)}else if(eleTarget.matches('dialog')){this.panel(eleTarget)}else{this.events()}if(!this.querySelector('a, button')&&!this.closest('a, button')){this.tabIndex=0;this.role='button'}this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-drop'}}));if(eleTrigger!=this&&eleTrigger.hasAttribute('is-drop')){eleTrigger.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-drop'}}));eleTrigger.setAttribute('defined','')}this.isConnectedCallback=true}attributeChangedCallback(name,oldValue,newValue){if(name=='target'){let eleTarget=document.getElementById(newValue);if(eleTarget){this.element.target=eleTarget}}else if(name=='open'){let strAriaExpanded=this.element.trigger.getAttribute('aria-expanded');if(this.open&&strAriaExpanded=='false'){this.show()}else if(!this.open&&strAriaExpanded=='true'){this.hide()}}}}window.Drop=Drop;if(!customElements.get('ui-drop')){customElements.define('ui-drop',Drop)}HTMLElement.prototype.drop=function(j,k){if(!this.matches('ui-drop, [is-drop]')&&!this['ui-drop']){this['ui-drop']=new Drop(this,j,k)}return this};const initAllIsDropAttrAction=(ele)=>{const eleDrops=ele||document.querySelectorAll('[is-drop]');eleDrops.forEach(eleTrigger=>{let eleTargetId=eleTrigger.getAttribute('is-drop');if(eleTargetId&&!eleTrigger.dataset.target){eleTrigger.dataset.target=eleTargetId}eleTargetId=eleTrigger.dataset.target;let eleTarget=eleTargetId&&document.getElementById(eleTargetId);if(eleTarget){eleTrigger['ui-drop']=new Drop(eleTrigger,eleTarget)}})};const autoInitAndWatchingIsDropAttr=()=>{initAllIsDropAttrAction();const observer=new MutationObserver(mutationsList=>{mutationsList.forEach(mutation=>{mutation.addedNodes&&mutation.addedNodes.forEach(eleAdd=>{if(!eleAdd.tagName){return}if(eleAdd.hasAttribute('is-drop')){initAllIsDropAttrAction([eleAdd])}else{initAllIsDropAttrAction(eleAdd.querySelectorAll('[is-drop]'))}})})});observer.observe(document.body,{childList:true,subtree:true})};if(document.readyState!='loading'){autoInitAndWatchingIsDropAttr()}else{window.addEventListener('DOMContentLoaded',autoInitAndWatchingIsDropAttr)}class Tips extends HTMLElement{static get observedAttributes(){return['title','reverse','for','eventType','align']}constructor(trigger,content,options){super();if(typeof trigger=='string'&&/^#?\w+(?:[-_]\w+)*$/.test(trigger)){trigger=document.getElementById(trigger.replace('#',''))}if(trigger&&trigger.tips){trigger.tips(content,options);return trigger['ui-tips']}this.target=null}get title(){let strTitle=this.getAttribute('title');if(strTitle){this.setAttribute('data-title',strTitle);this.removeAttribute('title')}else{strTitle=this.getAttribute('data-title')||''}return strTitle}set title(value){this.setAttribute('data-title',value);this.setAttribute('aria-label',value)}get reverse(){return this.getAttribute('reverse')!==null||this.classList.contains('reverse')}set reverse(value){if(value){this.setAttribute('reverse','')}else{this.removeAttribute('reverse')}}get htmlFor(){return this.getAttribute('for')}set htmlFor(v){this.setAttribute('for',v)}get align(){return this.getAttribute('align')||'auto'}set align(v){this.setAttribute('align',v)}get eventType(){return this.getAttribute('eventtype')||'hover'}set eventType(v){this.setAttribute('eventtype',v)}get trigger(){const htmlFor=this.htmlFor;let eleTrigger;if(htmlFor){eleTrigger=document.getElementById(htmlFor)}return eleTrigger||this}create(){let eleTrigger=this.trigger;let strContent=this.title;let eleTips=document.createElement('div');eleTips.classList.add('ui-tips-x');eleTips.innerHTML=strContent;if(!eleTrigger.getAttribute('aria-label')){const strRandomId='lulu_'+(Math.random()+'').replace('0.','');eleTrigger.setAttribute('aria-labelledby',strRandomId)}document.body.appendChild(eleTips);this.target=eleTips;this.dispatchEvent(new CustomEvent('DOMContentLoaded'));if(eleTrigger!=this){eleTrigger.dispatchEvent(new CustomEvent('DOMContentLoaded'))}}show(){let eleTrigger=this.trigger;let strContent=this.title;if(this.target){this.target.innerHTML=strContent}else{this.create()}this.target.style.display='block';let strPosition='5-7';let strAlign=this.align;const isReverse=this.reverse;if(strAlign==='auto'){strAlign=eleTrigger.dataset.align||eleTrigger.dataset.position||'center'}if(strAlign==='center'){strPosition=!isReverse?'5-7':'7-5'}else if(strAlign==='left'){strPosition=!isReverse?'1-4':'4-1'}else if(strAlign==='right'){strPosition=!isReverse?'2-3':'3-2'}else if(/^\d-\d$/.test(strAlign)){strPosition=strAlign}eleTrigger.follow(this.target,{position:strPosition,edgeAdjust:false});eleTrigger.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-tips'}}))}hide(){if(!this.target){return}this.target.style.display='none';this.trigger.dispatchEvent(new CustomEvent('hide',{detail:{type:'ui-tips'}}))}events(){let eleTrigger=this.trigger;const numDelay=100;this.timerTips=null;this.handleMouseEnter=()=>{this.timerTips=setTimeout(()=>{this.show()},numDelay)};this.handleMouseLeave=()=>{clearTimeout(this.timerTips);this.hide()};this.handleFocus=()=>{if(window.isKeyEvent){this.show()}};this.handleMouseUp=(event)=>{const eleTarget=event.target;if(!eleTrigger.contains(eleTarget)&&!this.target.contains(eleTarget)){this.hide()}};if(this.eventType==='hover'){eleTrigger.addEventListener('mouseenter',this.handleMouseEnter);eleTrigger.addEventListener('mouseleave',this.handleMouseLeave);eleTrigger.addEventListener('focus',this.handleFocus);eleTrigger.addEventListener('blur',this.hide)}else if(this.eventType==='click'){eleTrigger.addEventListener('click',this.show);document.addEventListener('mouseup',this.handleMouseUp)}else{this.show()}}connectedCallback(){let eleTrigger=this.trigger;eleTrigger.originTitle=this.title;if(!/^a|input|button|area$/i.test(eleTrigger.tagName)){eleTrigger.setAttribute('tabindex','0');eleTrigger.setAttribute('role','tooltip')}this.events();this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-tips'}}));if(eleTrigger!=this&&eleTrigger.hasAttribute('is-tips')){eleTrigger.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-tips'}}));eleTrigger.setAttribute('defined','')}this.isConnectedCallback=true}}if(!customElements.get('ui-tips')){customElements.define('ui-tips',Tips)}window.Tips=Tips;HTMLElement.prototype.tips=function(j,k={}){if(this.getAttribute('is-tips')==='css'||this.classList.contains('ui-tips')){if(this.title){this.setAttribute('data-title',this.title);this.setAttribute('aria-label',this.title);this.removeAttribute('title')}return}if(typeof j!='string'){k=j||{}}if(this['ui-tips']){if(typeof k.eventType!='undefined'&&k.eventType!='hover'&&k.eventType!='click'){this['ui-tips'].show()}return}let eleTips=document.createElement('ui-tips');if(typeof j=='string'){eleTips.title=j}else{eleTips.title=this.getAttribute('title')||k.content||''}this.removeAttribute('title');if(!this.id){this.id='lulu_'+(Math.random()+'').replace('0.','')}eleTips.htmlFor=this.id;if(k.eventType){eleTips.eventType=k.eventType}if(k.align){eleTips.align=k.align}this['ui-tips']=eleTips;eleTips.addEventListener('connected',function(){this.remove()});document.body.appendChild(eleTips)};(function(){let funTipsInitAndWatching=function(){const tips=document.querySelectorAll('.ui-tips, [is-tips]');tips.forEach((item)=>{item.tips()});var t=new MutationObserver(function(n){if(window.watching===false){return}n.forEach(function(m){var o=m.addedNodes;var y=m.removedNodes;if(o.length){o.forEach(function(j){if(!j.matches){return}if(j.matches('.ui-tips, [is-tips]')){j.tips()}else{j.querySelectorAll('.ui-tips, [is-tips]').forEach(item=>{item.tips()})}})}if(y.length){y.forEach(function(k){if(k.tagName&&k['ui-tips']){k['ui-tips'].remove()}if(k.childNodes.length){k.childNodes.forEach(function(j){if(j['ui-tips']){j['ui-tips'].remove()}})}})}})});t.observe(document.body,{childList:true,subtree:true})};if(document.readyState!='loading'){funTipsInitAndWatching()}else{window.addEventListener('DOMContentLoaded',funTipsInitAndWatching)}})();class LightTip extends HTMLElement{static get observedAttributes(){return['open']}constructor(){super();if(arguments.length){LightTip.custom.apply(this,arguments)}}get type(){return this.getAttribute('type')}get time(){let strTime=this.getAttribute('time');if(!isNaN(strTime)&&!isNaN(parseFloat(strTime))){return Number(strTime)}return 3000}set type(value){this.setAttribute('type',value)}set time(value){this.setAttribute('time',value)}get open(){return this.hasAttribute('open')}set open(value){this.toggleAttribute('open',value)}connectedCallback(){this.setAttribute('tabIndex',0);this.setAttribute('role','tooltip');if(!this.closeMode){this.closeMode='hide'}this.addEventListener('click',()=>{this[this.closeMode]()});this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-lighttip'}}));this.isConnectedCallback=true}attributeChangedCallback(name,oldValue,newValue){if(name=='open'&&typeof oldValue!==typeof newValue){if(typeof newValue==='string'){clearTimeout(this.timer);this.timer=setTimeout(()=>{this[this.closeMode]()},this.time);this.classList.add('ESC');this.zIndex()}else{this.classList.remove('ESC')}this.tabIndex()}}zIndex(){var numZIndexNew=19;this.parentElement&&[...this.parentElement.childNodes].forEach(function(j){if(j.nodeType!=1){return}var k=window.getComputedStyle(j);var m=k.zIndex*1;if(m&&k.display!='none'){numZIndexNew=Math.max(m+1,numZIndexNew)}});this.style.zIndex=numZIndexNew}tabIndex(){var eleContainer=this;var eleLastActive=LightTip.lastActiveElement;if(this.open==true){var eleActiveElement=document.activeElement;if(eleContainer!==eleActiveElement){LightTip.lastActiveElement=eleActiveElement}eleContainer.focus()}else if(eleLastActive&&!eleLastActive.matches('body')){eleLastActive.focus({preventScroll:true});if(!window.isKeyEvent){eleLastActive.blur()}LightTip.lastActiveElement=null}return this}static success(text,time=3000){return this.custom(text,'success',time)}static error(text,time=3000){return this.custom(text,'error',time)}static normal(text,time=3000){return this.custom(text,'normal',time)}static loading(text){text=text||'正在加载中...';return this.custom(text,'loading')}static custom(text='',type,time){if(!this.matches||!this.matches('ui-lighttip')){return LightTip.custom.apply(document.createElement('ui-lighttip'),arguments)}if(typeof text=='object'){type=text;text=''}if(typeof text!='string'){return this}this.closeMode='remove';if(type&&typeof type==='object'){LightTip.custom.call(this,text,type.type,type.time);return}if(typeof type==='number'){LightTip.custom.call(this,text,time,type);return}if(type=='loading'){if(!text){text='正在加载中...'}time=999999}if(time){this.time=time}if(type){this.type=type}this.innerHTML=text;if(type=='success'){this.setAttribute('aria-lable','操作成功')}else if(type=='error'){this.setAttribute('aria-lable','操作失败')}if(!this.parentElement){document.body.appendChild(this);this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}this.show();return this}remove(){if(this.parentElement){this.parentElement.removeChild(this)}this.open=false}show(){if(this.time>0){this.open=true}}hide(){this.open=false}}if(!customElements.get('ui-lighttip')){customElements.define('ui-lighttip',LightTip)}window.LightTip=LightTip;class ErrorTip{static allHide(exclude){ErrorTip.collectionErrorTip.forEach(obj=>{if(exclude!=obj){obj.hide()}})}constructor(element,content,options){const defaults={unique:true,onShow:()=>{},onHide:()=>{}};const objParams={...defaults,...options};let strContent=content;if(typeof strContent=='function'){strContent=strContent()}if(typeof strContent!='string'){return this}const eleTrigger=element;let objErrorTip=eleTrigger.data&&eleTrigger.data.errorTip;if(objErrorTip){objErrorTip.content=strContent;objErrorTip.callback={show:objParams.onShow,hide:objParams.onHide};objErrorTip.element.tips.trigger=eleTrigger;objErrorTip.show();return this}let eleTips;let collectionErrorTip=ErrorTip.collectionErrorTip;const objUniqueErrorTip=collectionErrorTip[collectionErrorTip.length-1];if(objParams.unique==true&&objUniqueErrorTip){eleTips=objUniqueErrorTip.element.tips}else if(objParams.unique==false&&eleTrigger.data&&eleTrigger.data.errorTip){eleTips=eleTrigger.data.errorTip.element.tips}else{eleTips=this.create()}if(objParams.unique==true&&collectionErrorTip.includes(this)==false){collectionErrorTip.push(this)}eleTips.trigger=eleTrigger;this.element={trigger:eleTrigger,tips:eleTips};this.callback={show:objParams.onShow,hide:objParams.onHide};this.params={unique:objParams.unique};this.content=strContent;if(!eleTrigger.data){eleTrigger.data={}}eleTrigger.data.errorTip=this;this.show()}create(){let eleTips=document.createElement('div');eleTips.className='ui-tips-x ui-tips-error';document.body.appendChild(eleTips);this.events(eleTips);return eleTips}events(eleTips){document.addEventListener('keydown',(event)=>{if(!/Control|Shift/i.test(event.code)){ErrorTip.allHide(this);this.hide()}});document.addEventListener('mousedown',(event)=>{const eleActiveElement=document.activeElement;const eleActiveTrigger=eleTips.trigger;const eleTarget=event.target;if(eleActiveElement&&eleActiveTrigger&&eleActiveElement==eleTarget&&eleActiveElement==eleActiveTrigger&&!eleActiveTrigger.getAttribute('data-focus')){return}ErrorTip.allHide(this);this.hide()});window.addEventListener('resize',()=>{ErrorTip.allHide(this);this.hide()})}show(){const objElement=this.element;const eleTips=objElement.tips;const eleTrigger=objElement.trigger;eleTips.innerHTML=this.content;eleTips.style.display='';eleTrigger.follow(eleTips,{position:'5-7',edgeAdjust:false});eleTrigger.setAttribute('aria-label','错误提示：'+this.content);eleTrigger.toggleAttribute('is-error',true);eleTrigger.classList.add('valided');this.display=true;if(this.callback&&this.callback.show){this.callback.show.call(this,eleTrigger,eleTips)}eleTrigger.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-errortip',content:this.content}}))}hide(){if(!this.display){return}const eleTips=this.element.tips;const eleTrigger=this.element.trigger;eleTrigger.removeAttribute('aria-label');eleTrigger.removeAttribute('is-error');eleTips.style.display='none';this.display=false;if(this.callback&&this.callback.hide){this.callback.hide.call(this,eleTrigger,eleTips)}eleTrigger.dispatchEvent(new CustomEvent('hide',{detail:{type:'ui-errortip'}}))}}ErrorTip.collectionErrorTip=[];window.ErrorTip=ErrorTip;HTMLElement.prototype.errorTip=function(content,options={}){new ErrorTip(this,content,options);return this};(()=>{let LOADING='loading';let CL='ui-'+LOADING;Object.defineProperty(HTMLElement.prototype,'loading',{configurable:true,enumerable:true,get(){return!!(this.classList.contains(CL)||this.matches(CL))},set(flag){let action='remove';if(flag){action='add';if(this.loading){return flag}}let strClassButton=CL.replace(LOADING,'button');if(this.classList.contains(strClassButton)||this.getAttribute('is')==strClassButton){this.classList[action](LOADING)}else{this.classList[action](CL)}}});let eleLightLoading=null;let timerLoading=null;Object.defineProperty(document,'loading',{get(){return Boolean(eleLightLoading&&document.querySelector('ui-lighttip[type=loading]'))},set(newValue){if(newValue){if(eleLightLoading){document.body.append(eleLightLoading);eleLightLoading.open=true}else{eleLightLoading=new LightTip({type:'loading'})}let numIndex=0;let arrTips=['正在加载中<ui-dot>...</ui-dot>','仍在加载中<ui-dot>...</ui-dot>','请再稍等片刻<ui-dot>...</ui-dot>'];if(typeof newValue=='string'){arrTips=[newValue]}else if(Array.isArray(newValue)){arrTips=newValue}eleLightLoading.innerHTML=arrTips[numIndex];clearInterval(timerLoading);timerLoading=setInterval(()=>{numIndex++;eleLightLoading.innerHTML=arrTips[numIndex]||arrTips[numIndex-1];if(numIndex>=arrTips.length-1){clearInterval(timerLoading)}},6000)}else{eleLightLoading&&eleLightLoading.remove();clearInterval(timerLoading)}}})})();class Loading extends HTMLElement{constructor(){super()}get size(){return this.getAttribute('size')||2}set size(value){this.setAttribute('size',value)}get rows(){return this.getAttribute('rows')}set rows(value){this.setAttribute('rows',value)}}customElements.define('ui-loading',Loading);class XRange extends HTMLInputElement{static get observedAttributes(){return['max','min','step','disabled']}get defaultrange(){return this.getAttribute('range')||`${this.getAttribute('from')||this.min||0},${this.getAttribute('to')||this.max||100}`}set vertical(value){return this.toggleAttribute('vertical',value)}get vertical(){return this.getAttribute('vertical')!==null}set multiple(value){return this.toggleAttribute('multiple',value)}get multiple(){return this.getAttribute('multiple')!==null}get from(){if(this.element&&this.element.otherRange){return Math.min(this.value,this.element.otherRange.value)}return''}get to(){if(this.element&&this.element.otherRange){return Math.max(this.value,this.element.otherRange.value)}return''}get range(){if(this.multiple){return this.from+','+this.to}return''}get isFrom(){if(this.element&&this.element.otherRange){return this.value-this.element.otherRange.value<0}return false}set from(v){if(this.element&&this.element.otherRange){if(this.isFrom){this.value=v}else{this.element.otherRange.value=v}}}set to(v){if(this.element&&this.element.otherRange){if(!this.isFrom){this.value=v}else{this.element.otherRange.value=v}}}set range(v){if(this.multiple){const[from,to]=v.split(',');this.to=to;this.from=from}}connectedCallback(){this.tips=this.dataset.tips;this.addEventListener('input',this.render);this.addEventListener('change',this.change);this.addEventListener('touchstart',this.stopPropagation);if(this.vertical){this.resizeObserver=new ResizeObserver(entries=>{for(let entry of entries){const{height}=entry.contentRect;this.style.setProperty('--h',height+'px')}});this.resizeObserver.observe(this)}this.element=this.element||{};if(this.multiple&&!this.element.otherRange){Object.assign(this.element,{otherRange:this.cloneNode(false),splitRange:document.createElement('Q')});this.element.otherRange.tips=this.tips;this.element.otherRange.element={otherRange:this};this.element.splitRange.hidden=true;if(this.vertical){this.after(this.element.otherRange);this.element.otherRange.after(this.element.splitRange)}else{this.before(this.element.otherRange);this.after(this.element.splitRange)}this.range=this.defaultrange;if(getComputedStyle(this.parentNode).position==='static'){this.parentNode.style.position='relative'}}if(this.getAttribute('is')===null){this.setAttribute('is','ui-range')}this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-range'}}));this.isConnectedCallback=true;this.render();this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}disconnectedCallback(){this.removeEventListener('input',this.render);this.removeEventListener('change',this.change);this.removeEventListener('touchstart',this.stopPropagation);if(this.vertical){this.resizeObserver.unobserve(this)}if(this.element&&this.element.otherRange&&!this.exchange){this.element.otherRange.remove()}if(this.element&&this.element.splitRange&&!this.exchange){this.element.splitRange.remove()}}stopPropagation(ev){ev.stopPropagation()}attributeChangedCallback(name,oldValue,newValue){if(oldValue!==newValue){if(name==='disabled'&&this.element&&this.element.otherRange){this.element.otherRange.disabled=newValue!==null}else{this.render()}}}change(){if(!(this.element&&this.element.otherRange)){return}const isLeft=!this.isFrom&&this.nextElementSibling===this.element.otherRange&&!this.vertical;const isRight=this.isFrom&&this.nextElementSibling!==this.element.otherRange&&!this.vertical;const isTop=!this.isFrom&&this.nextElementSibling!==this.element.otherRange&&this.vertical;const isBottom=this.isFrom&&this.nextElementSibling===this.element.otherRange&&this.vertical;if(isTop||isRight||isBottom||isLeft){this.exchange=true;if(isTop||isRight){this.element.otherRange.before(this)}else{this.element.otherRange.after(this)}this.exchange=false;this.focus()}}render(){const max=this.max||100;const min=this.min||0;this.style.setProperty('--percent',(this.value-min)/(max-min));if(typeof this.tips=='string'){this.dataset.tips=this.tips.replace(/\${value}/g,this.value)}this.style.setProperty('--from',this.from);this.style.setProperty('--to',this.to);if(this.element&&this.element.otherRange){this.element.otherRange.style.setProperty('--from',this.from);this.element.otherRange.style.setProperty('--to',this.to)}}addEventListener(...par){document.addEventListener.apply(this,par);if(this.element&&this.element.otherRange){document.addEventListener.apply(this.element.otherRange,par)}}}const props=Object.getOwnPropertyDescriptor(HTMLInputElement.prototype,'value');Object.defineProperty(XRange.prototype,'value',{...props,set(v){props.set.call(this,v);this.render()}});if(!customElements.get('ui-range')){customElements.define('ui-range',XRange,{extends:'input'})}const BG_COLOR='background-color';class Color extends HTMLInputElement{static get observedAttributes(){return['disabled']}constructor(){super();this.setProperty()}static addClass(...arg){return['ui','color',...arg].join('-')}static funHslToHex(h,s,l,a){let r,g,b;if(s==0){r=g=b=l}else{const hue2rgb=function(j,k,m){if(m<0)m+=1;if(m>1)m-=1;if(m<1/6)return j+(k-j)*6*m;if(m<1/2)return k;if(m<2/3)return j+(k-j)*(2/3-m)*6;return j};const q=l<0.5?l*(1+s):l+s-l*s;const p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3)}const arrRgb=[Math.round(r*255),Math.round(g*255),Math.round(b*255)];if(a){arrRgb.push(Math.round(a*255))}return arrRgb.map(rgb=>{rgb=rgb.toString(16);if(rgb.length==1){return'0'+rgb}return rgb}).join('')}static funHexToHsl(hex){hex=(hex||'').replace('#','');if(hex.length==3||hex.length==4){hex=hex.split('').map(function(j){return j+j}).join('')}const r=parseInt(hex.slice(0,2),16)/255;const g=parseInt(hex.slice(2,4),16)/255;const b=parseInt(hex.slice(4,6),16)/255;const max=Math.max(r,g,b);const min=Math.min(r,g,b);let h,s;const l=(max+min)/2;if(max==min){h=s=0}else{const d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break}h/=6}if(hex.length==8){const a=parseInt(hex.slice(6,8),16)/255;return[h,s,l,a]}return[h,s,l]}static funRgbToHex(rgb){if(!rgb){return Color.defaultValue}let arr=[];let arrA=[];rgb=rgb.replace('#','').toLowerCase();if(/^[0-9A-F]{1,6}$/i.test(rgb)){return'#'+rgb.repeat(Math.ceil(6/rgb.length)).slice(0,6)}if(/^[0-9A-F]{1,8}$/i.test(rgb)){return'#'+rgb.repeat(Math.ceil(8/rgb.length)).slice(0,8)}arr=rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)/i);arrA=rgb.match(/^rgba\((\d+),\s*(\d+),\s*(\d+),\s*([0|1]?\.?\d+)/i);const hex=(x)=>('0'+parseInt(x,10).toString(16)).slice(-2);if(arr&&arr.length==4){return`#${hex(arr[1])}${hex(arr[2])}${hex(arr[3])}`}if(arrA&&arrA.length==5){return`#${hex(arrA[1])}${hex(arrA[2])}${hex(arrA[3])}${Math.round(arrA[4]*255).toString(16).padStart(2,'0')}`}return Color.defaultValue}get type(){return this.getAttribute('type')||'color'}set type(v){return this.setAttribute('type',v||'color')}events(){const objElement=this.element;const eleContainer=objElement.target;const eleCircle=objElement.circle;const eleFill=objElement.fill;const eleArrow=objElement.arrow;const eleField=objElement.field;const eleOpacity=objElement.opacity;eleContainer.addEventListener('click',(event)=>{const eleTarget=event.target;let strValue='';const strCl=eleTarget.className;if(/cancel/.test(strCl)){this.hide()}else if(/lump/.test(strCl)){strValue=eleTarget.getAttribute('data-color');this.value='#'+strValue}else if(/switch/.test(strCl)){if(eleTarget.textContent==='更多'){objElement.more.style.display='block';objElement.basic.style.display='none';eleTarget.textContent='基本';objElement.mode.setAttribute('data-mode','basic')}else{objElement.more.style.display='none';objElement.basic.style.display='block';eleTarget.textContent='更多';objElement.mode.setAttribute('data-mode','more')}this.match()}});eleField.addEventListener('input',()=>{const value=this.value;if(/^[0-9A-F]{6}$/i.test(value)||/^[0-9A-F]{8}$/i.test(value)){this.match()}else if(/^[0-9A-F]{3, 4}$/i.test(value)){this.match(Color.funRgbToHex('#'+value).replace('#',''))}});eleField.addEventListener('keyup',(event)=>{if(event.keyCode==13){let strValue=eleField.value;if(strValue){if(eleOpacity){strValue=Color.funRgbToHex('#'+strValue).replace('#','')}else{strValue=Color.funRgbToHex('#'+strValue.slice(0,6)).replace('#','')}this.value='#'+strValue}this.hide()}});if(eleOpacity){eleOpacity.addEventListener('input',()=>{let strValue=eleField.value;let curOpacity=Math.round(eleOpacity.value/100*255).toString(16).padStart(2,'0');if(strValue){let strValueColor=strValue.slice(0,6)+curOpacity;this.value=strValueColor}})}const objPosArrow={};const objPosCircle={};eleArrow.addEventListener(Color.objEventType.start,(event)=>{event.preventDefault();if(event.touches&&event.touches.length){event=event.touches[0]}objPosArrow.pageY=event.pageY;objPosArrow.top=parseFloat(window.getComputedStyle(eleArrow).top)});eleFill.addEventListener(Color.objEventType.start,(event)=>{event.preventDefault();let eleTarget=event.target;const objRect=eleTarget.getBoundingClientRect();const numOffsetTop=event.pageY-window.pageYOffset-objRect.top;eleArrow.style.top=numOffsetTop+'px';this.isTrustedEvent=true;this.value=this.getValueByStyle();if(event.touches&&event.touches.length){event=event.touches[0]}objPosArrow.pageY=event.pageY;objPosArrow.top=parseFloat(window.getComputedStyle(eleArrow).top)});eleCircle.parentElement.querySelectorAll('a').forEach((eleRegion)=>{eleRegion.addEventListener(Color.objEventType.start,(event)=>{event.preventDefault();if(event.touches&&event.touches.length){event=event.touches[0]}objPosCircle.pageY=event.pageY;objPosCircle.pageX=event.pageX;eleCircle.style.left=event.offsetX+'px';eleCircle.style.top=event.offsetY+'px';objPosCircle.top=parseFloat(event.offsetY);objPosCircle.left=parseFloat(event.offsetX);this.isTrustedEvent=true;this.value=this.getValueByStyle()})});document.addEventListener(Color.objEventType.move,(event)=>{if(typeof objPosArrow.top=='number'){event.preventDefault();if(event.touches&&event.touches.length){event=event.touches[0]}let numTop=objPosArrow.top+(event.pageY-objPosArrow.pageY);const numMaxTop=eleArrow.parentElement.clientHeight;if(numTop<0){numTop=0}else if(numTop>numMaxTop){numTop=numMaxTop}eleArrow.style.top=numTop+'px';this.isTrustedEvent=true;this.value=this.getValueByStyle()}else if(typeof objPosCircle.top=='number'){event.preventDefault();if(event.touches&&event.touches.length){event=event.touches[0]}const objPos={top:event.pageY-objPosCircle.pageY+objPosCircle.top,left:event.pageX-objPosCircle.pageX+objPosCircle.left};const objMaxPos={top:eleCircle.parentElement.clientHeight,left:eleCircle.parentElement.clientWidth};if(objPos.left<0){objPos.left=0}else if(objPos.left>objMaxPos.left){objPos.left=objMaxPos.left}if(objPos.top<0){objPos.top=0}else if(objPos.top>objMaxPos.top){objPos.top=objMaxPos.top}const numColorH=objPos.left/objMaxPos.left;const strColorS=1-objPos.top/objMaxPos.top;eleCircle.style.left=objPos.left+'px';eleCircle.style.top=objPos.top+'px';const strHsl=`hsl('${[360 * numColorH, 100 * strColorS + '%', '50%'].join()})`;
                eleCircle.style[BG_COLOR] = strHsl;
                // 赋值
                this.isTrustedEvent = true;
                this.value = this.getValueByStyle();
            }
        }, {
            passive: false
        });
        document.addEventListener(Color.objEventType.end, () => {
            objPosArrow.top = null;
            objPosCircle.top = null;
        });
        // 滑块的键盘支持
        eleFill.parentElement.querySelectorAll('a').forEach((eleButton) => {
            eleButton.addEventListener('keydown', (event) => {
                // 上下控制
                if (event.keyCode == 38 || event.keyCode == 40) {
                    event.preventDefault();
                    let numTop = parseFloat(window.getComputedStyle(eleArrow).top);
                    const numMaxTop = eleFill.clientHeight;
                    if (event.keyCode == 38) {
                        numTop--;
                        if (numTop < 0) {
                            numTop = 0;
                        }
                    } else {
                        numTop++;
                        if (numTop > numMaxTop) {
                            numTop = numMaxTop;
                        }
                    }
                    const ariaLabel = eleArrow.getAttribute('aria-label');
                    eleArrow.style.top = numTop + 'px';
                    eleArrow.setAttribute('aria-label', ariaLabel.replace(/\d+/, Math.round(100 *
                        numTop / numMaxTop)));
                    // 赋值，此次赋值，无需重定位
                    this.isTrustedEvent = true;
                    this.value = this.getValueByStyle();
                }
            });
        });
        // 圈圈的键盘访问
        // 区域背景的键盘支持
        eleCircle.parentElement.querySelectorAll('a').forEach((eleRegion) => {
            eleRegion.addEventListener('keydown', (event) => {
                // 上下左右控制
                if (event.keyCode >= 37 && event.keyCode <= 40) {
                    event.preventDefault();
                    const objStyleCircle = window.getComputedStyle(eleCircle);
                    let numTop = parseFloat(objStyleCircle.top);
                    let numLeft = parseFloat(objStyleCircle.left);
                    const numMaxTop = eleRegion.clientHeight;
                    const numMaxLeft = eleRegion.clientWidth;
                    if (event.keyCode == 38) {
                        // up
                        numTop--;
                        if (numTop < 0) {
                            numTop = 0;
                        }
                    } else if (event.keyCode == 40) {
                        // down
                        numTop++;
                        if (numTop > numMaxTop) {
                            numTop = numMaxTop;
                        }
                    } else if (event.keyCode == 37) {
                        // left
                        numLeft--;
                        if (numLeft < 0) {
                            numLeft = 0;
                        }
                    } else if (event.keyCode == 39) {
                        // down
                        numLeft++;
                        if (numLeft > numMaxLeft) {
                            numLeft = numMaxLeft;
                        }
                    }
                    eleCircle.style.left = numLeft + 'px';
                    eleCircle.style.top = numTop + 'px';
                    // 赋值
                    this.isTrustedEvent = true;
                    this.value = this.getValueByStyle();
                }
            });
        });
        return this;
    }
    /**
     * container内HTML的创建
     * @return {Object} 返回当前DOM元素对象
     */
    create() {
        // 元素
        const eleContainer = this.element.target;
        const isSupportOpacity = this.type === 'color-opacity';
        // switch button
        const strHtmlConvert =
            `<button class="${Color.addClass('switch')} colorMode" data-mode="more" role="button">更多</button>`;
        // current color
        const strHtmlCurrent =
            `<div class="${Color.addClass('current')}">
            <i class="${isSupportOpacity ? Color.addClass('current', 'square', 'opacity')  : Color.addClass('current', 'square')} colorCurrent"></i>
            #<input class="${Color.addClass('current', 'input')}" value="${this.value.replace('#', '')}">
        </div>`;
        // const arrBasicColor = this.params.color.basic;
        const arrBasicColorPreset = this.params.color.basicPreset;
        const arrFixedColor = this.params.color.fixed;
        // body
        const strHtmlBody = `<div class="${Color.addClass('body')}">` +
            (function () {
                // basic color picker
                let strHtml = `<div class="${Color.addClass('basic')} colorBasicX" role="listbox">`;
                let arrCommonColors = (localStorage.commonColors || '').split(',');
                // color left
                strHtml += `<aside class="${Color.addClass('basic', 'l')}">` + (function () {
                    return arrFixedColor.concat(arrCommonColors[0] || '0ff', arrCommonColors[1] ||
                        '800180').map(function (color) {
                        const strColor = Color.funRgbToHex(color).replace('#', '');
                        return `<a href="javascript:" class="${Color.addClass('lump')}" data-color="${strColor}" aria-label="${strColor}" style="${BG_COLOR}:#${strColor}" role="option"></a>`;
                    }).join('');
                })() + '</aside>';
                // color main
                strHtml = strHtml + `<div class="${Color.addClass('basic', 'r')}">` + (function () {
                    let strHtmlRG = '';
                    arrBasicColorPreset.forEach(colorItem => {
                        strHtmlRG +=
                            `<a href="javascript:" title="#${colorItem}${isSupportOpacity ? 'ff' : ''}" class="${Color.addClass('lump', 'preset')}" data-color="${colorItem}${isSupportOpacity ? 'ff' : ''}" style="${BG_COLOR}:#${colorItem}${isSupportOpacity ? 'ff' : ''}" aria-label="${colorItem}${isSupportOpacity ? 'ff' : ''}" role="option"></a>`;
                    });
                    return strHtmlRG;
                })() + '</div>';
                return strHtml + '</div>';
            })() +
            (function () {
                // more color picker
                let html = `<div class="${Color.addClass('more')} colorMoreX">`;
                // color left
                html +=
                    `<div class="${Color.addClass('more', 'l')}">
                <a href="javascript:" class="${Color.addClass('cover', 'white')}" aria-label="色域背景块" role="region"></a><div class="${Color.addClass('circle')} colorCircle"></div>
                <div class="${Color.addClass('gradient')}">
                </div>
                </div><div class="${Color.addClass('more', 'r')}">
                    <div class="${Color.addClass('more', 'fill')} colorFill">
                        <a href="javascript:" class="${Color.addClass('more', 'cover')}" aria-label="明度控制背景条" role="region"></a>
                        <div class="${Color.addClass('gradient')}" style="background: linear-gradient(#ffffff 0%, rgba(255,255,255,0) 50%, rgba(0,0,0,0) 50%, ${Color.defaultValue} 100%);">
                        </div>
                    </div>
                    <a href="javascript:" class="${Color.addClass('more', 'arrow')} colorArrow" role="slider" aria-label="明度控制按钮：100%"></a>
                </div>`;
                return html + '</div>';
            })() +
            (function () {
                // 透明度-滑动条
                if (isSupportOpacity) {
                    let opacityHtml = '<div' +
                        ` class="${Color.addClass('opacity')}">透明度：<input class="${Color.addClass('opacity', 'range')} colorOpacity"` +
                        'type="range"value="100"min="0"max="100"step="1"data-tips="${value}%"is="ui-range"></div>';
                    return opacityHtml;
                }
                return '';
            })() + '</div>';
        // footer
        const strHtmlFooter = '';
        // append
        eleContainer.innerHTML = strHtmlConvert + strHtmlCurrent + strHtmlBody + strHtmlFooter;
        // 一些元素
        Object.assign(this.element, {
            field: eleContainer.querySelector('input'),
            basic: eleContainer.querySelector('.colorBasicX'),
            more: eleContainer.querySelector('.colorMoreX'),
            mode: eleContainer.querySelector('.colorMode'),
            opacity: eleContainer.querySelector('.colorOpacity'),
            circle: eleContainer.querySelector('.colorCircle'),
            fill: eleContainer.querySelector('.colorFill'),
            arrow: eleContainer.querySelector('.colorArrow'),
            current: eleContainer.querySelector('.colorCurrent')
        });
        // filed做一些事情
        const propValue = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');
        let eleField = this.element.field;
        Object.defineProperty(eleField, 'value', {
            ...propValue,
            set(value) {
                // 赋值
                propValue.set.call(this, value);
                // 回调触发
                eleField.dispatchEvent(new CustomEvent('change'));
            }
        });
        if (document.body.contains(eleContainer) == false) {
            document.body.appendChild(eleContainer);
        }
        // 事件
        this.events();
        return this;
    }
    /**
     * 面板的色块啊，圆和尖角位置匹配
     * @param  {String} value 面板UI相匹配的色值，可缺省，表示使用当前输入框的颜色值进行UI变化
     * @return {Object}       返回当前DOM元素对象
     */
    match(value) {
        // 首先要面板显示
        if (this.display != true) {
            return this;
        }
        // 元素对象
        const objElement = this.element;
        // 元素
        const eleContainer = objElement.target;
        const eleCurrent = objElement.current;
        // 更多元素
        const eleMore = objElement.more;
        // 元素
        const eleCircle = objElement.circle;
        const eleFill = objElement.fill;
        const eleArrow = objElement.arrow;
        // 面板内部唯一的输入框元素
        const eleField = objElement.field;
        const eleOpacity = objElement.opacity;
        // 重定位
        let isRePosition = true;
        if (value === false) {
            isRePosition = false;
        }
        // 当前的颜色值
        let strValue = value || eleField.value;
        if (strValue == '') {
            // 如果输入框没有值
            // 使用之前一个合法的颜色值作为现在值
            strValue = Color.funRgbToHex(getComputedStyle(eleCurrent)[BG_COLOR]).replace('#', '');
            eleField.value = strValue;
        }
        strValue = strValue.replace('#', '');
        // 色块值示意&透明度条状态更新
        if (eleOpacity) {
            if (/^[0-9A-F]{8}$/i.test(strValue)) {
                eleOpacity.value = parseInt(strValue.slice(6, 8), 16) / 255 * 100;
            }
            if (/^[0-9A-F]{6}$/i.test(strValue)) {
                eleField.value += Math.round(eleOpacity.value / 100 * 255).toString(16).padStart(2, '0');
            }
        } else {
            eleCurrent.style[BG_COLOR] = '#' + strValue;
        }
        // 当前是基本色面板还是任意色面板
        if (window.getComputedStyle(eleMore).display == 'none') {
            // 1. 基本色
            // 所有当前高亮的元素不高亮
            const eleActive = eleContainer.querySelector('.active');
            if (eleActive) {
                eleActive.classList.remove('active');
            }
            // 所有颜色一致的高亮
            const eleColorMatch = eleContainer.querySelector(`a[data-color="${strValue.toUpperCase()}"]`);
            if (eleColorMatch) {
                eleColorMatch.classList.add('active');
            }
        } else {
            let numWidth = eleCircle.parentElement.clientWidth;
            let numHeight = eleCircle.parentElement.clientHeight;
            let numColorH = 0;
            let numColorS = 1;
            let numColorL = 0.5;
            // 滑块和尖角的颜色和位置
            if (isRePosition == true) {
                // to HSL
                let arrHSL = Color.funHexToHsl(strValue);
                // hsl value
                numColorH = arrHSL[0];
                numColorS = arrHSL[1];
                numColorL = arrHSL[2];
                eleCircle.style.left = numWidth * numColorH + 'px';
                eleCircle.style.top = numHeight * (1 - numColorS) + 'px';
                eleArrow.style.top = eleArrow.parentElement.clientHeight * (1 - numColorL) + 'px';
            } else {
                numColorH = parseFloat(eleCircle.style.left || 0) / numWidth;
                numColorS = 1 - parseFloat(eleCircle.style.top || 0) / numHeight;
            }
            // 滑块和尖角的颜色和位置
            let strColor = `hsl(${[360 * numColorH, Math.round(100 * numColorS) + '%', '50%'].join()}`;
            eleFill.style[BG_COLOR] = strColor;
            eleCircle.style[BG_COLOR] = strColor;
        }
        return this;
    }
    /**
     * 浮层定位方法
     * @return undefined
     */
    position() {
        // 面板定位
        this.follow();
        return this;
    }
    /**
     * 颜色面板显示
     * @return undefined
     */
    show() {
        // 元素
        let eleContainer = this.element.target;
        // 输入框赋值
        if (eleContainer.innerHTML.trim() == '') {
            this.create();
        }
        // 改变显示状态
        this.display = true;
        // 面板显示
        eleContainer.style.display = 'inline';
        // 键盘ESC隐藏支持
        eleContainer.classList.add('ESC');
        // aria
        this.setAttribute('aria-expanded', 'true');
        // 定位
        this.position();
        // 面板UI匹配
        const eleCurrent = this.element.current;
        if (!eleCurrent.getAttribute('style')) {
            eleCurrent.style[BG_COLOR] = this.value;
        }
        this.match();
        // show callback
        this.dispatchEvent(new CustomEvent('show', {
            detail: {
                type: 'ui-color'
            }
        }));
        return this;
    }
    /**
     * 颜色面板隐藏
     * @return undefined
     */
    hide() {
        let eleContainer = this.element.target;
        // 面板隐藏
        eleContainer.style.display = 'none';
        eleContainer.classList.remove('ESC');
        // aria
        this.setAttribute('aria-expanded', 'false');
        // 改变显示状态
        this.display = false;
        // 聚焦，键盘访问顺序回归正常
        this.focus();
        // hide callback
        // 因为this.drop.hide的时候还会执行一次这里的hide()方法，
        // 因此这里加了个display判断
        // 避免连续两次hide事件的实习
        this.dispatchEvent(new CustomEvent('hide', {
            detail: {
                type: 'ui-color'
            }
        }));
        return this;
    }
    /**
     * 给当前元素对象扩展方法、重置原生value属性
     */
    setProperty() {
        /**
         * 根据坐标位置获得hsl值
         * 私有
         * @return {String} [返回当前坐标对应的hex表示的颜色值]
         */
        Object.defineProperty(this, 'getValueByStyle', {
            value: () => {
                // 需要的元素
                const eleCircle = this.element.circle;
                const eleArrow = this.element.arrow;
                const eleOpacity = this.element.opacity;
                if (eleCircle.length * eleArrow.length == 0) {
                    return Color.defaultValue;
                }
                let numColorH, numColorS, numColorL;
                // get color
                // hsl color
                if (eleCircle.style.left) {
                    numColorH = parseFloat(window.getComputedStyle(eleCircle).left) / eleCircle.parentElement
                        .clientWidth;
                } else {
                    numColorH = 0;
                }
                if (eleCircle.style.top) {
                    numColorS = 1 - parseFloat(window.getComputedStyle(eleCircle).top) / eleCircle.parentElement
                        .clientHeight;
                } else {
                    numColorS = 1;
                }
                if (eleArrow.style.top) {
                    numColorL = 1 - parseFloat(window.getComputedStyle(eleArrow).top) / eleArrow.parentElement
                        .clientHeight;
                } else {
                    numColorL = 0;
                }
                // 支持透明度
                if (eleOpacity && eleOpacity.value) {
                    return '#' + Color.funHslToHex(numColorH, numColorS, numColorL, eleOpacity.value /
                        100);
                }
                return '#' + Color.funHslToHex(numColorH, numColorS, numColorL);
            }
        });
        const props = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');
        Object.defineProperty(Color.prototype, 'value', {
            ...props,
            set(value) {
                let strValue = value;
                // 元素
                // 目前的颜色值
                let strOldValue = this.value;
                // 取值还是赋值
                if (typeof value == 'string') {
                    // 如果是纯字母，则认为是关键字
                    if (/^[a-z]{3,}$/.test(strValue)) {
                        document.head.style.backgroundColor = strValue;
                        strValue = window.getComputedStyle(document.head).backgroundColor;
                        document.head.style.backgroundColor = '';
                    }
                    // 使用hex值
                    strValue = Color.funRgbToHex(strValue);
                    // 赋值
                    props.set.call(this, strValue);
                    // 可能存在还未和页面建立联系的时候执行value赋值
                    if (!this.params) {
                        return;
                    }
                    // 作为常用颜色记录下来
                    const strCommonColors = localStorage.commonColors || '';
                    let arrCommonColors = strCommonColors.split(',');
                    // 前提颜色非纯灰色若干色值
                    const arrFixedColor = this.params.color.fixed;
                    if (arrFixedColor.some((strFixedColor) => {
                        return Color.funRgbToHex(strFixedColor) == strValue;
                    }) == false) {
                        // 过滤已经存在的相同颜色的色值
                        arrCommonColors = arrCommonColors.filter((strValueWithSharp) => {
                            return strValueWithSharp && strValueWithSharp != strValue.replace(
                                '#', '');
                        });
                        // 从前面插入
                        arrCommonColors.unshift(strValue.replace('#', ''));
                        // 本地存储
                        localStorage.commonColors = arrCommonColors.join();
                        // 2个动态色值更新
                        const eleBasic = this.element.basic;
                        if (eleBasic) {
                            const eleAsideColors = eleBasic.querySelectorAll('aside a');
                            const eleBasicColorLast = eleAsideColors[eleAsideColors.length - 2];
                            const eleBasicColorSecond = eleAsideColors[eleAsideColors.length - 1];
                            eleBasicColorLast.setAttribute('data-color', arrCommonColors[0]);
                            eleBasicColorLast.setAttribute('aria-label', arrCommonColors[0]);
                            eleBasicColorLast.style[BG_COLOR] = strValue;
                            const strColorSecond = arrCommonColors[1] || '0ff';
                            eleBasicColorSecond.setAttribute('data-color', strColorSecond);
                            eleBasicColorSecond.setAttribute('aria-label', strColorSecond);
                            eleBasicColorSecond.style[BG_COLOR] = '#' + strColorSecond;
                        }
                    }
                    this.style.setProperty('--ui-color-opacity', strValue);
                    this.element.target.style.setProperty('--ui-color-opacity', strValue);
                    if (this.element.field) {
                        this.element.field.value = strValue.replace('#', '');
                    }
                    // 面板上的值，各种定位的匹配
                    if (this.isTrustedEvent) {
                        this.match(false);
                        this.isTrustedEvent = null;
                    } else {
                        this.match();
                    }
                } else if (!strOldValue) {
                    // 取值
                    // 如果默认无值，使用颜色作为色值，一般出现在初始化的时候
                    strOldValue = Color.defaultValue;
                    // 赋值
                    props.set.call(this, strOldValue);
                }
                if (strOldValue && strValue != strOldValue) {
                    this.dispatchEvent(new CustomEvent('change', {
                        'bubbles': true
                    }));
                    this.dispatchEvent(new CustomEvent('input', {
                        'bubbles': true
                    }));
                }
            }
        });
        // 标题设置
        if (!this.title) {
            this.title = (this.disabled ? '禁止' : '') + '颜色选择';
        }
    }
    attributeChangedCallback(name) {
        if (name == 'disabled') {
            if (this.title == '颜色选择' && this.disabled) {
                this.title = '禁止颜色选择';
            } else if (this.title == '禁止颜色选择' && !this.disabled) {
                this.title = '颜色选择';
            }
        }
    }
    connectedCallback() {
        if (!this.id) {
            // 创建随机id
            this.id = 'lulu_' + (Math.random() + '').split('.')[1];
        }
        // 阻止默认的颜色选择出现
        this.addEventListener('click', event => {
            event.preventDefault();
            if (this.display != true) {
                this.show();
            }
        });
        // 默认朝下居中对齐
        if (!this.dataset.position) {
            this.dataset.position = '7-5';
        }
        // 浮层容器
        const eleContainer = document.createElement('div');
        eleContainer.classList.add(Color.addClass('container'));
        eleContainer.id = ('lulu_' + Math.random()).replace('0.', '');
        this.dataset.target = eleContainer.id;
        // 全局暴露的一些元素
        this.element = {
            target: eleContainer
        };
        if (this.getAttribute('type') === 'color-opacity') {
            this.style.setProperty('--ui-color-opacity', this.value);
            eleContainer.style.setProperty('--ui-color-opacity', this.value);
        }
        // 全局的基础色值
        const arrBasicColor = ['0', '3', '6', '9', 'c', 'f'];
        const arrBasicColorPreset = ['2a80eb', '0057c3', '7fdbff', 'f7f9fa', '1cad70', '3d9970', '39cccc', 'dddddd',
            'eb4646', 'ab2526', 'ef8a5e', 'a2a9b6', 'f59b00', 'de6d00', 'ffdc00', '4c5161'];
        const arrFixedColor = arrBasicColor.concat('eb4646', '1cad70', '2a80eb', 'f59b00');
        this.params = this.params || {};
        this.params.color = {
            basic: arrBasicColor,
            basicPreset: arrBasicColorPreset,
            fixed: arrFixedColor
        };
        // 点击空白隐藏浮层的处理
        document.addEventListener('click', event => {
            const eleClicked = event && event.target;
            if (!eleClicked || !this.display) {
                return;
            }
            if (eleClicked != this && eleContainer.contains(eleClicked) == false) {
                this.hide();
            }
        });
        // 窗口尺寸变化时候的处理
        window.addEventListener('resize', () => {
            if (this.display) {
                this.position();
            }
        });
        // 全局事件
        this.dispatchEvent(new CustomEvent('connected', {
            detail: {
                type: 'ui-color'
            }
        }));
        this.isConnectedCallback = true;
    }
}
// 静态属性
Color.objEventType = {
    start: 'mousedown',
    move: 'mousemove',
    end: 'mouseup'
};
if ('ontouchstart' in document) {
    Color.objEventType = {
        start: 'touchstart',
        move: 'touchmove',
        end: 'touchend'
    };
}
Color.defaultValue = '#000000';
if (!customElements.get('ui-color')) {
    customElements.define('ui-color', Color, {
        extends: 'input'
    });
}
// export default Color;
/**
 * @Dialog.js
 * @author  zhangxinxu
 * @version
 * @created 15-06-18
 * @edited  19-11-01
 * @edited  20-06-26 @ziven27
 * @edited  20-12-01 by zhangxinxu method extends from <dialog>
 */
const Dialog = (() => {
    // 类名前缀
    const DIALOG = 'dialog';
    // 处理类名
    const CL = {
        add: (...arg) => `ui-${DIALOG}-${arg.join('-')}`,
        toString: (value) => `ui-${value || DIALOG}`
    };
    /**
     * 弹框实例方法
     * @param {Object} options 纯对象，可选参数
     */
    class Component {
        constructor(options = {}) {
            // 最终参数
            const objParams = {
                title: '',
                // 不同类别的内容类型
                content: '',
                // 弹框的宽度
                width: 'auto',
                // 弹框高度
                height: 'auto',
                // 不同类别的默认按钮
                buttons: [],
                // 弹框显示、隐藏、移除的回调
                onShow: function () {},
                onHide: function () {},
                onRemove: function () {},
                ...options
            };
            // 各个元素创建
            // 容器-含半透明遮罩背景
            const dialog = document.createElement(DIALOG);
            dialog.setAttribute('is', 'ui-dialog');
            // MutationObserver是一个异步的过程，因此
            // 元素样式的设置在'DOMContentLoaded'事件之后完成
            dialog.addEventListener('DOMContentLoaded', () => {
                // 务必有传参
                // 否则不会对初始元素进行处理
                if (JSON.stringify(options) != '"{}"') {
                    // 改变参数，会自动触发DOM元素内容的变化
                    dialog.setParams({
                        title: objParams.title,
                        width: objParams.width,
                        height: objParams.height,
                        content: objParams.content,
                        buttons: objParams.buttons
                    });
                    // 回调处理
                    if (typeof options.onShow == 'function') {
                        dialog.addEventListener('show', function (event) {
                            options.onShow.call(dialog, event);
                        });
                    }
                    if (typeof options.onHide == 'function') {
                        dialog.addEventListener('hide', function (event) {
                            options.onHide.call(dialog, event);
                        });
                    }
                    if (typeof options.onRemove == 'function') {
                        dialog.addEventListener('remove', function (event) {
                            options.onRemove.call(dialog, event);
                        });
                    }
                }
                // 显示
                dialog.show();
            });
            // 插入的细节
            // 1. 插在所有dialog的前面
            // 2. 如果没有，则放在页面后面
            const eleExistDialog = document.querySelector('body>' + DIALOG);
            if (eleExistDialog) {
                eleExistDialog.insertAdjacentElement('beforebegin', dialog);
            } else {
                document.body.appendChild(dialog);
            }
            // 注册当前<dialog>元素
            // 为了可以立即使用alert()、confirm()方法，
            // 在这里提前注册了
            funDialogRegist(dialog);
            return dialog;
        }
    }
    // 对不支持<dialog>元素的浏览器进行polyfill
    // 仅polyfill部分主要功能
    let DialogPolyfill = function (dialog) {
        this.element = {
            dialog: dialog
        };
        // aria支持
        if (!dialog.hasAttribute('role')) {
            dialog.setAttribute('role', 'dialog');
        }
        // 内置方法
        dialog.show = this.show.bind(this);
        dialog.showModal = this.showModal.bind(this);
        dialog.close = this.close.bind(this);
        // 自定义方法
        dialog.zIndex = this.zIndex.bind(this);
        Object.defineProperty(dialog, 'open', {
            set: this.setOpen.bind(this),
            get: dialog.hasAttribute.bind(dialog, 'open')
        });
    };
    DialogPolyfill.prototype = {
        get dialog() {
            return this.element.dialog;
        },
        show() {
            this.setOpen(true);
            // 层级最高
            this.zIndex();
        },
        showModal() {
            this.setOpen(true);
        },
        close() {
            this.setOpen(false);
            // 原生<dialog>就有close事件
            this.dialog.dispatchEvent(new CustomEvent('close', {
                bubbles: false,
                cancelable: false
            }));
        },
        setOpen(value) {
            if (value) {
                this.dialog.setAttribute('open', '');
            } else {
                this.dialog.removeAttribute('open');
            }
        },
        /**
         * 弹框元素zIndex实时最大化
         * 原生dialog无需此能力
         * @return {[type]} [description]
         */
        zIndex() {
            var dialog = this.dialog;
            // 返回eleTarget才是的样式计算对象
            const objStyleTarget = window.getComputedStyle(dialog);
            // 此时元素的层级
            const numZIndexTarget = objStyleTarget.zIndex;
            // 用来对比的层级，也是最小层级
            let numZIndexNew = 19;
            // 只对<body>子元素进行层级最大化计算处理
            document.body.childNodes.forEach(function (eleChild) {
                if (eleChild.nodeType !== 1) {
                    return;
                }
                const objStyleChild = window.getComputedStyle(eleChild);
                const numZIndexChild = objStyleChild.zIndex * 1;
                if (numZIndexChild && (dialog !== eleChild && objStyleChild.display !== 'none')) {
                    numZIndexNew = Math.max(numZIndexChild + 1, numZIndexNew);
                }
            });
            if (numZIndexNew !== numZIndexTarget) {
                dialog.style.zIndex = numZIndexNew;
            }
        }
    };
    // 对弹框元素进行方法注册
    let funDialogRegist = function (dialog) {
        if (dialog.hide && dialog.button) {
            // 已经注册过
            return;
        }
        if ('open' in document.createElement('dialog') == false) {
            new DialogPolyfill(dialog);
        }
        // 自定义的方法支持
        // 全新的remove和show方法
        // 新增hide, alert, confirm等方法
        if (dialog.getAttribute('is') == 'ui-dialog') {
            Object.defineProperties(dialog, {
                setParams: {
                    value: function (options) {
                        Object.assign(this.params, options || {});
                        return this.params;
                    }
                },
                /**
                 * 弹框按钮的处理
                 * @returns {Object}  返回当前<dialog>元素
                 */
                button: {
                    value: function () {
                        const objParams = this.params;
                        const objElement = this.element;
                        // 清除之前的按钮内容和数据
                        objElement.footer.innerHTML = '';
                        // 元素数据清除
                        for (const keyElement in objElement) {
                            if (/^button/.test(keyElement)) {
                                delete objElement[keyElement];
                            }
                        }
                        // 按钮元素创建
                        objParams.buttons.forEach(function (objButton, numIndex) {
                            // objButton可能是null等
                            objButton = objButton || {};
                            // 按钮类型和值的处理
                            let strType = objButton.type;
                            let strValue = objButton.value;
                            if (strType === 'remind' || (!strType && numIndex === 0)) {
                                strType = 'primary';
                            }
                            if (!strValue) {
                                strValue = ['确定', '取消'][numIndex];
                            }
                            let eleButton = document.createElement('button');
                            if (objButton['for']) {
                                eleButton = document.createElement('label');
                                eleButton.setAttribute('for', objButton['for']);
                            } else if (objButton.form) {
                                eleButton.setAttribute('form', objButton.form);
                                eleButton.type = 'submit';
                            }
                            // 自定义的类名
                            if (objButton.className) {
                                eleButton.className = objButton.className;
                            }
                            // 按钮样式
                            eleButton.classList.add(CL.toString('button'));
                            if (strType) {
                                eleButton.setAttribute('data-type', strType);
                            }
                            // 按钮是否禁用
                            eleButton.disabled = Boolean(objButton.disabled);
                            // 按钮内容
                            eleButton.innerHTML = strValue;
                            // 放在底部元素中
                            objElement.footer.appendChild(eleButton);
                            // 对外暴露
                            objElement['button' + numIndex] = eleButton;
                        });
                        // 按钮事件
                        // 底部确定取消按钮
                        objParams.buttons.forEach((objButton, numIndex) => {
                            // objButton可能是null等
                            objButton = objButton || {};
                            const eleButton = objElement['button' + numIndex];
                            if (!eleButton || objButton['for'] || objButton.form) {
                                return;
                            }
                            let objEvents = objButton.events || {
                                click: () => {
                                    this[this.closeMode]();
                                }
                            };
                            if (typeof objEvents === 'function') {
                                objEvents = {
                                    click: objEvents
                                };
                            }
                            for (const strEventType in objEvents) {
                                eleButton.addEventListener(strEventType, (event) => {
                                    // 把实例对象传入
                                    event.dialog = this;
                                    // 事件执行
                                    objEvents[strEventType](event);
                                });
                            }
                            // 额外的focus事件支持
                            eleButton.addEventListener('focus', function () {
                                if (window.isKeyEvent) {
                                    this.style.outline = '';
                                } else {
                                    this.style.outline = 'none';
                                }
                            });
                        });
                        return this;
                    }
                },
                /**
                 * 固定结构元素的事件绑定
                 * @returns {Object}    返回当前<dialog>元素对象
                 */
                events: {
                    value: function () {
                        const objElement = this.element;
                        this.addEventListener('animationend', function (event) {
                            if (event.target.tagName.toLowerCase() === DIALOG) {
                                this.classList.remove(CL.add('animation'));
                            }
                        });
                        // 关闭弹框按钮
                        const eleClose = objElement.close;
                        if (eleClose) {
                            eleClose.addEventListener('click', () => {
                                // 有其他可ESC元素存在时候，弹框不关闭
                                const eleActiveElement = document.activeElement;
                                const attrActiveElement = eleActiveElement.getAttribute(
                                    'data-target');
                                let eleTargetElement = null;
                                if (attrActiveElement) {
                                    eleTargetElement = document.getElementById(
                                        attrActiveElement);
                                }
                                // 如果是其他元素的键盘访问
                                if (window.isKeyEvent && eleTargetElement &&
                                    eleActiveElement !== eleClose && document.querySelector(
                                        'a[data-target="' + attrActiveElement +
                                        '"],input[data-target="' + attrActiveElement +
                                        '"],button[data-target="' + attrActiveElement +
                                        '"]') && eleTargetElement.clientWidth > 0) {
                                    return;
                                }
                                // 关闭弹框
                                this[this.closeMode]();
                            });
                        }
                        this.dispatchEvent(new CustomEvent('DOMContentLoaded'));
                        return this;
                    }
                },
                /**
                 * alert类型的弹框，默认仅一个“确定”按钮
                 * @param  {String} content    提示文字或者提示HTML片段
                 * @param  {Object} options    提示可选参数
                 * @return {Object}            返回当前<dialog>元素对象
                 */
                alert: {
                    value: function (content, options) {
                        if (!content) {
                            return;
                        }
                        let strContent = content;
                        // alert框的默认参数
                        const defaults = {
                            title: '',
                            // 类型, 'remind', 'success', 'warning', danger',或者任意'custom'type:'remind',buttons:[{}]};const objParams={...defaults,...options};if(objParams.type==='error'||objParams.type==='fail'){objParams.type='danger'}else if(objParams.type==='primary'){objParams.type='remind'}if(objParams.buttons.length&&!objParams.buttons[0].type){objParams.buttons[0].type=objParams.type;if(/^remind|success|warning|danger$/.test(objParams.type)===false){objParams.buttons[0].type=defaults.type}}let nodes=new DOMParser().parseFromString(strContent,'text/html').body.childNodes;if(nodes.length==1){if(nodes[0].nodeType===3){strContent='<p class="'+CL.add('wrap')+'">'+strContent+'</p>'}}else{strContent='<div class="'+CL.add('wrap')+'">'+strContent+'</div>'}strContent='<div class="'+CL.add(objParams.type)+' '+CL.add('alert')+'">'+strContent+'</div>';this.setParams({width:'auto',title:objParams.title,buttons:objParams.buttons,content:strContent});this.type='alert';this.show();return this}},confirm:{value:function(j,k){if(!j){return}let strContent=j;const defaults={title:'',type:'danger',buttons:[{},{}]};const objParams={...defaults,...options};if(objParams.type==='error'||objParams.type==='fail'){objParams.type='danger'}if(objParams.type==='primary'){objParams.type='remind'}if(objParams.buttons.length&&!objParams.buttons[0].type){objParams.buttons[0].type=objParams.type;if(/^remind|success|warning|danger$/.test(objParams.type)===false){objParams.buttons[0].type=defaults.type}}let nodes=new DOMParser().parseFromString(strContent,'text/html').body.childNodes;if(nodes.length==1){if(nodes[0].nodeType===3){strContent='<p class="'+CL.add('wrap')+'">'+strContent+'</p>'}}else{strContent='<div class="'+CL.add('wrap')+'">'+strContent+'</div>'}strContent='<div class="'+CL.add(objParams.type)+' '+CL.add('confirm')+'">'+strContent+'</div>';this.setParams({width:'auto',title:objParams.title,buttons:objParams.buttons,content:strContent});this.type='confirm';this.show();return this}},loading:{value:function(){const objElement=this.element;this.params.content='<ui-loading rows="10" size="3"></ui-loading>';objElement.dialog.classList.add(CL.add('loading'));this.show();return this}},content:{get(){return this.params.content},set(content){if(content!=this.params.content){this.params.content=content;return}let eleBody=this.element.body;let eleDialog=this.element.dialog;eleDialog.classList.remove(CL.add('loading'));if(typeof content=='function'){content=content()}else if(typeof content=='string'&&/^#?\w+(?:[-_]\w+)*$/i.test(content)){let eleMatch=document.querySelector(content);if(eleMatch){if(eleMatch.matches('textarea')){content=eleMatch.value}else if(eleMatch.matches('script')){content=eleMatch.innerHTML}else{content=eleMatch}}}this.closeMode=typeof content=='string'?'remove':'hide';if(this.closeMode=='hide'&&eleBody.innerHTML){let eleProtect=document.createElement('div');eleProtect.setAttribute('hidden','');eleBody.childNodes.forEach(node=>{eleProtect.appendChild(node)});document.body.appendChild(eleProtect)}eleBody.innerHTML='';if(this.closeMode=='remove'){eleBody.innerHTML=content}else{let eleContentParent=content.parentElement;let isParentHidden=eleContentParent&&eleContentParent.matches('div[hidden]');eleBody.appendChild(content);if(isParentHidden&&eleContentParent.innerHTML.trim()===''){eleContentParent.remove()}if(content.nodeType===1&&getComputedStyle(content).display=='none'){content.removeAttribute('hidden');content.style.display='';if(getComputedStyle(content).display=='none'){content.style.display='revert'}}}}},scrollbar:{value:function(){const eleAllDialog=document.querySelectorAll('dialog[is="ui-dialog"]');const isDisplayed=[].slice.call(eleAllDialog).some(function(j){return window.getComputedStyle(j).display!=='none'});document.documentElement.style.overflow='';document.body.style.borderRight='';let widthScrollbar=window.innerWidth-document.documentElement.clientWidth;if(isDisplayed){document.documentElement.style.overflow='hidden';document.body.style.borderRight=widthScrollbar+'px solid transparent'}return this}},tabindex:{value:function(){var j=this.element.dialog;var k=this.lastActiveElement;if(this.open==true){var m=document.activeElement;if(this.type=='alert'||this.type=='confirm'){if(this.element.button0!=m){this.lastActiveElement=m}this.element.button0.focus()}else if(j){if(j!=m){this.lastActiveElement=m}j.focus()}}else if(k&&k.tagName.toLowerCase()!='body'){k.focus();k.blur();this.lastActiveElement=null}return this}},show:{value:function(){if(this.open!==true){this.classList.add(CL.add('animation'))}this.open=true;if(this.zIndex){this.zIndex()}this.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-dialog'}}));return this}},hide:{value:function(){this.close();this.dispatchEvent(new CustomEvent('hide',{detail:{type:'ui-dialog'}}));return this}},remove:{value:function(){this.open=false;this.parentElement.removeChild(this);this.dispatchEvent(new CustomEvent('remove',{detail:{type:'ui-dialog'}}));return this}}});dialog.params=new Proxy(dialog.params||{},{get(target,prop){return target[prop]},set(target,prop,value){if(!dialog.element){return false}target[prop]=value;if(prop=='title'&&dialog.element.title){dialog.element.title.innerHTML=value}else if(prop=='content'){dialog.content=value}else if(prop=='buttons'){dialog.button()}else if(dialog.element.dialog&&(prop=='width'||prop=='height')){let eleDialog=dialog.element.dialog;eleDialog.classList.remove(CL.add('stretch'));if(value!==''&&Number(value)==value){eleDialog.style[prop]=value+'px'}else if(prop=='height'&&value=='stretch'){eleDialog.classList.add(CL.add(value))}else{if(value=='auto'){value=''}eleDialog.style[prop]=value}}return true}});const eleDialog=document.createElement('div');eleDialog.classList.add(CL);eleDialog.setAttribute('tabindex','-1');const eleTitle=document.createElement('h4');eleTitle.classList.add(CL.add('title'));eleTitle.innerHTML=dialog.title;dialog.removeAttribute('title');const strIdClose=('lulu_'+Math.random()).replace('0.','');const eleClose=document.createElement('button');eleClose.textContent='关闭';eleClose.classList.add(CL.add('close'),'ESC');eleClose.id=strIdClose;eleClose.setAttribute('data-target',strIdClose);const eleBody=document.createElement('div');eleBody.classList.add(CL.add('body'));const eleFooter=document.createElement('div');eleFooter.classList.add(CL.add('footer'));dialog.element=Object.assign(dialog.element||{},{dialog:eleDialog,close:eleClose,title:eleTitle,body:eleBody,footer:eleFooter});let nodesOriginDialog=[...dialog.childNodes];if(nodesOriginDialog.length){nodesOriginDialog.forEach(node=>{eleBody.append(node)})}eleDialog.append(eleClose,eleTitle,eleBody,eleFooter);dialog.append(eleDialog);var moDialogOpen=new MutationObserver(function(j){j.forEach(mutation=>{let eleDialog=mutation.target;if(mutation.type=='attributes'){eleDialog.scrollbar();eleDialog.tabindex()}})});moDialogOpen.observe(dialog,{attributes:true,attributeFilter:['open']});dialog.closeMode='hide';dialog.events()}dialog.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-dialog'}}));dialog.setAttribute('defined','');dialog.isConnectedCallback=true};let funDialogInitAndWatching=function(){const elesDialog=document.querySelectorAll('dialog');elesDialog.forEach(item=>{funDialogRegist(item)});var o=new MutationObserver(function(m){m.forEach(function(k){k.addedNodes.forEach(function(j){if(j.matches&&j.matches('dialog')){funDialogRegist(j)}else if(j.querySelector){j.querySelectorAll('dialog').forEach(item=>{funDialogRegist(item)})}})})});o.observe(document.body,{childList:true,subtree:true})};if(document.readyState!='loading'){funDialogInitAndWatching()}else{window.addEventListener('DOMContentLoaded',funDialogInitAndWatching)}return Component})();window.Dialog=Dialog;const Datalist=(()=>{const DATALIST='datalist';const SELECTED='selected';const DISABLED='disabled';const ACTIVE='active';const REVERSE='reverse';const CL={add:(props)=>['ui',DATALIST].concat([props]).join('-'),toString:()=>`ui-${DATALIST}`};let objEventType={start:'mousedown',move:'mousemove',end:'mouseup'};if('ontouchstart'in document){objEventType={start:'touchstart',move:'touchmove',end:'touchend'}}class Datalist extends HTMLInputElement{constructor(){super();if(!this.params){this.params={}}if(!this.element){this.element={}}}static stripHTML(str){if(typeof str=='string'){return str.replace(/<\/?[^<>]*>/g,'').replace(/<\/?[^<>]*>/g,'')}return''}static encodeHTML(str){if(typeof str=='string'){return str.replace(/<|&|>/g,function(j){return{'<':'&lt;','>':'&gt;','&':'&amp;'}[j]})}return''}static decodeHTML(str){if(typeof str=='string'){return str.replace(/&lt;|&gt;|&amp;/gi,(matches)=>{return{'&lt;':'<','&gt;':'>','&amp;':'&'}[matches.toLowerCase()]})}return''}setParams(options){Object.assign(this.params,options||{})}convertData(value){this.params.data=value||this.params.data;if(this.params.data=='auto'){let strAttrList=this.getAttribute('list');if(strAttrList){let eleDatalist=document.getElementById(strAttrList);if(!eleDatalist){setTimeout(()=>{if(document.getElementById(strAttrList)){this.convertData()}},1);return}this.removeAttribute('list');this.params.data=function(){return[].slice.call(eleDatalist.querySelectorAll('option')).map(function(k){let objAttr={};[].slice.call(k.attributes).forEach(function(j){objAttr[j.name]=j.value});objAttr.value=objAttr.value||'';if(!k.hasAttribute('value')){objAttr.value=k.textContent||''}objAttr.label=objAttr.label||'';return objAttr})}}else if(this.name&&(this.autocomplete===''||this.autocomplete=='on')){this.params.twice=true;this.params.placeholder=false;this.params.data=()=>{let data=[];let strList=localStorage[DATALIST+'-'+this.name];if(strList){strList.split(',').forEach(function(j){if(j&&j.trim()){data.push({label:'',value:j})}})}return data}}else{this.params.data=function(){return[]}}}else if(this.params.data instanceof Array){let array=this.params.data;this.params.data=function(){return array}}else if(typeof this.params.data=='function'){}else if(typeof this.params.data=='object'&&this.params.data.url){let timerAjaxDatalist=null;let objParams={...this.params.data};this.params.data=()=>{clearTimeout(timerAjaxDatalist);if(!this.name){this.name='k'}let strValue=this.value.trim();if(strValue==''){this.datalist=[];return[]}let objAjaxParams=new URLSearchParams(objParams.data);objAjaxParams.append(this.name,strValue);let strUrlAjax=objParams.url.split('#')[0];if(strUrlAjax.split('?').length>1){strUrlAjax=strUrlAjax+'&'+objAjaxParams.toString()}else{strUrlAjax=strUrlAjax+'?'+objAjaxParams.toString()}let funAjax=async()=>{const response=await fetch(strUrlAjax);this.setAttribute('aria-busy','true');const json=await response.json();this.removeAttribute('aria-busy');if(json&&json.data){let jsonData=json.data;if(this.params.encode&&jsonData.map){jsonData=jsonData.map(obj=>{if(obj.value){obj.value=Datalist.encodeHTML(obj.value)}return obj})}this.refresh(this.params.filter.call(this,jsonData));if(objParams.success){objParams.success(json)}}else if(objParams.error){objParams.error(json)}};timerAjaxDatalist=setTimeout(funAjax,200)};this.params.placeholder=false}}store(){const strValue=this.val();const{name:strName}=this;if(strValue&&strName){let arrList=(localStorage[`${DATALIST}-${strName}`]||'').split(',');const numIndexMatch=arrList.indexOf(strValue);if(numIndexMatch==-1){arrList.unshift(strValue)}else if(numIndexMatch!=0){let arrSplice=arrList.splice(numIndexMatch,1);arrList=[arrSplice,...arrList]}localStorage[`${DATALIST}-${strName}`]=arrList.join()}return this}removeStore(value){const strName=this.name;const strValue=value||this.val();if(strValue&&strName){if(strValue===true){localStorage.removeItem(`${DATALIST}-${strName}`)}else if(typeof strValue=='string'){let arrList=(localStorage[`${DATALIST}-${strName}`]||'').split(',');const numIndexMatch=arrList.indexOf(strValue);if(numIndexMatch!=-1){arrList.splice(numIndexMatch,1);localStorage[`${DATALIST}-${strName}`]=arrList.join()}}}return this}refresh(data){let eleTarget=this.element.target;if(!eleTarget){this.create();eleTarget=this.element.target}const strValue=this.val();let arrData=data;if(typeof arrData=='undefined'){if(typeof this.params.data!='function'){this.convertData()}if(typeof this.params.data!='function'){return this}arrData=this.params.data();if(!arrData){return this}if(this.params.encode&&arrData.map){arrData=arrData.map(obj=>{if(obj.value){obj.value=Datalist.encodeHTML(obj.value)}return obj})}arrData=this.params.filter.call(this,arrData,strValue);if(arrData instanceof Array==false){return this}}const strResults=this.getAttribute('results');const numResults=Number(strResults);if(strResults){arrData=arrData.slice(0,numResults)}this.datalist=arrData;let strHtmlList='';if(arrData&&arrData.length){this.params.index=-1;const strAttrPlaceholder=this.getAttribute('placeholder');const strParamPlaceholder=this.params.placeholder;arrData.forEach((objData,numIndex)=>{let strValueEncode=objData.value||'';let strValueStrip=Datalist.stripHTML(strValueEncode).trim().replace(/\n/g,'');let strLabelStrip=Datalist.stripHTML(objData.label||'').trim().replace(/\n/g,'');let strClassList='';if((strValue&&strValueStrip==strValue)||(!strValue&&strValueStrip==strAttrPlaceholder&&strValueStrip!=strParamPlaceholder)){strClassList=`${SELECTED}`;this.params.index=numIndex}if(objData[DISABLED]||typeof objData[DISABLED]=='string'){strClassList=' '+DISABLED}if(objData.label){strHtmlList=`${strHtmlList}<li class="${CL.add(
                                'option'
                            )}${strClassList}"data-value="${strValueStrip}"label="${strLabelStrip}"data-index="${numIndex}"><label class="${CL.add(
                                'label'
                            )}">${objData.label}</label><span class="${CL.add(
                                'value'
                            )}">${strValueEncode}</span></li>`}else{strHtmlList=`${strHtmlList}<li class="${CL.add(
                                'option'
                            )}${strClassList}"data-value="${strValueStrip}"data-index="${numIndex}"><span class="${CL.add(
                                'value'
                            )}">${strValueEncode}</span></li>`}})}if(strHtmlList!=''){strHtmlList=`<ul class="${CL.add(
                        DATALIST
                    )}">${strHtmlList}</ul>`}eleTarget.innerHTML=strHtmlList;const eleSelected=eleTarget.querySelector('.'+SELECTED);if(this.display==true&&eleSelected){const numOffsetTop=eleSelected.offsetTop-(eleTarget.lastScrollTop||0);if(numOffsetTop<0||numOffsetTop>=eleSelected.parentElement.clientHeight){eleSelected.parentElement.scrollTop=eleSelected.offsetTop;eleTarget.lastScrollTop=eleSelected.offsetTop}else{eleSelected.parentElement.scrollTop=eleTarget.lastScrollTop||0}}if(strHtmlList){if(this.display==false){this.show()}}else if(this.display==true){this.hide()}}create(){if(!this.element.target){let strId=this.element.datalist&&this.element.datalist.id;if(!strId){strId=`lulu_${Math.random()}`.replace('0.','');this.setAttribute('data-target',strId)}const eleTarget=document.createElement('div');eleTarget.classList.add(CL);eleTarget.addEventListener('click',(event)=>{if(event.touches&&event.touches.length){event=event.touches[0]}if(!event.target){return}const eleClicked=event.target.closest('li');if(eleClicked&&eleClicked.classList.contains(DISABLED)==false){const strIndex=eleClicked.getAttribute('data-index');this.params.index=Number(strIndex);this.val(this.datalist[this.params.index]);this.hide();this.dispatchEvent(new CustomEvent('select',{detail:this.datalist[this.params.index]}))}});if(this.id){eleTarget.classList.add(CL.add(this.id.replace(/[A-Z]/g,(matches)=>`-${matches.toLowerCase()}`).replace(/^-+|-+$/g,'')))}document.body.appendChild(eleTarget);this.element.target=eleTarget;this.display=false;this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}return this}val(props={}){const{value}=props;if(typeof value=='undefined'){return Datalist.encodeHTML(this.value.trim())}const strValue=value.toString();this.value=Datalist.decodeHTML(Datalist.stripHTML(strValue.trim()));if(strValue!=this.oldValue){this.dispatchEvent(new CustomEvent('change',{bubbles:true,detail:{...props}}));this.dispatchEvent(new CustomEvent('input',{bubbles:true,detail:{...props}}))}this.oldValue=strValue;return this}events(){if(document.activeElement!=this){this.isFocus=false}this.addEventListener('blur',function(){this.isFocus=false});this.addEventListener('focus',function(){if(window.isKeyEvent){this.click()}});this.addEventListener('click',()=>{if(this.display==false){if(this.params.placeholder===true){this.focusValue=this.value.trim();if(this.focusValue){this.setAttribute('placeholder',this.focusValue)}this.value=''}if(this.params.twice==true&&this.isFocus==true){this.refresh()}else if(!this.params.twice){this.refresh()}}this.isFocus=true});this.addEventListener('input',(event)=>{if(event.isTrusted===false){return}if(this.params.placeholder==true||this.value.trim()){this.refresh()}else{this.hide()}});this.addEventListener('keydown',(event)=>{let arrData=this.datalist;let numIndex=this.params.index;const eleTarget=this.element.target;if(!eleTarget)return;const eleSelected=eleTarget.querySelector(`.${SELECTED}`);switch(event.code){case'Escape':case'Enter':{if(this.display==true){this.hide();event.preventDefault();if(eleSelected){eleSelected.click();event.preventDefault();setTimeout(function(){const eleInput=this;if(this.setSelectionRange){try{eleInput.setSelectionRange(eleInput.value.length,eleInput.value.length)}catch(e){eleInput.value=eleInput.value}}else{eleInput.value=eleInput.value}eleInput.dispatchEvent(new CustomEvent('input',{bubbles:true,detail:arrData[numIndex]}))},17)}}break}case'ArrowUp':case'ArrowDown':{if(this.display==true&&arrData&&arrData.length){event.preventDefault();const arrIndexMatchAble=[];arrData.forEach((objData,numIndexMatch)=>{if(!objData[DISABLED]&&objData[DISABLED]!==''){arrIndexMatchAble.push(numIndexMatch)}});if(arrIndexMatchAble.length==0)return;let numIndexFilterMatch=arrIndexMatchAble.indexOf(numIndex);if(event.code=='ArrowUp'){numIndexFilterMatch--}else{numIndexFilterMatch++}if(numIndexFilterMatch<0){numIndex=arrIndexMatchAble[arrIndexMatchAble.length-1]}else if(numIndexFilterMatch>arrIndexMatchAble.length-1){numIndex=arrIndexMatchAble[0]}else{numIndex=arrIndexMatchAble[numIndexFilterMatch]}}if(arrData[numIndex]){const curValue=arrData[numIndex];this.val(curValue)}this.select();this.refresh(arrData);break}case'Delete':{if(this.display==true&&this.params.twice==true&&eleSelected){let strValueSelected=eleSelected.getAttribute('data-value');this.removeStore(strValueSelected);arrData=arrData.filter((objData)=>objData.value!=strValueSelected);event.preventDefault();const objDataLeave=arrData[numIndex]||arrData[numIndex-1];if(objDataLeave){this.val(objDataLeave.value);this.refresh(arrData)}else{this.value='';this.hide()}}break}}});if(this.form&&this.params.data=='auto'&&this.name&&(this.autocomplete==''||this.autocomplete=='on')){this.form.addEventListener('submit',()=>{this.store()})}document.addEventListener(objEventType.end,(event)=>{if(event.touches&&event.touches.length){event=event.touches[0]}const eleClicked=event.target;const eleTarget=this.element.target;if(eleTarget&&eleClicked.nodeType==1&&eleTarget.contains(eleClicked)==false){this.hide()}if(eleClicked!=this&&this.value.trim()==''){if(this.focusValue){this.value=this.focusValue}else if(typeof this.params.placeholder=='string'&&this.params.placeholder!=='auto'){this.setAttribute('placeholder',this.params.placeholder)}}});window.addEventListener('resize',()=>{if(this.display==true){this.position()}});return this}position(){const eleTarget=this.element.target;if(this&&eleTarget){this.follow(eleTarget);if(this.display==true){this.classList.add(ACTIVE)}}return this}show(){let eleTarget=this.element.target;if(!eleTarget){this.create();eleTarget=this.element.target}const isDisplay=this.display;let numWidthTarget=this.params.width;const numWidthTrigger=this.getBoundingClientRect().width||this.clientWidth;if(numWidthTarget=='auto'){numWidthTarget=numWidthTrigger}else if(typeof numWidthTarget=='function'){numWidthTarget=numWidthTarget.call(this,eleTarget)}if(numWidthTarget!='auto'&&typeof numWidthTarget!='number'){numWidthTarget=numWidthTrigger}eleTarget.style.display='block';eleTarget.style.width=numWidthTarget+'px';if(typeof eleTarget.lastScrollTop=='number'&&eleTarget.querySelector('ul')){eleTarget.querySelector('ul').scrollTop=eleTarget.lastScrollTop}this.display=true;this.position();if(isDisplay==false){this.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-datalist'}}))}}hide(){const eleTarget=this.element.target;if(eleTarget&&this.display==true){if(eleTarget.querySelector('ul')){eleTarget.lastScrollTop=eleTarget.querySelector('ul').scrollTop}eleTarget.style.display='none';eleTarget.classList.remove(REVERSE);this.dispatchEvent(new CustomEvent('hide',{detail:{type:'ui-datalist'}}))}this.classList.remove(ACTIVE);this.classList.remove(REVERSE);this.display=false}connectedCallback(){this.params=Object.assign(this.params,{filter(data,value){const arr=[];if(!data||!data.forEach){return arr}data.forEach(function(j){if(!value||j.value.indexOf(value)==0){arr.push(j)}});return arr},encode:true,index:-1,data:'auto',placeholder:'auto',width:'auto'});const strAttrPlaceholder=this.getAttribute('placeholder');if(strAttrPlaceholder){this.params.placeholder=strAttrPlaceholder}this.display=false;if(this.params.placeholder=='auto'){this.params.placeholder=true}this.events();this.convertData();if(this.form){this.setAttribute('autocomplete','off')}else{this.setAttribute('autocomplete','new-password')}this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-datalist'}}));this.isConnectedCallback=true}}return Datalist})();if(!customElements.get('ui-datalist')){customElements.define('ui-datalist',Datalist,{extends:'input'})}const DateTime=(()=>{const CL={toString:()=>'ui-datetime'};['date','range','day','year','month','hour','minute','time'].forEach((key)=>{CL[key]=(...args)=>['ui',key,...args].join('-')});const SELECTED='selected';const ACTIVE='active';const regDate=/-|\//g;String.prototype.toDate=function(){let year,month,day;const arrDate=this.replace(/年|月|日/g,'-').split(regDate);year=arrDate[0]*1;month=arrDate[1]||1;day=arrDate[2]||1;if(!year){return new Date()}return new Date(year,month-1,day)};String.prototype.toTime=function(){let arrTime=this.trim().split(':').map((hm,index)=>{if(!hm||/\D/.test(hm)){return''}if(hm<0){return'00'}else if(index===0){if(hm>23){hm='23'}}else if(hm>59){hm='59'}return hm.padStart(2,'0')}).filter(_=>_).slice(0,3);if(arrTime.length==1){arrTime.push('00')}return arrTime};Date.prototype.toArray=function(){let year=this.getFullYear();let month=this.getMonth()+1;let date=this.getDate();if(month<10){month=`0${month}`}if(date<10){date=`0${date}`}return[year,month,date]};class Component extends HTMLInputElement{constructor(){super()}minMaxConvert(value){if(typeof value=='number'&&Number.isInteger(value)){if(value>10000000){value=new Date(value)}else if(value<9999){value=String(value)}}let arrDate=[];if(value.toArray){arrDate=value.toArray()}else if(typeof value=='string'){arrDate=value.toDate().toArray()}let strType=this.getAttribute('type')||'date';if(strType=='date'||strType=='date-range'){value=arrDate.join('-')}else if(strType=='year'){value=arrDate[0]}else if(strType=='month'||strType=='month-range'){value=arrDate.slice(0,2).join('-')}else{if(value.toArray){value=value.getHours()+':'+value.getMinutes()}let arrHourMin=value.toTime();if(!arrHourMin[0]){return''}value=arrHourMin.join(':')}return value}get min(){let strAttrMin=this.getAttribute('min')||'';if(strAttrMin){return this.minMaxConvert(strAttrMin).toString()}return strAttrMin}set min(value){if(!value){this.removeAttribute('min');return}this.setAttribute('min',this.minMaxConvert(value))}get max(){let strAttrMax=this.getAttribute('max')||'';if(strAttrMax){return this.minMaxConvert(strAttrMax).toString()}return strAttrMax}set max(value){if(!value){this.removeAttribute('max');return}this.setAttribute('max',this.minMaxConvert(value))}get step(){let strStep=this.getAttribute('step');let strType=this.params.type;let numStep=Number(strStep);if(strStep&&/^\d+$/.test(strStep)){if(strType=='time'){if(strStep>60){if(strStep%60!=0||strStep/60>30){numStep=1}}else if(numStep>30){numStep=1}}else if(strType=='hour'){if(numStep>12){numStep=1}}else if(strType=='minute'&&numStep>30){numStep=1}return numStep}return''}set step(value){if(!value){this.removeAttribute('step');return}this.setAttribute('step',value)}events(){const eleContainer=this.element.target;eleContainer.addEventListener('click',(event)=>{if(event.target.nodeType!=1||!event.target.closest){return}const eleClicked=event.target.closest('a, button');if(!eleClicked){return}let numYear=0;let numMonth=0;let numHour=0;let numDay=0;let arrRange=[];let dataRange;let strTypeButton='';switch(eleContainer.dataset.type){case'date':{if(/prev|next/.test(eleClicked.className)){numMonth=eleClicked.dataset.month;this[SELECTED][1]=numMonth*1;const arrMonthDay=this.getMonthDay(this[SELECTED]);const numDayMax=(()=>{if(numMonth-1<0){return arrMonthDay[11]}else if(numMonth>arrMonthDay.length){return arrMonthDay[0]}return arrMonthDay[numMonth-1]})();numDay=this[SELECTED][2];const numDayOverflow=eleContainer.dataDayOverflow;if(numDayOverflow){this[SELECTED][2]=Math.min(numDayOverflow,numDayMax)}else if(this[SELECTED][2]>numDayMax){this[SELECTED][2]=numDayMax;eleContainer.dataDayOverflow=numDay}this[SELECTED]=this[SELECTED].join('-').toDate().toArray();this.date();if(eleContainer.querySelector(`.${SELECTED}[href]`)){this.setValue()}}else if(/item/.test(eleClicked.className)){numDay=eleClicked.innerHTML;if(/\D/.test(numDay)){this[SELECTED]=new Date().toArray()}else{if(numDay<10){numDay=`0${numDay}`}this[SELECTED][2]=numDay}this.setValue();this.hide();delete eleContainer.dataDayOverflow}else if(eleClicked.dataset.type=='month'){this.month()}break}case'date-range':{if(/prev|next/.test(eleClicked.className)){numMonth=eleClicked.dataset.month*1;arrRange=eleContainer.dataDate||this[SELECTED][0];eleContainer.dataDate=new Date(arrRange[0],numMonth-1,1).toArray();this['date-range']()}else if(/item/.test(eleClicked.className)){numYear=eleClicked.dataset.year;numMonth=eleClicked.dataset.month;numDay=eleClicked.innerHTML;if(numMonth<10){numMonth=`0${numMonth}`}if(numDay<10){numDay=`0${numDay}`}dataRange=this[SELECTED];if(dataRange[0].join()==dataRange[1].join()){if(numYear+numMonth+numDay>dataRange[0].join('')){dataRange[1]=[numYear,numMonth,numDay]}else{dataRange[0]=[numYear,numMonth,numDay]}}else{dataRange=[[numYear,numMonth,numDay],[numYear,numMonth,numDay]]}this[SELECTED]=dataRange;this['date-range']()}else if(/button/.test(eleClicked.className)){strTypeButton=eleClicked.dataset.type;if(strTypeButton=='primary'){this.setValue();this.dataRangeSelected=this[SELECTED];this.hide()}else if(strTypeButton=='normal'){if(this.dataRangeSelected){this[SELECTED]=this.dataRangeSelected}this.hide()}}break}case'month-range':{if(/prev|next/.test(eleClicked.className)){numYear=eleClicked.dataset.year*1;arrRange=eleContainer.dataDate||this[SELECTED][0];eleContainer.dataDate=new Date(numYear,arrRange[1],1).toArray();this['month-range']()}else if(/item/.test(eleClicked.className)){numYear=eleClicked.dataset.year;numMonth=eleClicked.dataset.value;numDay='01';dataRange=this[SELECTED];if(dataRange[0].join()==dataRange[1].join()){if(numYear+numMonth+numDay>dataRange[0].join('')){dataRange[1]=[numYear,numMonth,numDay]}else{dataRange[0]=[numYear,numMonth,numDay]}}else{dataRange=[[numYear,numMonth,numDay],[numYear,numMonth,numDay]]}this[SELECTED]=dataRange;this['month-range']()}else if(/button/.test(eleClicked.className)){strTypeButton=eleClicked.dataset.type;if(strTypeButton=='primary'){this.setValue();this.dataRangeSelected=this[SELECTED];this.hide()}else if(strTypeButton=='normal'){if(this.dataRangeSelected){this[SELECTED]=this.dataRangeSelected}this.hide()}}break}case'month':{if(/prev|next/.test(eleClicked.className)){numYear=eleClicked.dataset.year;this[SELECTED][0]=numYear*1;this.month();if(eleContainer.querySelector(`.${SELECTED}[href]`)){this.setValue()}}else if(/item/.test(eleClicked.className)){const value=eleClicked.dataset.value;if(value){this[SELECTED][1]=value}else{const arrToday=new Date().toArray();this[SELECTED][0]=arrToday[0];this[SELECTED][1]=arrToday[1]}this.setValue();if(this.params.type=='month'){this.hide()}else{this.date()}}else if(eleClicked.dataset.type=='year'){this.year()}break}case'year':{if(/prev|next/.test(eleClicked.className)){numYear=eleClicked.dataset.year;this[SELECTED][0]=numYear*1;this.year();if(eleContainer.querySelector(`.${SELECTED}[href]`)){this.setValue()}}else if(/item/.test(eleClicked.className)){if(eleClicked.innerHTML=='今年'){this[SELECTED][0]=new Date().getFullYear()}else{this[SELECTED][0]=eleClicked.innerHTML*1}this.setValue();if(this.params.type=='year'){this.hide()}else{this.month()}}break}case'time':{if(eleClicked.tagName=='BUTTON'&&eleClicked.classList.contains(SELECTED)==false){let strTypeButton=eleClicked.parentElement.dataset.type;let numIndexButton=eleClicked.dataset.index;if(strTypeButton=='ampm'){if(numIndexButton=='0'){this[SELECTED][0]-=12}else{this[SELECTED][0]=Number(this[SELECTED][0])+12}this[SELECTED][0]=String(this[SELECTED][0]).padStart(2,'0')}else if(strTypeButton=='hour'){this[SELECTED][0]=numIndexButton.padStart(2,'0')}else if(strTypeButton=='minute'){this[SELECTED][1]=numIndexButton.padStart(2,'0')}else if(strTypeButton=='second'){this[SELECTED][2]=numIndexButton.padStart(2,'0')}this.setValue();this.time()}break}case'minute':{if(/prev|next/.test(eleClicked.className)){numHour=eleClicked.getAttribute('data-hour');if(numHour.length==1){numHour=`0${numHour}`}this[SELECTED][0]=numHour;this.minute();if(eleContainer.querySelector(`.${SELECTED}[href]`)){this.setValue()}}else if(/item/.test(eleClicked.className)){this[SELECTED]=eleClicked.innerHTML.split(':');this.setValue();this.hide()}else if(eleClicked.dataset.type=='hour'){this.hour()}break}case'hour':{if(/item/.test(eleClicked.className)){this[SELECTED][0]=eleClicked.innerHTML.split(':')[0];this.setValue();if(this.params.type=='hour'){this.hide()}else{this.minute()}}break}}});this.addEventListener('click',(event)=>{event.preventDefault();if(!this.display){this.show()}else{this.hide()}});this.addEventListener('keydown',(event)=>{if(event.code=='Enter'){event.preventDefault();this.click()}});document.addEventListener('mouseup',(event)=>{const eleTarget=event.target;if(eleTarget&&eleTarget!=this&&eleContainer.contains(eleTarget)==false){if(this.display){this.hide()}}});document.addEventListener('keydown',event=>{if(eleContainer.dataset.type=='time'&&this.display==true&&eleContainer.contains(document.activeElement)){if(/^arrow/i.test(event.key)){event.preventDefault();let eleButtonSelected=[...eleContainer.querySelectorAll('.'+SELECTED)];let numIndexButton=eleButtonSelected.findIndex(item=>item==event.target);let eleButtonClickable=[...event.target.parentElement.querySelectorAll('button:enabled:not([data-visibility="false"])')];let numIndexButtonClickable=eleButtonClickable.findIndex(item=>item==event.target);if(event.key=='ArrowLeft'){numIndexButton--;if(eleButtonSelected[numIndexButton]){eleButtonSelected[numIndexButton].focus()}}else if(event.key=='ArrowRight'){numIndexButton++;if(eleButtonSelected[numIndexButton]){eleButtonSelected[numIndexButton].focus()}}else if(event.key=='ArrowUp'){let eleButtonPrev=eleButtonClickable[numIndexButtonClickable-1];if(!eleButtonPrev){eleButtonPrev=eleButtonClickable[eleButtonClickable.length-1]}if(eleButtonPrev){eleButtonPrev.click();eleButtonPrev.focus()}}else if(event.key=='ArrowDown'){let eleButtonNext=eleButtonClickable[numIndexButtonClickable+1];if(!eleButtonNext){eleButtonNext=eleButtonClickable[0]}if(eleButtonNext){eleButtonNext.click();eleButtonNext.focus()}}}if(event.key=='Enter'){this.hide()}}});window.addEventListener('resize',()=>{if(this.display){this.position()}});return this}format(){const strType=this.params.type;const strInitValue=this.value.trim();if(!strInitValue){return this}switch(strType){case'date':case'year':case'month':{const objInitDate=strInitValue.toDate();const arrDate=objInitDate.toArray();this[SELECTED]=arrDate;break}case'time':case'hour':case'minute':{const arrTime=strInitValue.toTime();if(arrTime.length>1){this[SELECTED]=[...arrTime]}break}case'date-range':case'month-range':{let objBeginDate=new Date();let objEndDate=new Date();const arrRange=strInitValue.split(' ');if(arrRange.length==3){objBeginDate=arrRange[0].toDate();objEndDate=arrRange[arrRange.length-1].toDate();this[SELECTED]=[objBeginDate.toArray(),objEndDate.toArray()]}break}}return this}setValue(){const arrSelected=this[SELECTED];const strValue=this.value;switch(this.params.type){case'date':{this.value=arrSelected.join('-');break}case'month':{this.value=arrSelected.slice(0,2).join('-');break}case'year':{this.value=arrSelected[0];break}case'date-range':{this.value=`${arrSelected[0].join('-')}至${arrSelected[1].join('-')}`;break}case'month-range':{this.value=`${arrSelected[0].slice(0,2).join('-')}至${arrSelected[1].slice(0,2).join('-')}`;break}case'time':case'minute':{this.value=arrSelected.join(':');break}case'hour':{this.value=`${arrSelected[0]}:00`;break}}if(this.value!=strValue){this.dispatchEvent(new CustomEvent('change',{'bubbles':true}))}return this.value}getCalendarData(arrDate){let strHtml='';const strType=this.params.type;let numMin=(this.min||'0001-01-01').toDate();let numMax=(this.max||'9999-00-01').toDate();const arrChinese=['日','一','二','三','四','五','六'];const arrMonthDay=this.getMonthDay(arrDate);const currentDate=arrDate.join('-').toDate();const getStrHtmlDay=()=>{let strHtmlDay='';arrChinese.forEach((strChineseDay,indexDay)=>{strHtmlDay=`${strHtmlDay}<span class="${CL.day('item')} col${indexDay}">${strChineseDay}</span>`});return strHtmlDay};strHtml=`<div class="${CL.day('x')}">${getStrHtmlDay()}</div>`;const objNewDate=arrDate.join('-').toDate();let numDayFirst=0;objNewDate.setDate(1);if(objNewDate.getDate()==2){objNewDate.setDate(0)}numDayFirst=objNewDate.getDay();let numLastMonth=objNewDate.getMonth()-1;if(numLastMonth<0){numLastMonth=11}const strHtmlData=`data-year="${arrDate[0]}"data-month="${objNewDate.getMonth() + 1}"`;const strHtmlYearMonthData='data-date=';let strHtmlFullData='';const getStrHtmlDate=()=>{let strHtmlDate='';let strClass='';for(let tr=0;tr<6;tr++){strHtmlDate=`${strHtmlDate}<div class="${CL.date('tr')}">`;for(let td=0;td<7;td++){strClass=`${CL.date('item')}col${td}`;const numYearNow=arrDate[0];const numMonthNow=objNewDate.getMonth()+1;let numDayNow;let objDateNow;if(strType=='date'){if(tr==0&&td<numDayFirst){numDayNow=arrMonthDay[numLastMonth]-numDayFirst+td+1;objDateNow=new Date(numYearNow,numLastMonth,numDayNow);strHtmlFullData=strHtmlYearMonthData+objDateNow.toArray().join('-');strHtmlDate=`${strHtmlDate}<span class="${strClass}"${strHtmlFullData}>${numDayNow}</span>`}else{numDayNow=tr*7+td-numDayFirst+1;if(numDayNow<=arrMonthDay[objNewDate.getMonth()]){objDateNow=new Date(numYearNow,objNewDate.getMonth(),numDayNow);strHtmlFullData=strHtmlYearMonthData+objDateNow.toArray().join('-');if(currentDate.getDate()==numDayNow){strClass=`${strClass}${SELECTED}`}if(objDateNow>=numMin&&objDateNow<=numMax){strHtmlDate=`${strHtmlDate}<a href="javascript:;"${strHtmlData}class="${strClass}"${strHtmlFullData}>${numDayNow}</a>`}else{strHtmlDate=`${strHtmlDate}<span class="${strClass}"${strHtmlFullData}>${numDayNow}</span>`}}else{numDayNow=numDayNow-arrMonthDay[objNewDate.getMonth()];strHtmlFullData=strHtmlYearMonthData+new Date(numYearNow,numMonthNow,numDayNow).toArray().join('-');strHtmlDate=`${strHtmlDate}<span class="${strClass}"${strHtmlFullData}>${numDayNow}</span>`}}}else if(strType=='date-range'){if(tr==0&&td<numDayFirst){strHtmlDate=`${strHtmlDate}<span class="${strClass}"></span>`}else{numDayNow=tr*7+td-numDayFirst+1;if(numDayNow<=arrMonthDay[objNewDate.getMonth()]){objDateNow=new Date(numYearNow,objNewDate.getMonth(),numDayNow);strHtmlFullData=strHtmlYearMonthData+objDateNow.toArray().join('-');const dateBegin=this[SELECTED][0].join('-').toDate();const dateEnd=this[SELECTED][1].join('-').toDate();const timeNow=objDateNow.getTime();const timeBegin=dateBegin.getTime();const timeEnd=dateEnd.getTime();if(timeNow>=timeBegin&&timeNow<=timeEnd){strClass=`${strClass}${SELECTED}`;if(timeNow==timeBegin){strClass=`${strClass}${CL.date('begin')}`}if(timeNow==timeEnd){strClass=`${strClass}${CL.date('end')}`}if(numDayNow==1){strClass=`${strClass}${CL.date('first')}`}else if(numDayNow==arrMonthDay[objNewDate.getMonth()]){strClass=`${strClass}${CL.date('last')}`}}if(objDateNow>=numMin&&objDateNow<=numMax){strHtmlDate=`${strHtmlDate}<a href="javascript:;"${strHtmlData}class="${strClass}"${strHtmlFullData}>${numDayNow}</a>`}else{strHtmlDate=`${strHtmlDate}<span class="${strClass}"${strHtmlFullData}>${numDayNow}</span>`}}else{strHtmlDate=`${strHtmlDate}<span class="${strClass}"></span>`}}}}strHtmlDate+='</div>'}return strHtmlDate};strHtml=`${strHtml}<div class="${CL.date('body')}">${getStrHtmlDate()}</div>`;return{monthDay:arrMonthDay,html:strHtml,min:numMin,max:numMax}}getMonthData(arrDate){let numMin=(this.min||'000000').replace(regDate,'').slice(0,6);let numMax=(this.max||'999912').replace(regDate,'').slice(0,6);const arrChinese=['一','二','三','四','五','六','七','八','九','十','十一','十二'];const numYear=arrDate[0]*1;const strType=this.params.type;const getStrHtmlDate=()=>{let strHtmlDate='';let strClass='';let strMonth='';for(let i=1;i<=12;i+=1){if(i<10){strMonth=`0${i}`}else{strMonth=`${i}`}strClass=CL.date('item');if(strType=='month'){if(i==arrDate[1]){strClass=`${strClass}${SELECTED}`}}else if(strType=='month-range'){const strBegin=this[SELECTED][0].slice(0,2).join('');const strEnd=this[SELECTED][1].slice(0,2).join('');const strNow=numYear+strMonth;if(strNow>=strBegin&&strNow<=strEnd){strClass=`${strClass}${SELECTED}`}}if(numYear+strMonth>=numMin&&numYear+strMonth<=numMax){strHtmlDate=`${strHtmlDate}<a href="javascript:"class="${strClass}"data-year="${numYear}"data-value="${strMonth}">${arrChinese[i-1]}月</a>`}else{strHtmlDate=`${strHtmlDate}<span class="${strClass}"data-value="${strMonth}">${arrChinese[i-1]}月</span>`}}return strHtmlDate};const strHtml=`<div class="${CL.month('body')}">${getStrHtmlDate()}</div>`;return{html:strHtml,min:numMin,max:numMax}}getMonthDay(date){let arrDate=date;if(typeof date!='object'&&!date.map){arrDate=date.toArray()}const arrMonthDay=[31,28,31,30,31,30,31,31,30,31,30,31];if(((arrDate[0]%4==0)&&(arrDate[0]%100!=0))||(arrDate[0]%400==0)){arrMonthDay[1]=29}return arrMonthDay}getDatePrevMonth(date){let arrDate=date;if(typeof date!='object'&&!date.map){arrDate=date.toArray()}const numMonth=arrDate[1]*1;const arrMonthDay=this.getMonthDay(arrDate);if(numMonth==1){return[arrDate[0]-1,12,arrDate[2]].join('-').toDate()}if(arrMonthDay[numMonth-2]<arrDate[2]){return[arrDate[0],numMonth-1,arrMonthDay[numMonth-2]].join('-').toDate()}return[arrDate[0],numMonth-1,arrDate[2]].join('-').toDate()}getDateNextMonth(date){let arrDate=date;if(typeof date!='object'&&!date.map){arrDate=date.toArray()}const numMonth=arrDate[1]*1;const arrMonthDay=this.getMonthDay(arrDate);if(numMonth==12){return[arrDate[0]+1,1,arrDate[2]].join('-').toDate()}if(arrMonthDay[numMonth]<arrDate[2]){return[arrDate[0],numMonth+1,arrMonthDay[numMonth]].join('-').toDate()}return[arrDate[0],numMonth+1,arrDate[2]].join('-').toDate()}date(){const eleContainer=this.element.target;const arrDate=this[SELECTED];const numPrevMonth=arrDate[1]-1;const numNextMonth=arrDate[1]*1+1;const objCalender=this.getCalendarData(arrDate);let strHtml=`<div class="${CL.date('x')}">`;strHtml=`${strHtml}<div class="${CL.date('head')}">`;const datePrevMonth=this.getDatePrevMonth(arrDate);const numPrevMonthGet=datePrevMonth.getMonth();const numPrevYearGet=datePrevMonth.getFullYear();const datePrevMonthLastDay=new Date(numPrevYearGet,numPrevMonthGet,objCalender.monthDay[numPrevMonthGet]);if(datePrevMonthLastDay>=objCalender.min){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('prev')}"data-month="${numPrevMonth}"role="button"aria-label="上一月"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('prev')}"aria-label="上一月"></span>`}const objDateNextMonth=this.getDateNextMonth(arrDate);const numNextMonthGet=objDateNextMonth.getMonth();const numNextYearGet=objDateNextMonth.getFullYear();if(new Date(numNextYearGet,numNextMonthGet,1)<=objCalender.max){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('next')}"data-month="${numNextMonth}"role="button"aria-label="下一月"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('next')}"aria-label="下一月"></span>`}strHtml=`${strHtml}<a href="javascript:"class="${CL.date('switch')}"data-type="month"role="button"aria-label="快速切换月份">${arrDate.slice(0,2).join('-')}</a></div>`;strHtml+=objCalender.html;if(new Date()>=objCalender.min&&new Date()<=objCalender.max){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('item')} ${CL.date('now')}"role="button">今天</a>`}else{strHtml=`${strHtml}<span class="${CL.date('item')} ${CL.date('now')}">今天</span>`}strHtml+='</div>';eleContainer.dataset.type='date';eleContainer.innerHTML=strHtml;return this}['date-range'](){const eleContainer=this.element.target;const arrDates=this[SELECTED];const arrDate=eleContainer.dataDate||arrDates[0];eleContainer.dataDate=arrDate;const numPrevMonth=arrDate[1]-1;const numNextMonth=arrDate[1]*1+1;const objCalender=this.getCalendarData(arrDate);let strHtml=`<div class="${CL.range('x')}">`;strHtml=`${strHtml}<div class="${CL.date('head')}"><div class="${CL.date('half')}">`;const datePrevMonthLastDay=new Date(arrDate[0],numPrevMonth-1,objCalender.monthDay[numPrevMonth]);if(datePrevMonthLastDay>=objCalender.min){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('prev')}"data-month="${numPrevMonth}"aria-label="上一个月，当前${arrDate[1]}月"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('prev')}"></span>`}strHtml=`${strHtml}<span class="${CL.date('switch')}">${new Date(arrDate[0],numPrevMonth,arrDate[2]).toArray().slice(0,2).join('-')}</span></div><div class="${CL.date('half')}">`;const objDateNextMonth=new Date(arrDate[0],arrDate[1],1);const objDateAfterMonth=new Date(arrDate[0],numNextMonth,arrDate[2]);if(objDateAfterMonth<=objCalender.max){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('next')}"data-month="${numNextMonth}"aria-label="下一个月，当前${numNextMonth}月"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('next')}"></span>`}strHtml=`${strHtml}<span class="${CL.date('switch')}">${objDateNextMonth.toArray().slice(0,2).join('-')}</span></div>`;strHtml+='</div>';strHtml=`${strHtml}<div class="${CL.range('body')} ${CL.range('date', 'body')}"><div class="${CL.date('half')}">${objCalender.html}</div><div class="${CL.date('half')}">${this.getCalendarData(objDateNextMonth.toArray()).html}</div></div>`;strHtml=`${strHtml}<div class="${CL.range('footer')}"><button class="ui-button"data-type="primary">确定</button><button class="ui-button"data-type="normal">取消</button></div>`;strHtml+='</div>';eleContainer.dataset.type='date-range';eleContainer.innerHTML=strHtml;return this}month(){const eleContainer=this.element.target;const arrDate=this[SELECTED];const objMonth=this.getMonthData(arrDate);const numMin=objMonth.min;const numMax=objMonth.max;let strHtml=`<div class="${CL.month('x')}">`;const numYear=arrDate[0]*1;strHtml=`${strHtml}<div class="${CL.date('head')}">`;if(numYear-1>=Math.floor(numMin/100)&&numYear-1<=Math.floor(numMax/100)){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('prev')}"data-year="${numYear - 1}"role="button"aria-label="上一年"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('prev')}"aria-label="上一年"></span>`}if(numYear+1>=Math.floor(numMin/100)&&numYear+1<=Math.floor(numMax/100)){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('next')}"data-year="${numYear + 1}"role="button"aria-label="下一年"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('next')}"></span>`}strHtml=`${strHtml}<a href="javascript:"class="${CL.date('switch')}"data-type="year"role="button"aria-label="快速切换年份">${numYear}</a></div>`;strHtml+=objMonth.html;const objThisYearMonth=new Date().toArray().slice(0,2).join('');if(objThisYearMonth>=numMin&&objThisYearMonth<=numMax){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('item')} ${CL.date('now')}">今月</a>`}else{strHtml=`${strHtml}<span class="${CL.date('item')} ${CL.date('now')}">今月</span>`}strHtml+='</div>';eleContainer.dataset.type='month';eleContainer.innerHTML=strHtml;return this}['month-range'](){const eleContainer=this.element.target;const arrDates=this[SELECTED];const arrDate=eleContainer.dataDate||arrDates[0];eleContainer.dataDate=arrDate;const numPrevYear=arrDate[0]*1-1;const numNextYear=arrDate[0]*1+1;const objMonth=this.getMonthData(arrDate);const numMaxYear=objMonth.max.slice(0,4);const numMinYear=objMonth.min.slice(0,4);let strHtml=`<div class="${CL.range('x')}">`;strHtml=`${strHtml}<div class="${CL.date('head')}"><div class="${CL.date('half')}">`;if(numPrevYear>=numMinYear&&numPrevYear<=numMaxYear){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('prev')}"data-year="${numPrevYear}"role="button"aria-label="上一年"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('prev')}"aria-label="上一年"></span>`}strHtml=`${strHtml}<span class="${CL.date('switch')}">${arrDate[0]}</span></div><div class="${CL.date('half')}">`;if(numNextYear>=numMinYear&&numNextYear<numMaxYear){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('next')}"data-year="${numNextYear}"role="button"aria-label="下一年"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('next')}"aria-label="下一年"></span>`}strHtml=`${strHtml}<span class="${CL.date('switch')}">${numNextYear}</span></div>`;strHtml+='</div>';strHtml=`${strHtml}<div class="${CL.range('body')} ${CL.range('month', 'body')}"><div class="${CL.date('half')}">${objMonth.html}</div><div class="${CL.date('half')}">${this.getMonthData([numNextYear,arrDate[1],arrDate[2]]).html}</div></div>`;strHtml=`${strHtml}<div class="${CL.range('footer')}"><button class="ui-button"data-type="primary">确定</button><button class="ui-button"data-type="normal">取消</button></div>`;strHtml+='</div>';eleContainer.dataset.type='month-range';eleContainer.innerHTML=strHtml;return this}year(){const eleContainer=this.element.target;const arrDate=this[SELECTED];let numMin=this.min||0;let numMax=this.max||9999;let strHtml=`<div class="${CL.year('x')}">`;const numYear=arrDate[0];strHtml=`${strHtml}<div class="${CL.date('head')}">`;if(numYear-12>=numMin&&numYear-12<=numMax){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('prev')}"data-year="${numYear - 12}"role="button"aria-label="上一个12年"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('prev')}"></span>`}if(numYear+12>=numMin&&numYear+12<=numMax){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('next')}"data-year="${numYear + 12}"role="button"aria-label="下一个12年"></a>`}else{strHtml=`${strHtml}<span class="${CL.date('next')}"></span>`}strHtml=`${strHtml}<span class="${CL.date('switch')}">${[numYear-6,numYear+5].join('-')}</span></div>`;const getStrHtmlDate=()=>{let strHtmlDate='';let strClass='';for(let indexYear=numYear-6;indexYear<numYear+6;indexYear+=1){strClass=CL.date('item');if(indexYear==numYear){strClass=`${strClass}${SELECTED}`}if(indexYear>=numMin&&indexYear<=numMax){strHtmlDate=`${strHtmlDate}<a href="javascript:"class="${strClass}">${indexYear}</a>`}else{strHtmlDate=`${strHtmlDate}<span class="${strClass}">${indexYear}</span>`}}return strHtmlDate};strHtml=`${strHtml}<div class="${CL.year('body')}">${getStrHtmlDate()}</div>`;const numThisYear=new Date().getFullYear();if(numThisYear>=numMin&&numThisYear<=numMax){strHtml=`${strHtml}<a href="javascript:"class="${CL.date('item')} ${CL.date('now')}"role="button">今年</a>`}else{strHtml=`${strHtml}<span class="${CL.date('item')} ${CL.date('now')}">今年</span>`}strHtml+='</div>';strHtml+='</div>';eleContainer.dataset.type='year';eleContainer.innerHTML=strHtml;return this}hour(){const eleContainer=this.element.target;const arrTime=this[SELECTED];let numStep=this.step||1;let numMin=Number(this.min.split(':')[0])||0;let numMax=Number(this.max.split(':')[0]);if(isNaN(numMax)||!this.max){numMax=24}let strHtml=`<div class="${CL.hour('x')}">`;const getStrHtmlTime=()=>{let strHtmlTime='';let strHour='';let strClass='';for(let indexHour=0;indexHour<24;indexHour+=numStep){strHour=String(indexHour).padStart(2,'0');strClass=CL.date('item');if(strHour==arrTime[0]){strClass=`${strClass}${SELECTED}`}if(indexHour>=numMin&&indexHour<=numMax){strHtmlTime=`${strHtmlTime}<a href="javascript:"class="${strClass}">${strHour}:00</a>`}else{strHtmlTime=`${strHtmlTime}<span class="${strClass}">${strHour}:00</span>`}}return strHtmlTime};strHtml=`${strHtml}<div class="${CL.hour('body')}">${getStrHtmlTime()}</div>`;strHtml+='</div>';eleContainer.dataset.type='hour';eleContainer.innerHTML=strHtml;return this}time(){const eleContainer=this.element.target;const arrTime=this[SELECTED];let numHourSelected=Number(arrTime[0]);let numMinuteSelected=Number(arrTime[1]);let numSecondSelected=Number(arrTime[2]);let numStep=this.step*1||1;if(numStep>60){numStep=Math.floor(numStep/60)}let strMin=this.min||'00:00:00';let strMax=this.max||'23:59:59';let numMinHour=Number(strMin.split(':')[0])||0;let numMinMinute=Number(strMin.split(':')[1])||0;let numMinSecond=Number(strMin.split(':')[2])||0;let numMaxHour=Number(strMax.split(':')[0]);if(isNaN(numMaxHour)){numMaxHour=23}let numMaxMinute=Number(strMax.split(':')[1]);let numMaxSecond=Number(strMax.split(':')[2]);if(isNaN(numMaxMinute)){numMaxMinute=59}if(isNaN(numMaxSecond)){numMaxSecond=59}let arrAmpm=[];if(this.datetimeformat!='H:mm'){arrAmpm=[0,1].map(index=>{if(index==0){return{value:'上午',selected:numHourSelected<=11}}return{value:'下午',selected:numHourSelected>11}})}let arrHours=Array(24).fill().map((empty,index)=>{let disabled=false;if(index<numMinHour||index>numMaxHour){disabled=true}let visibility=true;let selected=false;let value=String(index).padStart(2,'0');if(this.datetimeformat!='H:mm'){if((index>11&&arrAmpm[0].selected)||(index<=11&&arrAmpm[1].selected)){visibility=false}if(index>=12){value=String(index-12).padStart(2,'0')}if(value=='00'){value='12'}}if(index==numHourSelected){selected=true}return{value:value,disabled:disabled,selected:selected,visibility:visibility}});let arrMinutes=Array(60).fill().map((empty,index)=>{let disabled=false;let visibility=true;let selected=false;if(numHourSelected==numMinHour&&index<numMinMinute){disabled=true}else if(numHourSelected==numMaxHour&&index>numMaxMinute){disabled=true}if(arrTime.length==2&&index%numStep!=0){visibility=false}if(index==numMinuteSelected){selected=true}return{value:String(index).padStart(2,'0'),disabled:disabled,visibility:visibility,selected:selected}});let arrSeconds=Array(60).fill().map((empty,index)=>{let disabled=false;let visibility=true;let selected=false;if(numHourSelected==numMinHour&&numMinuteSelected==numMinMinute&&index<numMinSecond){disabled=true}else if(numHourSelected==numMaxHour&&numMinuteSelected==numMaxMinute&&index>numMaxSecond){disabled=true}if(arrTime.length==3&&index%numStep!=0){visibility=false}if(index==numSecondSelected){selected=true}return{value:String(index).padStart(2,'0'),disabled:disabled,visibility:visibility,selected:selected}});if(eleContainer.innerHTML){[...eleContainer.querySelectorAll('button')].forEach(function(j){j.classList.remove(SELECTED);j.disabled=false;j.dataset.visibility='true';let numIndexButton=j.dataset.index;let strButtonType=j.parentElement.dataset.type;if(strButtonType=='ampm'){if(arrAmpm[numIndexButton].selected){j.classList.add(SELECTED)}}else{let objTypeData={hour:arrHours,minute:arrMinutes,second:arrSeconds};let objDataMatch=objTypeData[strButtonType][numIndexButton];if(objDataMatch.selected){j.classList.add(SELECTED)}if(objDataMatch.disabled){j.disabled=true}if(objDataMatch.visibility==false){j.dataset.visibility='false'}}});return this}let strHtml=`<div class="${CL.time('x')}"data-step="${numStep}">`;if(this.datetimeformat!='H:mm'){strHtml=strHtml+`<div class="${CL.time('col')}"data-type="ampm">${arrAmpm.map((obj,index)=>`<button class="${CL.time('item')}${obj.selected ? ' selected' : ''}"data-index="${index}">${obj.value}</button>`).join('')}</div>`}strHtml=strHtml+`<div class="${CL.time('col')}"data-type="hour">${arrHours.map((obj,index)=>`<button class="${CL.time('item')}${obj.selected ? ' ' + SELECTED : ''}"data-index="${index}"${obj.disabled?' disabled':''}data-visibility="${obj.visibility}">${obj.value}</button>`).join('')}</div>`;strHtml=strHtml+`<div class="${CL.time('col')}"data-type="minute">${arrMinutes.map((obj,index)=>`<button class="${CL.time('item')}${obj.selected ? ' ' + SELECTED : ''}"data-index="${index}"${obj.disabled?' disabled':''}data-visibility="${obj.visibility}">${obj.value}</button>`).join('')}</div>`;if(arrTime.length==3){strHtml=strHtml+`<div class="${CL.time('col')}"data-type="second">${arrSeconds.map((obj,index)=>`<button class="${CL.time('item')}${obj.selected ? ' ' + SELECTED : ''}"data-index="${index}"${obj.disabled?' disabled':''}data-visibility="${obj.visibility}">${obj.value}</button>`).join('')}</div>`}strHtml+='</div>';eleContainer.dataset.type='time';eleContainer.innerHTML=strHtml}minute(){const eleContainer=this.element.target;const arrTime=this[SELECTED];const numStep=this.step*1||1;let numMin=(this.min||'0').replace(':','')*1;let numMax=(this.max||'2359').replace(':','')*1;let strHtml=`<div class="${CL.minute('x')}"data-step="${numStep}">`;const hour=arrTime[0]*1;strHtml=`${strHtml}<div class="${CL.date('head')}">`;if(hour<=Math.floor(numMin/100)){strHtml=`${strHtml}<span class="${CL.date('prev')}"></span>`}else{strHtml=`${strHtml}<a href="javascript:"class="${CL.date('prev')}"data-hour="${hour - 1}"role="button"aria-label="上一个小时"></a>`}if(hour>=Math.floor(numMax/100)){strHtml=`${strHtml}<span class="${CL.date('next')}"></span>`}else{strHtml=`${strHtml}<a href="javascript:"class="${CL.date('next')}"data-hour="${hour + 1}"role="button"aria-label="下一个小时"></a>`}strHtml=`${strHtml}<a href="javascript:"class="${CL.date('switch')}"data-type="hour">${arrTime[0]}:00</a></div>`;const getStrHtmlTime=()=>{let strHtmlTime='';let strMinute='';let strClass='';for(let indexMinute=0;indexMinute<60;indexMinute+=numStep){strMinute=`${indexMinute}`;if(strMinute.length==1){strMinute=`0${strMinute}`}strClass=CL.date('item');if((arrTime[0]+strMinute)*1>=numMin&&(arrTime[0]+strMinute)*1<=numMax){if(strMinute==arrTime[1]){strClass=`${strClass}${SELECTED}`}strHtmlTime=`${strHtmlTime}<a href="javascript:"class="${strClass}">${[arrTime[0],strMinute].join(':')}</a>`}else{strHtmlTime=`${strHtmlTime}<span class="${strClass}">${[arrTime[0],strMinute].join(':')}</span>`}}return strHtmlTime};strHtml=`${strHtml}<div class="${CL.minute('body')}">${getStrHtmlTime()}</div>`;strHtml+='</div>';eleContainer.dataset.type='minute';eleContainer.innerHTML=strHtml;return this}position(){this.follow();return this}show(){const eleContainer=this.element.target;if(this.disabled){return this}this.format();if(this.params.type=='date-range'){if(!this.dataRangeSelected){this.dataRangeSelected=this[SELECTED]}this['date-range']()}else if(this.params.type=='month-range'){if(!this.dataRangeSelected){this.dataRangeSelected=this[SELECTED]}this['month-range']()}else if(this[this.params.type]){this[this.params.type]()}else{this.date()}if(document.body.contains(eleContainer)==false){document.body.appendChild(eleContainer);this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}eleContainer.style.display='inline-block';this.classList.add(ACTIVE);this.position();this.display=true;if(this.params.type=='time'){[...eleContainer.querySelectorAll('.'+SELECTED)].forEach((item,index)=>{if(item.scrollIntoViewIfNeeded){item.scrollIntoViewIfNeeded()}else if(item.offsetTop-5>item.parentElement.scrollTop+item.parentElement.clientHeight||item.offsetTop-5<item.parentElement.scrollTop){item.parentElement.scrollTop=item.offsetTop-5}if(index==0){item.focus({preventScroll:true})}})}this.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-datetime'}}));return this}hide(){const eleContainer=this.element.target;if(this.display==true){eleContainer.style.display='none';this.classList.remove(ACTIVE);if(document.activeElement==document.body||eleContainer.contains(document.activeElement)){this.focus();this.blur()}}this.display=false;this.dispatchEvent(new CustomEvent('hide',{detail:{type:'ui-datetime'}}));return this}connectedCallback(){let strType=this.getAttribute('type');if(['date','year','month','time','hour','minute','date-range','month-range'].includes(strType)==false){strType='date';if(strType){this.removeAttribute('type')}}this.params=this.params||{};this.params.type=strType;let eleContainer=null;this.setAttribute('readonly','readonly');this.toggleAttribute('required',true);let strId=this.id;if(!strId){strId=`lulu_${String(Math.random()).replace('0.','')}`;this.id=strId}let strInitValue=this.getAttribute('value')||this.value;switch(strType){case'date':case'year':case'month':{const objInitDate=strInitValue.toDate();const arrDate=objInitDate.toArray();if(strType=='date'){this.value=arrDate.join('-')}else if(strType=='year'){this.value=arrDate[0]}else if(strType=='month'){this.value=arrDate.slice(0,2).join('-')}this[SELECTED]=arrDate;break}case'time':{const arrTime=strInitValue.toTime();let dateCurrent=new Date();let numHour=dateCurrent.getHours();let numMinute=dateCurrent.getMinutes();let numSecond=dateCurrent.getSeconds();let strHour=String(arrTime[0]||numHour).padStart(2,'0');let strMinute=String(arrTime[1]||numMinute).padStart(2,'0');let strSecond=String(arrTime[2]||numSecond).padStart(2,'0');let numStep=this.step;if(strType=='time'&&((!numStep&&arrTime[2])||(numStep>0&&numStep<=30))){this.value=[strHour,strMinute,strSecond].join(':')}else{this.value=[strHour,strMinute].join(':')}this[SELECTED]=[strHour,strMinute,strSecond];break}case'hour':case'minute':{const arrTime=strInitValue.toTime();let dateCurrent=new Date();let numHour=dateCurrent.getHours();let numMinute=dateCurrent.getMinutes();let strHour=String(arrTime[0]||numHour).padStart(2,'0');let strMinute=String(arrTime[1]||numMinute).padStart(2,'0');if(!arrTime[0]&&strType=='hour'){strMinute='00'}this.value=[strHour,strMinute].join(':');this[SELECTED]=[strHour,strMinute];break}case'date-range':case'month-range':{let objBeginDate=new Date();let objEndDate=new Date();const arrRange=strInitValue.split(' ');if(strInitValue!=''&&arrRange.length==1){const someDate=arrRange[0].toDate();if(someDate.getTime()>objBeginDate.getTime()){objEndDate=someDate}else{objBeginDate=someDate}}else{objBeginDate=arrRange[0].toDate();objEndDate=arrRange[arrRange.length-1].toDate()}const arrBegin=objBeginDate.toArray();const arrEnd=objEndDate.toArray();if(strType=='date-range'){this.value=`${arrBegin.join('-')}至${arrEnd.join('-')}`}else{this.value=`${arrBegin.slice(0,2).join('-')}至${arrEnd.slice(0,2).join('-')}`}this[SELECTED]=[arrBegin,arrEnd];break}}if(/time/.test(strType)){this.datetimeformat='H:mm';let eleInputTmp=document.createElement('input');eleInputTmp.setAttribute('type','time');eleInputTmp.value='00:00';document.body.append(eleInputTmp);eleInputTmp.style.position='absolute';eleInputTmp.style.left='-999px';eleInputTmp.style.fontFamily='revert';if(eleInputTmp.type=='time'){eleInputTmp.style.fontSize='20px';let numWidthOrigin=eleInputTmp.clientWidth;eleInputTmp.style.fontSize='30px';let numDiffWidth=eleInputTmp.clientWidth-numWidthOrigin;let numLetters=Math.ceil(numDiffWidth/10);if(numLetters>=5){this.datetimeformat='ah:mm'}eleInputTmp.remove()}}if(!eleContainer){eleContainer=document.createElement('div');eleContainer.classList.add(CL.date('container'));const strRandId=`lulu_${String(Math.random()).replace('0.','')}`;eleContainer.setAttribute('id',strRandId);eleContainer.classList.add('ESC');this.setAttribute('data-target',strRandId);eleContainer.setAttribute('data-id',strId)}this.element=this.element||{};this.element.target=eleContainer;this.events();this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-datetime'}}));this.isConnectedCallback=true}}return Component})();if(!customElements.get('ui-datetime')){customElements.define('ui-datetime',DateTime,{extends:'input'})}const Validate=(()=>{window.DBC2SBC=(str)=>{let result='';let i,code;for(i=0;i<str.length;i++){code=str.charCodeAt(i);if(code>=65281&&code<=65373){result+=String.fromCharCode(str.charCodeAt(i)-65248)}else if(code==12288){result+=String.fromCharCode(str.charCodeAt(i)-12288+32)}else{result+=str.charAt(i)}}return result};window.scrollTopTo=(top,callback)=>{let scrollTop=document.scrollingElement.scrollTop;const rate=2;const funTop=()=>{scrollTop=scrollTop+(top-scrollTop)/rate;if(Math.abs(scrollTop-top)<=1){document.scrollingElement.scrollTop=top;callback&&callback();return}document.scrollingElement.scrollTop=scrollTop;requestAnimationFrame(funTop)};funTop()};document.validate=(function(){return{reg:{email:'^[a-z0-9._%-]+@([a-z0-9-]+\\.)+[a-z]{2,4};,number:'^\\-?\\d+(\\.\\d+)?;,url:"^(http|https)\\:\\/\\/[a-z0-9\\-\\.]+\\.[a-z]{2,3}(:[a-z0-9]*)?\\/?([a-z0-9\\-\\._\\:\\?\\,\\'\\/\\\\\\+&amp;%\\$#\\=~])*$",tel:'^1\\d{10};,zipcode:'^\\d{6};,date:'^\\d{4}\\-(0\\d|1[0-2])\\-([0-2]\\d|3[0-1]);,time:'^[0-2]\\d\\:[0-5]\\d;,hour:'^[0-2]\\d\\:00;,minute:'^[0-2]\\d\\:[0-5]\\d;,'date-range':'^\\d{4}(\\-\\d{2}){2}\\s至\\s\\d{4}(\\-\\d{2}){2};,'month-range':'^\\d{4}\\-\\d{2}\\s至\\s\\d{4}\\-\\d{2};},name:{email:'邮箱',tel:'手机号码',url:'网址',zipcode:'邮编',password:'密码',number:'数值',range:'数值',date:'日期',year:'年份',month:'月份',hour:'小时',minute:'分钟',time:'时间',datetime:'日期时间','date-range':'日期范围','month-range':'月份范围'},selectRange(element,start,end){if(!element){return}if(element.createTextRange){const objRange=element.createTextRange();objRange.collapse(true);objRange.moveEnd('character',end);objRange.moveStart('character',start);objRange.select()}else if(element.focus){element.focus();element.setSelectionRange(start,end)}},getTel(tel){let strTel=tel||'';strTel=strTel.replace('+86','');if(strTel.match(/\d/)&&strTel.match(/\d/g).length==11){strTel=strTel.replace(/\D/g,'')}return strTel},getLength(element,max){if(element.type=='password'){return max?max:element.value.length}const strAttrLang=element.getAttribute('lang');const strValue=element.value.trim();if(!strAttrLang){return max?max:strValue.length}if(strValue==''){return 0}let numRatioCh=1;let numRatioEn=1;if(/zh/i.test(strAttrLang)){numRatioEn=0.5}else if(/en/i.test(strAttrLang)){numRatioCh=2}if(!max){const lenOriginCh=strValue.replace(/[\x00-\xff]/g,'').length;const lenOriginEn=strValue.length-lenOriginCh;return Math.ceil(lenOriginEn*numRatioEn)+Math.ceil(lenOriginCh*numRatioCh)}let numStart=0;let lenMatch=max;strValue.split('').forEach((letter,index)=>{if(numStart>=max){return}if(/[\x00-\xff]/.test(letter)){numStart+=numRatioEn}else{numStart+=numRatioCh}if(numStart>=max){lenMatch=index+1}});return lenMatch},getType(element){const strAttrType=element.getAttribute('type');let strType=strAttrType||element.type||'';if(strType=='select-one'){strType='select'}return strType},getReportText(element){const defaultPrompt={name:this.name,badInput:'值无效',customError:'包含错误',patternMismatch:{pattern:'内容格式不符合要求',multiple:'某项内容格式不符合要求'},valueMissing:{radio:'请选择一个选项',checkbox:'如果要继续，请选中此框',select:'请选择列表中的一项','select-one':'请选择列表中的一项',empty:'请填写此字段'},rangeOverflow:'值偏大',rangeUnderflow:'值偏小',stepMismatch:'值不在间隔要求范围内',tooLong:'内容长度偏大',tooShort:'内容长度偏小',typeMismatch:'值和输入框类型不匹配'};if(!element){return''}const objValidateState=element.validity;if(objValidateState.valid==true){return''}let strFinalText='';const strId=element.id;const strType=this.getType(element);const customValidate=element.customValidate||{};const optionPrompt=customValidate.report||{};const strName=defaultPrompt.name[strType]||(function(){if(!customValidate.label||!strId||/checkbox|radio/.test(strType)){return}let strTextLabel='';document.querySelectorAll('label[for='+strId+']').forEach(function(k){const eleLabelClone=k.cloneNode(true);[].slice.call(eleLabelClone.children).forEach(function(j){j.remove()});const strLabelCloneText=eleLabelClone.innerHTML.trim().replace(/\d/g,'').replace('：','');if(strLabelCloneText.length>strTextLabel.length){strTextLabel=strLabelCloneText}});if(strTextLabel.length>=2){return strTextLabel}})();if(objValidateState.valueMissing){strFinalText=optionPrompt.valueMissing;if(!strFinalText){if(strType&&strName){if(strType!='select'){strFinalText=strName+'不能为空'}else{strFinalText='您尚未选择'+strName}}else{strFinalText=defaultPrompt.valueMissing[strType]}strFinalText=strFinalText||defaultPrompt.valueMissing.empty}}else if(objValidateState.patternMismatch){strFinalText=optionPrompt.patternMismatch;if(!strFinalText){const isMultiple=element.hasAttribute('multiple')&&element.value.split(',').length>1;strFinalText=defaultPrompt.patternMismatch[isMultiple?'multiple':'pattern'];if(strType&&strName){strFinalText=strName+strFinalText}}}else if(objValidateState.badInput){strFinalText=optionPrompt.badInput;if(!strFinalText){strFinalText=(strName||'')+defaultPrompt.badInput}}else if(objValidateState.typeMismatch){strFinalText=optionPrompt.typeMismatch;if(!strFinalText){strFinalText=defaultPrompt.typeMismatch;if(strName){strFinalText=strFinalText.replace('输入框',strName)}}}else if(objValidateState.rangeUnderflow||objValidateState.rangeOverflow){strFinalText=optionPrompt.rangeUnderflow||optionPrompt.rangeOverflow;if(!strFinalText&&strType&&strName){let strMin=element.getAttribute('min');let strMax=element.getAttribute('max');if(strType=='month-range'){strMin=strMin.slice(0,7);strMax=strMax.slice(0,7)}const strTextBigger='必须要大于或等于'+strMin;const strTextSmall='必须要小于或等于'+strMax;if(objValidateState.rangeUnderflow&&objValidateState.rangeOverflow){strFinalText='起始日期'+strTextBigger+'，结束日期'+strTextSmall}else if(objValidateState.rangeUnderflow){strFinalText=strName+strTextBigger;if(strType.slice(-6)=='-range'){strFinalText='起始日期'+strTextBigger}}else{strFinalText=strName+strTextSmall;if(strType.slice(-6)=='-range'){strFinalText='结束日期'+strTextSmall}}}strFinalText=strFinalText||'值不在要求的范围内'}else if(objValidateState.stepMismatch){strFinalText=optionPrompt.stepMismatch;if(!strFinalText){const numMin=element.getAttribute('min')*1;const numMax=element.getAttribute('max')*1;const numStep=element.getAttribute('step')*1||1;if(strType=='number'||strType=='range'){strFinalText='请输入有效的值。两个最接近的有效值是'+(function(){const numValue=element.value.trim()*1;let numClosest=numMin;for(let start=numMin;start<numMax;start+=numStep){if(start<numValue&&(start+numStep)>numValue){numClosest=start;break}}return[numClosest,numClosest+numStep].join('和')})()}else{strFinalText='请'+(element.hasAttribute('readonly')?'选择':'输入')+'有效的值。'+(strName||'')+'间隔是'+numStep}}strFinalText=strFinalText||defaultPrompt.stepMismatch}else if(objValidateState.tooLong||objValidateState.tooShort){const strAttrLang=element.getAttribute('lang');let strTextCharLength='';if(/zh/i.test(strAttrLang)){strTextCharLength='个汉字(2字母=1汉字)'}else if(/en/i.test(strAttrLang)){strTextCharLength='个字符(1汉字=2字符)'}if(objValidateState.tooLong){strFinalText=optionPrompt.tooLong;if(!strFinalText){const strMaxLength=element.maxlength||element.getAttribute('maxlength');strFinalText=(strName||'')+'内容长度不能大于'+strMaxLength.replace(/\D/g,'')+strTextCharLength}}else{strFinalText=optionPrompt.tooShort;if(!strFinalText){const strMinLength=element.getAttribute('minlength');strFinalText='内容长度不能小于'+strMinLength+strTextCharLength}}}else if(objValidateState.customError){strFinalText=optionPrompt.customError||defaultPrompt.customError}if(typeof strFinalText=='function'){strFinalText=strFinalText.call(element,element)}return strFinalText},getMissingState(element){const objValidateState={valueMissing:false};if(!element||element.disabled){return objValidateState}const strType=this.getType(element);let strValue=element.value;if(element.hasAttribute('required')){if(strType=='radio'){let eleRadios=[element];const eleForm=element.closest('form')||element.parentElement.parentElement;if(element.name&&eleForm){eleRadios=eleForm.querySelectorAll('input[type="radio"][name="'+element.name+'"]')}const isAtLeastOneRadioChecked=[].slice.call(eleRadios).some(function(j){return j.checked});if(isAtLeastOneRadioChecked==false){objValidateState.valueMissing=true}return objValidateState}else if(strType=='checkbox'){if(element.checked==false){objValidateState.valueMissing=true}return objValidateState}else if(strType!='password'){strValue=strValue.trim()}if(strValue==''){element.value='';objValidateState.valueMissing=true}}return objValidateState},isMissing(element){return this.getMissingState(element).valueMissing},getMismatchState(element,regex,params){const objValidateState={patternMismatch:false,typeMismatch:false};if(!element||element.disabled){return false}const strInputValue=element.value;let strDealValue=strInputValue;const strType=this.getType(element);if(/^radio|checkbox|select$/i.test(strType)){return objValidateState}if(strType!='password'){strDealValue=strInputValue.trim()}if(/^text|textarea|password$/i.test(strType)==false){strDealValue=window.DBC2SBC(strDealValue)}if(strType=='tel'){strDealValue=this.getTel(strDealValue)}if(document.validate.focusable!==false&&document.validate.focusable!==0&&strDealValue!=strInputValue){element.value=strDealValue}if(strDealValue==''){return objValidateState}regex=regex||(function(){return element.getAttribute('pattern')})()||(function(){return strType&&strType.split('|').map(function(j){const regMatch=document.validate.reg[j];if(regMatch){return regMatch}}).join('|')})();if(!regex){return objValidateState}const isMultiple=element.hasAttribute('multiple');const regNew=new RegExp(regex,params||'i');let isAllPass=true;if(isMultiple&&/^number|range$/i.test(strType)==false){strDealValue.split(',').forEach(function(j){j=j.trim();if(isAllPass&&!regNew.test(j)){isAllPass=false}})}else{isAllPass=regNew.test(strDealValue)}if(isAllPass==false){if(element.hasAttribute('pattern')){objValidateState.patternMismatch=true}else{objValidateState.typeMismatch=true}}return objValidateState},isMismatch(element,regex,params){const objValidateState=this.getMismatchState(element,regex,params);return objValidateState.patternMismatch||objValidateState.typeMismatch},getRangeState(element){const objValidateState={badInput:false,rangeOverflow:false,rangeUnderflow:false,stepMismatch:false};if(!element||element.disabled){return objValidateState}const strType=this.getType(element);let strValue=element.value.trim();if(/radio|checkbox|select|textarea/i.test(strType)||strValue==''){return objValidateState}let strAttrMin=element.getAttribute('min');let strAttrMax=element.getAttribute('max');const strAttrStep=Number(element.getAttribute('step'))||1;if((strType=='number'||strType=='range')&&!/[-+]?[0-9]/.test(strValue)){objValidateState.badInput=true}if(strType.slice(-6)!='-range'){if(strValue=='0'||Number(strValue)==strValue){strValue=strValue*1}if(strAttrMin&&strValue<strAttrMin){objValidateState.rangeUnderflow=true}if(strAttrMax&&strValue>strAttrMax){objValidateState.rangeOverflow=true}if((strType=='number'||strType=='range')&&strAttrStep&&strAttrMin&&!/^\d+$/.test(Math.abs(strValue-strAttrMin)/strAttrStep)){objValidateState.stepMismatch=true}if((strType=='hour'||strType=='minute'||strType=='time')&&strAttrMin&&strAttrStep){const minuteValue=strValue.split(':')[1];const minuteMin=strAttrMin.split(':')[1];if(strType=='hour'&&(minuteValue!=minuteMin||(strValue.split(':')[0]-strAttrMin.split(':')[0])%strAttrStep!=0)){objValidateState.stepMismatch=true}else if((minuteValue-minuteMin)%strAttrStep!==0){objValidateState.stepMismatch=true}}}else{const arrSplitValue=strValue.split(' ');if(strType=='month-range'){strAttrMin=strAttrMin&&strAttrMin.slice(0,7);strAttrMax=strAttrMax&&strAttrMax.slice(0,7)}if(arrSplitValue.length==3){if(strAttrMin&&arrSplitValue[0]<strAttrMin){objValidateState.rangeUnderflow=true}if(strAttrMax&&arrSplitValue[2]>strAttrMax){objValidateState.rangeOverflow=true}}}return objValidateState},isOut(element){const objValidateState=this.getRangeState(element);return objValidateState.badInput||objValidateState.rangeOverflow||objValidateState.rangeUnderflow||objValidateState.stepMismatch},getLengthState(element){const objValidateState={tooLong:false,tooShort:false};if(!element||element.disabled||/^radio|checkbox|select$/i.test(element.type)){return objValidateState}const strAttrMinLength=element.getAttribute('minlength');let strAttrMaxLength=element.maxlength||element.getAttribute('maxlength');const strValue=element.value;if(strValue==''){return objValidateState}const numLength=this.getLength(element);if(strAttrMinLength&&numLength<strAttrMinLength){objValidateState.tooShort=true}if(strAttrMaxLength){strAttrMaxLength=strAttrMaxLength.replace(/\D/g,'');if(numLength>strAttrMaxLength){objValidateState.tooLong=true}}return objValidateState},isOverflow(element){const objValidateState=this.getLengthState(element);return objValidateState.tooLong||objValidateState.tooShort},getCustomState(element){const objValidateState={customError:false};const customValidate=element.customValidate;if(customValidate&&typeof customValidate.method=='function'){const dataResult=customValidate.method.call(customValidate.owner,element);if(dataResult){objValidateState.customError=true;if(typeof dataResult=='object'&&dataResult.customError){this.setCustomValidity(element,dataResult.customError)}else{this.setCustomValidity(element,dataResult)}}}return objValidateState},setCustomValidity(element,content){if(!content){return}if(!element.customValidate){element.customValidate={report:{}}}if(!element.customValidate.report){element.customValidate.report={}}element.customValidate.report.customError=content},checkValidity(element){if(!element||element.disabled){return true}const strType=element.getAttribute('type')||element.type;const strTag=element.tagName.toLowerCase();if(/^button|submit|reset|file|image$/.test(strType)==true||strTag=='button'){return true}if(element.matches('input, select, textarea')==false&&element.children){element=element.querySelectorAll('input, select, textarea')}if(element.nodeType==1){return this.getValidity(element).valid}if(element.length){return[].slice.call(element).every(function(j){return this.checkValidity(j)}.bind(this))}return true},getValidity(element){if(element.lastValidateState&&element.lastValue===element.value&&/radio|checkbox/.test(element.type)==false){return element.lastValidateState}let objValidateState={badInput:false,customError:false,patternMismatch:false,rangeOverflow:false,rangeUnderflow:false,stepMismatch:false,tooLong:false,tooShort:false,typeMismatch:false,valid:true,valueMissing:false};objValidateState=Object.assign({},objValidateState,this.getMissingState(element),this.getMismatchState(element),this.getRangeState(element),this.getLengthState(element),this.getCustomState(element));let isSomeInvalid=false;for(let keyValidate in objValidateState){if(keyValidate!='valid'&&objValidateState[keyValidate]==true){isSomeInvalid=true}}objValidateState.valid=!isSomeInvalid;element.lastValue=element.value;element.lastValidateState=objValidateState;setTimeout(function(){delete element.lastValidateState},1);return objValidateState},reportValidity(element,content){content=content||this.getReportText(element);this.errorTip(element,content);if(content===''&&element.data&&element.data.errorTip){element.data.errorTip.hide()}const isPass=!content;this.styleError(element,isPass);return isPass},styleError(element,valid){if(!element){return this}if(typeof valid=='undefined'){valid=element.validity.valid}else{element.dispatchEvent(new CustomEvent(valid?'valid':'invalid'))}const eleTarget=this.getTarget(element);if(!eleTarget){return valid}const eleForm=element.form||element.closest('form')||(element.customValidate&&element.customValidate.owner);if(element.type=='radio'&&element.name&&eleForm){eleForm.querySelectorAll('input[type=radio][name='+element.name+']').forEach(function(j){const eleTargetRadio=this.getTarget(j);if(valid){eleTargetRadio.removeAttribute('is-error');eleTargetRadio.removeAttribute('aria-label')}else{eleTargetRadio.setAttribute('is-error','')}}.bind(this))}else if(valid){eleTarget.removeAttribute('is-error');eleTarget.removeAttribute('aria-label')}else{eleTarget.setAttribute('is-error','')}return valid},errorTip(element,content){const eleTarget=this.getTarget(element);if(!eleTarget||!content){return this}const objStyle=window.getComputedStyle(eleTarget);if(objStyle.display=='none'||objStyle.visibility=='hidden'){return this}const funShow=function(){const eleControl=document.validate.errorTip.control;const eleTipTarget=document.validate.errorTip.target;eleTipTarget.errorTip(content,{onShow(eleTrigger,eleTips){const numOffsetX=0.5*(eleTips.clientWidth-eleTipTarget.clientWidth);if(numOffsetX<0){eleTips.style.marginLeft=0.5*(eleTips.clientWidth-eleTipTarget.clientWidth)+'px'}else{eleTips.style.marginLeft=0}if(document.validate.focusable===false){eleTips.classList.add('none')}else{eleTips.classList.remove('none')}},onHide(eleTrigger,eleTips){const eleForm=eleControl.form||eleControl.closest('form');if(!eleForm||!eleForm.isImmediated){return}eleTips.style.marginLeft='';document.validate.styleError(eleControl)}});if(document.validate.focusable===false||document.validate.focusable===0){return}document.validate.focusable=null;if(!document.validate.getType(eleControl)){return}if(content.indexOf('内容长度')!=-1&&content.indexOf('大')!=-1){const strValue=eleControl.value;const numLength=strValue.length;const strAttrMaxLength=eleControl.maxlength||eleControl.getAttribute('maxlength').replace(/\D/g,'');if(numLength&&strAttrMaxLength){document.validate.selectRange(element,document.validate.getLength(element,strAttrMaxLength),numLength)}}else if(eleControl.focus&&eleControl.select){eleControl.focus();eleControl.select()}};document.validate.errorTip.control=element;document.validate.errorTip.target=eleTarget;const objRect=eleTarget.getBoundingClientRect();let numScrollTop=-1;if(objRect.top<50){numScrollTop=window.pageYOffset-(50-objRect.top)}else if(objRect.bottom>window.innerHeight){numScrollTop=window.pageYOffset+(objRect.bottom-window.innerHeight)}if(numScrollTop>=0){window.scrollTopTo(numScrollTop,funShow)}else{funShow()}return this},getTarget(element){if(!element){return null}let eleTarget=element;const strType=element.getAttribute('type')||element.type;const strId=element.id;const strTag=element.tagName.toLowerCase();const objStyle=window.getComputedStyle(element);if(strType=='radio'){if(objStyle.opacity!='1'){eleTarget=element.parentElement.querySelector('label.ui-radio[for="'+strId+'"]')}}else if(strType=='checkbox'){if(objStyle.opacity!='1'){eleTarget=element.parentElement.querySelector('label.ui-checkbox[for="'+strId+'"]')}}else if(strType=='select'||strTag=='select'){if(objStyle.opacity!='1'){eleTarget=element.nextElementSibling}}else if(strType=='range'){if(objStyle.display=='none'){eleTarget=element.nextElementSibling}}else if(strType=='hidden'||objStyle.display=='none'||objStyle.visibility=='hidden'){const eleTargetRel=document.getElementById(eleTarget.getAttribute('data-target'))||element.dataTarget;if(eleTargetRel){eleTarget=document.validate.getTarget(eleTargetRel)}}else if(strType=='textarea'||strTag=='textarea'){if(element.classList.contains('ui-textarea')==false&&element.parentElement.querySelector('.ui-textarea')){eleTarget=element.parentElement.querySelector('.ui-textarea')}}else if(strTag=='input'){if(element.classList.contains('ui-input')==false&&element.parentElement.querySelector('.ui-input')){eleTarget=element.parentElement.querySelector('.ui-input')}}return eleTarget}}})();[HTMLInputElement.prototype,HTMLSelectElement.prototype,HTMLTextAreaElement.prototype].forEach(function(k){Object.defineProperty(k,'validity',{get(){return document.validate.getValidity(this)},configurable:true});Object.defineProperty(k,'validationMessage',{get(){return document.validate.getReportText(this)},configurable:true});Object.defineProperty(k,'checkValidity',{value(){return this.validity.valid},configurable:true});Object.defineProperty(k,'reportValidity',{value(content){return document.validate.reportValidity(this,content)},configurable:true});Object.defineProperty(k,'setCustomValidity',{value(content){if(!content){return}const arrValidateKey=['badInput','customError','patternMismatch','rangeOverflow','rangeUnderflow','stepMismatch','tooLong','tooShort','typeMismatch','valueMissing'];if(!this.customValidate){this.customValidate={}}if(!this.customValidate.report){this.customValidate.report={}}if(typeof content=='string'){arrValidateKey.forEach(function(j){this.customValidate.report[j]=content})}else if(typeof content=='object'){Object.assign(this.customValidate.report,content)}},configurable:true})});Object.defineProperty(HTMLFormElement.prototype,'checkValidity',{value(){return document.validate.checkValidity(this)},configurable:true});class Component{constructor(element,callback,options){if(typeof element=='string'){element=document.getElementById(element)||document.querySelector(element)}if(!element){return this}const eleForm=element;if(eleForm.data&&eleForm.data.validate){return eleForm.data.validate}eleForm.setAttribute('novalidate','novalidate');const defaults={multiple:true,immediate:true,label:true,validate:[]};if(typeof callback=='object'){options=callback;callback=null}const objParams=Object.assign({},defaults,options||{});eleForm.querySelectorAll('[type="submit"]:disabled, [type="image"]:disabled').forEach(function(j){j.disabled=false});eleForm.addEventListener('submit',(event)=>{if(this.stopValidate){return}event.preventDefault();if(this.checkValidity()){if(typeof callback=='function'){callback.call(this,eleForm)}eleForm.dispatchEvent(new CustomEvent('valid'))}return false});this.element={form:eleForm};this.params={multiple:objParams.multiple,immediate:objParams.immediate,label:objParams.label};this.setCustomValidity(objParams.validate);this.count();this.enhance();if(!eleForm.data){eleForm.data={}}eleForm.data.validate=this;return this}setCustomValidity(validate){let dataValidate=validate||this.dataValidate;if(!dataValidate||!this.element||!this.element.form){return this}if(typeof dataValidate=='function'){dataValidate=dataValidate()}if(dataValidate&&!dataValidate.forEach&&dataValidate.id){dataValidate=[dataValidate]}const isLabel=this.params.label;let eleFormCollection=this.element.form.elements||this.element.form.querySelectorAll('input, textarea, select');if(!eleFormCollection.length){return this}[...eleFormCollection].forEach(eleInput=>{const strId=eleInput.id;let customValidate={label:isLabel,owner:this};if(strId&&dataValidate&&dataValidate.length){dataValidate.forEach(function(j){if(j.id==strId){j.label=isLabel;j.owner=this;customValidate=j}}.bind(this))}if(!this.element.form.data||!this.element.form.data.validate){eleInput.lastValue=eleInput.value||''}eleInput.customValidate=customValidate});this.dataValidate=validate}count(){const eleForm=this.element.form;const propsInput=Object.getOwnPropertyDescriptor(HTMLInputElement.prototype,'value');const propsTextarea=Object.getOwnPropertyDescriptor(HTMLTextAreaElement.prototype,'value');eleForm.querySelectorAll('input, textarea').forEach(function(j){let strAttrMaxLength=j.getAttribute('maxlength');if(strAttrMaxLength){try{j.setAttribute('maxlength','_'+strAttrMaxLength+'_')}catch(e){j.removeAttribute('maxlength');j.maxlength=strAttrMaxLength}}const strAttrMinLength=j.getAttribute('minlength');if(!strAttrMaxLength){return}if(strAttrMaxLength){strAttrMaxLength=strAttrMaxLength.replace(/\D/g,'')}const strTag=j.tagName.toLowerCase();const CL={add(){return['ui',strTag].concat([].slice.call(arguments)).join('-')},toString(){return'ui-'+strTag}};let eleLabel=j.parentElement.querySelector('.'+CL.add('count'))||eleForm.querySelector('.'+CL.add('count')+'[for="'+j.id+'"]');if(!eleLabel&&!j.parentElement.classList.contains(CL.add('x'))){return}let strId=j.id;if(!strId){strId=('lulu_'+Math.random()).replace('0.','');j.id=strId}if(!eleLabel){eleLabel=document.createElement('label');eleLabel.className=CL.add('count');eleLabel.setAttribute('for',strId);eleLabel.innerHTML='<span>0</span><slash>/</slash><span>'+(strAttrMinLength?strAttrMinLength+'-':'')+strAttrMaxLength+'</span>';j.parentElement.appendChild(eleLabel)}else if(!eleLabel.hasAttribute('for')){eleLabel.setAttribute('for',strId)}const eleMin=eleLabel.querySelector('span, output')||eleLabel;const funCount=function(){const length=document.validate.getLength(j);eleMin.innerHTML=length;if(length!=0&&(length>strAttrMaxLength||(strAttrMinLength&&length<strAttrMinLength))){eleMin.classList.add('error');eleMin.toggleAttribute('is-error',true)}else{eleMin.classList.remove('error');eleMin.toggleAttribute('is-error',false)}};j.count=funCount;j.addEventListener('input',funCount);if(strTag=='input'){Object.defineProperty(j,'value',{...propsInput,set(value){propsInput.set.call(this,value);funCount()}})}else if(strTag=='textarea'){Object.defineProperty(j,'value',{...propsTextarea,set(value){propsTextarea.set.call(this,value);funCount()}})}funCount()});eleForm.addEventListener('reset',function(){this.querySelectorAll('input, textarea').forEach(function(j){if(j.count){setTimeout(()=>{j.count()},1)}})});return this}enhance(){const eleForm=this.element.form;eleForm.querySelectorAll('input, textarea').forEach(function(k){const strAttrType=document.validate.getType(k);if(/^checkbox|radio|range$/i.test(strAttrType)==false){['paste','drop'].forEach(eventType=>{k.addEventListener(eventType,function(j){const type=this.getAttribute('type')||this.type;const objPassData=j.clipboardData||j.dataTransfer;let strPassText='';if(!objPassData){return}let textSelected=this.value.slice(k.selectionStart,k.selectionEnd);if(this.value.trim()==''||textSelected===this.value){j.preventDefault();j.stopPropagation();strPassText=objPassData.getData('text')||'';if(type!='password'){strPassText=strPassText.trim()}if(type=='email'){strPassText=strPassText.replace('#','@')}else if(type=='tel'){strPassText=document.validate.getTel(strPassText)}this.value=strPassText;k.dispatchEvent(new CustomEvent('input'))}})})}})}immediate(){const eleForm=this.element.form;if(eleForm.isImmediated){return this}const funReportValidity=(event)=>{if(this.params.immediate==false){return}this.reportValidity(event.target)};const funReportFocus=(event)=>{if(this.params.immediate){setTimeout(function(){document.validate.focusable=0;this.reportValidity(event.target)}.bind(this),20)}};const funReportInput=(event)=>{if(this.params.immediate==false){return}document.validate.focusable=false;this.reportValidity(event.target);event.target.lastValue=event.target.value};eleForm.querySelectorAll('input, select, textarea').forEach(function(j){let strType=j.type;let strAttrType=j.getAttribute('type');if(strType=='button'||strType=='submit'||strType=='reset'||strType=='file'||strType=='image'){return}if(strType=='radio'||strType=='checkbox'){j.addEventListener('click',funReportValidity)}else if(/select/.test(strType)||/range|date|time|hour|minute|hidden/.test(strAttrType)){j.addEventListener('change',funReportValidity)}else{j.addEventListener('focus',funReportFocus);j.addEventListener('input',funReportInput)}});eleForm.isImmediated=true;const funRemoveValidate=function(){[...eleForm.elements].forEach(element=>{let strType=element.type;if(['button','submit','reset','file','image'].includes(strType)){return}let strAttrType=element.getAttribute('type');if(strType=='radio'||strType=='checkbox'){element.removeEventListener('click',funReportValidity)}else if(/select/.test(strType)||/range|date|time|hour|minute|hidden/.test(strAttrType)){element.removeEventListener('change',funReportValidity)}else{element.removeEventListener('focus',funReportFocus);element.removeEventListener('input',funReportInput)}});[...eleForm.querySelectorAll('.valided')].forEach(element=>{element.classList.remove('valided')});[...eleForm.querySelectorAll('[is-error]')].forEach(element=>{let objErrorTip=element.data&&element.data.errorTip;if(objErrorTip){objErrorTip.hide()}element.removeAttribute('is-error')});eleForm.isImmediated=false;eleForm.removeEventListener('reset',funRemoveValidate)};eleForm.addEventListener('reset',funRemoveValidate);return this}checkValidity(){const eleForm=this.element.form;let isAllPass=true;document.validate.focusable=true;eleForm.querySelectorAll('input, select, textarea').forEach(element=>{if(isAllPass==true||this.params.multiple){const isPass=element.validity.valid;if(isAllPass==true&&isPass==false){this.reportValidity(element);isAllPass=false}else{document.validate.styleError(element,isPass)}}});if(!eleForm.isImmediated&&this.params.immediate){this.immediate()}return isAllPass}reportValidity(element,content){if(element){document.validate.reportValidity(element,content)}}}return Component})();window.Validate=Validate;HTMLFormElement.prototype.validate=function(){new Validate(this);return this};(function(){const initAllValidate=(ele)=>{const eleValidates=ele||document.querySelectorAll('[is-validate]');eleValidates.forEach(item=>{item.validate();item.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-validate'}}));item.dispatchEvent(new CustomEvent('DOMContentLoaded'))})};const autoInitAndWatchingValidate=()=>{initAllValidate();const observer=new MutationObserver(mutationsList=>{mutationsList.forEach(mutation=>{mutation.addedNodes&&mutation.addedNodes.forEach(eleAdd=>{if(!eleAdd.tagName){return}if(eleAdd.hasAttribute('is-validate')){initAllValidate([eleAdd])}else{initAllValidate(eleAdd.querySelectorAll('[is-validate]'))}})})});observer.observe(document.body,{childList:true,subtree:true})};if(document.readyState!='loading'){autoInitAndWatchingValidate()}else{window.addEventListener('DOMContentLoaded',autoInitAndWatchingValidate)}})();class Pagination extends HTMLElement{static get observedAttributes(){return['per','total','current','loading']}constructor({per,total,current,loading,href,container=null,onChange=()=>{}}={}){super();const shadowRoot=this.attachShadow({mode:'open'});const isLink=href||this.href;const el=isLink?'a':'button';if(per){this.per=per}if(total){this.total=total}if(current){this.setAttribute('current',current)}this.loading=loading;this.onchange=onChange;shadowRoot.innerHTML=`<style>:host{display:flex;font-size:14px;height:30px;align-items:center}.ui-page{display:inline-flex;min-width:18px;padding:0 var(--ui-page-padding,2px);margin:0 5px;height:var(--ui-page-height,28px);border:1px solid transparent;border-radius:var(--ui-page-radius,0);color:var(--ui-gray,#a2a9b6);font-size:var(--ui-font,14px);font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;transition:border-color var(--ui-animate-time,.2s),background-color var(--ui-animate-time,.2s);text-decoration:none;user-select:none;position:relative;justify-content:center;align-items:center;background:none;box-sizing:content-box}.ui-page:not(:focus-visible){outline:0}.ui-page[current]{cursor:default}.ui-page:not([current]):not([disabled]):not(:disabled):hover{border-color:#b6bbc6;color:var(--ui-gray,#a2a9b6);cursor:pointer}.ui-page:disabled{color:#ccd0d7;cursor:default}.ui-page>svg{width:20px;height:20px}.ui-page-prev,.ui-page-next{text-align:center;fill:currentColor;overflow:hidden}span.ui-page-prev,span.ui-page-next{color:var(--ui-diabled,#ccd0d7)}.ui-page-next svg{transform:scaleX(-1)}.ui-page-prev{margin-left:0}.ui-page-next{margin-right:0}.ui-page-ellipsis{display:inline-block}:host(:not([loading]):not([data-loading=true])).ui-page[current]{color:var(--ui-white,#ffffff);background-color:var(--ui-blue,#2a80eb)}.ui-page-text{color:var(--ui-dark,#4c5161)}.ui-page.loading>svg{visibility:hidden}:host([loading]).ui-page[current]::before,:host([data-loading=true]).ui-page[current]::before{content:"";position:absolute;left:0;top:0;right:0;bottom:0;background-repeat:no-repeat;width:20px;height:20px;background:url("data:image/svg+xml,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg' width='200' height='200'%3E%3Cpath d='M512 1024q-104 0-199-40-92-39-163-110T40 711Q0 616 0 512q0-15 10.5-25.5T36 476t25.5 10.5T72 512q0 90 35 171 33 79 94 140t140 95q81 34 171 34t171-35q79-33 140-94t95-140q34-81 34-171t-35-171q-33-79-94-140t-140-95q-81-34-171-34-15 0-25.5-10.5T476 36t10.5-25.5T512 0q104 0 199 40 92 39 163 110t110 163q40 95 40 199t-40 199q-39 92-110 163T711 984q-95 40-199 40z' fill='%232a80eb'/%3E%3C/svg%3E")no-repeat center;background-size:20px 20px;margin:auto;animation:spin 1s linear infinite}@keyframes spin{from{transform:rotate(0)}to{transform:rotate(360deg)}}.simple-page{width:auto;padding:0.625em;pointer-events:none;color:#4c5161}.page{display:inline-flex;height:100%;align-items:center}.pagination-wrap{display:contents;visibility:var(--ui-visibility,initial)}</style><fieldset id="wrap"class="pagination-wrap"><${el}class="ui-page ui-page-prev"id="left"><svg version="1.1"xmlns="http://www.w3.org/2000/svg"width="200"height="200"viewBox="0 0 200 200"><path d="M85.876,100.5l49.537-50.526c4.089-4.215,4.089-11.049,0-15.262 c-4.089-4.218-10.719-4.218-14.808,0L63.586,92.868c-4.089,4.215-4.089,11.049,0,15.264l57.018,58.156 c4.089,4.215,10.719,4.215,14.808,0c4.089-4.215,4.089-11.049,0-15.262L85.876,100.5z"></path></svg></${el}><div class="page"id="page"></div><${el}class="ui-page ui-page-next"id="right"><svg version="1.1"xmlns="http://www.w3.org/2000/svg"width="200"height="200"viewBox="0 0 200 200"><path d="M85.876,100.5l49.537-50.526c4.089-4.215,4.089-11.049,0-15.262 c-4.089-4.218-10.719-4.218-14.808,0L63.586,92.868c-4.089,4.215-4.089,11.049,0,15.264l57.018,58.156 c4.089,4.215,10.719,4.215,14.808,0c4.089-4.215,4.089-11.049,0-15.262L85.876,100.5z"></path></svg></${el}></fieldset>`;this.element=new Proxy({},{get:(target,prop)=>{if(prop=='trigger'){return this.htmlFor&&document.getElementById(this.htmlFor)}}});if(typeof container=='string'){container=document.querySelector(container)}if(container){container.append(this)}}get per(){return Number(this.getAttribute('per'))||15}get simple(){return this.getAttribute('mode')==='short'}get total(){return Number(this.getAttribute('total'))||0}get current(){return Number(this.getAttribute('current'))||1}get loading(){return this.getAttribute('loading')!==null}get href(){return this.getAttribute('href')}set current(value){this.setAttribute('current',Math.min(Math.max(1,value),this.count))}set per(value){this.setAttribute('per',value)}set total(value){this.setAttribute('total',value)}set loading(value){if(!value){this.removeAttribute('loading')}else{this.setAttribute('loading','')}}get htmlFor(){return this.getAttribute('for')}set htmlFor(value){this.setAttribute('for',value)}render(per,total){const item=this.href?'a':'button';this.count=Math.ceil(total/per)||1;const current=Math.min(Math.max(1,this.current),this.count);if(this.simple){const html=`<div class="simple-page ui-page">${current}/ ${this.count}</div>`;this.page.innerHTML=html}else{const arr=Array.from({length:this.count}).splice(0,9);const html=arr.map((el,index)=>{return`<${item}class="ui-page"data-current="${index + 1}"aria-label="第${index + 1}页，共${this.count}页">${index+1}</${item}>`}).join('');this.page.innerHTML=html}clearTimeout(this.timerRender);this.timerRender=setTimeout(()=>{this.updatePage(current)})}updatePage(current=this.current){if(current==1){this.left.setAttribute('disabled',true);this.left.setAttribute('aria-label','已经是第一页了');this.left.removeAttribute('href')}else{this.left.removeAttribute('disabled');this.left.setAttribute('aria-label',`上一页，当前第${current}页`);this.left.href=this.href?this.href.replace(/\${current}/g,current-1):'javascript:;'}if(current==this.count){this.right.setAttribute('disabled',true);this.right.setAttribute('aria-label','已经是最后一页了');this.right.removeAttribute('href')}else{this.right.removeAttribute('disabled');this.right.setAttribute('aria-label',`下一页，当前第${current}页`);this.right.href=this.href?this.href.replace(/\${current}/g,current+1):'javascript:;'}if(this.simple){this.page.querySelector('.simple-page').textContent=current+' / '+this.count}else if(this.count>9){let place=[];switch(current){case 1:case 2:case 3:case 4:case 5:place=[1,2,3,4,5,6,7,'next',this.count];break;case this.count:case this.count-1:case this.count-2:case this.count-3:case this.count-4:place=[1,'pre',this.count-6,this.count-5,this.count-4,this.count-3,this.count-2,this.count-1,this.count];break;default:place=[1,'pre',current-2,current-1,current,current+1,current+2,'next',this.count];break}this.page.querySelectorAll('.ui-page').forEach((el,i)=>{if(typeof place[i]==='number'){el.dataset.current=place[i];el.textContent=place[i];el.disabled=false;el.href='javascript:;';if(place[i]==current){el.setAttribute('current','');if(this.isKeepFocusIn){el.focus({preventScroll:true})}}else{el.removeAttribute('current')}el.removeAttribute('disabled');el.setAttribute('aria-label',`第${place[i]}页，共${this.count}页`);if(this.href){el.href=this.href.replace(/\${current}/g,el.dataset.current)}}else{el.textContent='...';el.removeAttribute('current');el.removeAttribute('data-current');el.removeAttribute('aria-label');el.setAttribute('disabled',true);el.removeAttribute('href')}})}else{this.page.querySelectorAll('.ui-page').forEach((el)=>{if(el.dataset.current==current){el.setAttribute('current','');if(this.isKeepFocusIn){el.focus({preventScroll:true})}}else{el.removeAttribute('current')}if(this.href){el.href=this.href.replace(/\${current}/g,el.dataset.current)}})}}focusPrev(){const current=this.shadowRoot.activeElement;if(current===this.right){if(this.simple){this.left.focus()}else{this.page.lastElementChild.focus()}}else{const prev=current.previousElementSibling;if(prev){if(!prev.disabled){prev.focus()}else{prev.previousElementSibling.focus()}}else{this.left.focus()}}}focusNext(){const current=this.shadowRoot.activeElement;if(current===this.left){if(this.simple){this.right.focus()}else{this.page.firstElementChild.focus()}}else{const next=current.nextElementSibling;if(next){if(!next.disabled){next.focus()}else{next.nextElementSibling.focus()}}else{this.right.focus()}}}connectedCallback(){this.page=this.shadowRoot.getElementById('page');this.left=this.shadowRoot.getElementById('left');this.right=this.shadowRoot.getElementById('right');this.wrap=this.shadowRoot.getElementById('wrap');this.render(this.per,this.total);this.page.addEventListener('click',(ev)=>{const item=ev.target.closest('.ui-page');if(item){this.nativeClick=true;this.current=Number(item.dataset.current)}});this.page.addEventListener('focusin',()=>{this.isKeepFocusIn=true});this.addEventListener('keydown',(ev)=>{if(this.loading){return}switch(ev.key){case'ArrowDown':case'PageDown':ev.preventDefault();this.nativeClick=true;this.current--;break;case'ArrowUp':case'PageUp':ev.preventDefault();this.nativeClick=true;this.current++;break;case'ArrowLeft':this.focusPrev();break;case'ArrowRight':this.focusNext();break;default:break}});this.left.addEventListener('click',()=>{this.nativeClick=true;this.current--;this.left.focus()});this.right.addEventListener('click',()=>{this.nativeClick=true;this.current++;this.right.focus()});this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-pagination'}}));this.isConnectedCallback=true;this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}attributeChangedCallback(name,oldValue,newValue){if(!this.page||oldValue===newValue){return}let eleTrigger=this.element&&this.element.trigger;if(name=='per'){this.render(newValue,this.total);if(eleTrigger){eleTrigger.dataset.per=newValue}}else if(name=='total'){this.render(this.per,newValue);if(eleTrigger){eleTrigger.dataset.total=newValue}}else if(name=='loading'){this.wrap.disabled=newValue!==null;if(eleTrigger){eleTrigger.dataset.loading=newValue!==null}}else if(name=='current'&&oldValue!==newValue){clearTimeout(this.timerRender);this.timerRender=setTimeout(()=>{this.updatePage(Number(newValue))});if(eleTrigger){eleTrigger.dataset.current=newValue}if(this.nativeClick){this.nativeClick=false;this.dispatchEvent(new CustomEvent('change',{detail:{current:Number(newValue),per:this.per,total:this.total}}));if(eleTrigger&&eleTrigger!=this){eleTrigger.dispatchEvent(new CustomEvent('change',{detail:{current:Number(newValue),per:this.per,total:this.total}}))}}}}}if(!customElements.get('ui-pagination')){customElements.define('ui-pagination',Pagination)}window.Pagination=Pagination;HTMLElement.prototype.pagination=function(j){if(this.matches('ui-pagination')||this['ui-pagination']){return this}const{total=0,current=1,per=15,href=null,loading=false}=this.dataset;let objParams=Object.assign({},{per,total,href,loading},j||{});const pagination=new Pagination(objParams);const strId=this.id||('lulu_'+Math.random()).replace('0.','');this.innerHTML='';this.id=strId;this['ui-pagination']=pagination;pagination.htmlFor=strId;pagination.setAttribute('current',current);pagination.addEventListener('connected',()=>{this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-pagination'}}));pagination.remove();this.dispatchEvent(new CustomEvent('DOMContentLoaded'))});document.body.append(pagination);const shadowRoot=this.attachShadow({mode:'open'});shadowRoot.append(pagination.shadowRoot);this.setAttribute('defined','');return this};(function(){const initAllPagination=(ele)=>{const elePaginations=ele||document.querySelectorAll('[is-pagination]');elePaginations.forEach(item=>{item.pagination()})};const autoInitAndWatchingIsPaginationAttr=()=>{initAllPagination();const observer=new MutationObserver(mutationsList=>{mutationsList.forEach(mutation=>{mutation.addedNodes&&mutation.addedNodes.forEach(eleAdd=>{if(!eleAdd.tagName){return}if(eleAdd.hasAttribute('is-pagination')){initAllPagination([eleAdd])}else{initAllPagination(eleAdd.querySelectorAll('[is-pagination]'))}})})});observer.observe(document.body,{childList:true,subtree:true})};if(document.readyState!='loading'){autoInitAndWatchingIsPaginationAttr()}else{window.addEventListener('DOMContentLoaded',autoInitAndWatchingIsPaginationAttr)}})();const Table=(function(){let CHECKED='checked';let SELECTED='selected';let CL={empty:'table-null-x',error:'table-error-x',page:'table-page',checkbox:'[type="checkbox"]'};class Table extends HTMLTableElement{static get defaultKeyMap(){return{key:'',total:'total',per:'per',current:'current'}}static scrollTopTo(top,callback){let scrollTop=document.scrollingElement.scrollTop;let rate=2;let funTop=function(){scrollTop=scrollTop+(top-scrollTop)/rate;if(Math.abs(scrollTop-top)<=1){document.scrollingElement.scrollTop=top;callback&&callback();return}document.scrollingElement.scrollTop=scrollTop;requestAnimationFrame(funTop)};funTop()}constructor(){super();this.params=this.params||{};this.element=this.element||{};this.params.parse=(data)=>{if(this.params.template){return this.params.template.interpolate(data)}return''};this.params.ajax={};this.params.form={};this.params.list=[15,30,50];this.params.page={total:0,per:15,current:1,keyMap:Table.defaultKeyMap}}setParams(options){options=options||{};let objPageOption=options.page;if(objPageOption){objPageOption.keyMap=Object.assign({},this.params.page.keyMap||Table.defaultKeyMap,objPageOption.keyMap||{})}this.params=Object.assign(this.params,options);return this}events(){let objParams=this.params;let objElement=this.element;this.addEventListener('click',function(k){let eleCheckbox=k.target;if(!eleCheckbox||eleCheckbox.type!='checkbox'){return}let eleTr=eleCheckbox.closest('tr');if(eleTr.querySelector(':first-child '+CL.checkbox)!==eleCheckbox){return}let eleAllTdCheckbox=[];this.querySelectorAll('tr').forEach(function(j){if(j.clientWidth==0){return}let eleTdCheckbox=j.querySelector('td:first-child '+CL.checkbox+':enabled');if(eleTdCheckbox){eleAllTdCheckbox.push(eleTdCheckbox)}});let isAllChecked=false;let isAllUnchecked=false;let eleTh=eleCheckbox.closest('th');if(eleTh){isAllChecked=eleCheckbox[CHECKED];isAllUnchecked=!isAllChecked;eleAllTdCheckbox.forEach(function(j){j[CHECKED]=isAllChecked})}else{let numLengthChecked=[].slice.call(eleAllTdCheckbox).filter(function(j){return j[CHECKED]}).length;isAllChecked=(eleAllTdCheckbox.length==numLengthChecked);isAllUnchecked=(numLengthChecked==0)}let eleThCheckbox=this.querySelector('th:first-child '+CL.checkbox);if(eleThCheckbox){eleThCheckbox[CHECKED]=isAllChecked}eleAllTdCheckbox.forEach(function(j){j.closest('tr').classList[j[CHECKED]?'add':'remove'](SELECTED)});this.dispatchEvent(new CustomEvent('check',{detail:{isAllChecked:isAllChecked,isAllUnchecked:isAllUnchecked,target:eleCheckbox,allEnabledCheckbox:eleAllTdCheckbox}}))});this.addEventListener('click',function(j){let eleTarget=j.target;let eleCheckbox=null;if(eleTarget&&/^(?:a|input|textarea|tbody|i|select|label|th)$/i.test(eleTarget.tagName)==false){eleCheckbox=eleTarget.closest('tr')&&eleTarget.closest('tr').querySelector('td:first-child '+CL.checkbox+':enabled');if(eleCheckbox){eleCheckbox.click()}}});let elePagination=this.element.pagination;if(elePagination){elePagination.addEventListener('change',event=>{let numCurrent=event.detail.current;objParams.page.current=numCurrent;elePagination.loading=true;this.ajax()})}let strStoreId=this.id;let numCurrentPer=objParams.page.per;let elePer=objElement.drop;if(elePer&&elePer.list){if(strStoreId&&localStorage[strStoreId]){numCurrentPer=localStorage[strStoreId];objParams.page.per=Number(numCurrentPer)}elePer.textContent=numCurrentPer;elePer.list(()=>{return objParams.list.map(function(j){return{value:j}})},{width:60,onSelect:(data)=>{let numPerNew=data.value;if(strStoreId){localStorage[strStoreId]=numPerNew}if(objParams.page.per!=numPerNew){objParams.page.per=numPerNew;objParams.page.current=1;this.ajax()}}})}let eleForm=this.form;if(eleForm){new Validate(eleForm,()=>{objParams.page.current=1;this.ajax({data:this.params.form.data||{}})},{validate:()=>{return this.params.form.validate||[]}})}}ajax(options){options=options||{};let objParams=this.params;let objElement=this.element;if(this.getAttribute('aria-busy')=='true'){return this}let eleContainer=this.parentElement;let eleTbody=this.querySelector('tbody');let eleForm=this.form;let objAjaxForm={data:{}};if(eleForm){let strAttrAction=eleForm.getAttribute('action');if(strAttrAction){objAjaxForm.url=strAttrAction}eleForm.querySelectorAll('input[name]:enabled, select[name]:enabled, textarea[name]:enabled').forEach(ele=>{if(/^(?:submit|image|file)$/.test(ele.type)){return}objAjaxForm.data[ele.name]=ele.value})}let objAjax=Object.assign({},this.dataset,objAjaxForm,objParams.ajax,options);if(!objAjax.url){this.element.pagination.loading=false;return this}if(/^\/\//.test(objAjax.url)){objAjax.url=location.protocol+objAjax.url}let data=options.data||{};let dataForm=objAjaxForm.data;let dataOptions=objParams.ajax.data||{};if(typeof dataOptions=='function'){dataOptions=dataOptions()||{}}if(typeof dataForm=='function'){dataForm=dataForm()||{}}if(typeof data=='function'){data=data()||{}}let dataPage={};let objKeyMap=objParams.page.keyMap;if(objKeyMap){dataPage[objKeyMap['current']]=objParams.page.current;dataPage[objKeyMap['per']]=objParams.page.per}let objDataSend=Object.assign({},dataPage,dataForm,dataOptions,data);if(objKeyMap){objParams.page.current=objDataSend[objKeyMap['current']];objParams.page.per=objDataSend[objKeyMap['per']]}let objAjaxParams=new URLSearchParams(objDataSend);let strUrlAjax=objAjax.url;let strUrlSearch='?';if(strUrlAjax.split('?').length>1){strUrlSearch=strUrlSearch+strUrlAjax.split('?')[1]+'&'}strUrlAjax=strUrlAjax.split('?')[0]+strUrlSearch+objAjaxParams.toString();let funError=(content)=>{let eleError=objElement.error||eleContainer.querySelector('.'+CL.error);if(!eleError){eleError=document.createElement('div');eleError.className=CL.error;this.insertAdjacentElement('afterend',eleError);objElement.error=eleError}eleError.style.display='flex';eleError.innerHTML=content||'数据没有获取成功';if(typeof objAjax.error=='function'){objAjax.error()}};let funComplete=()=>{this.removeAttribute('aria-busy');if(objElement.loading){objElement.loading.style.display='none'}if(objElement.pagination){objElement.pagination.loading=false}if(typeof objAjax.complete=='function'){objAjax.complete()}this.show()};let funAjax=()=>{let xhr=new XMLHttpRequest();xhr.open('GET',strUrlAjax);xhr.onload=()=>{let json={};try{json=JSON.parse(xhr.responseText)||{}}catch(event){funError('解析异常，请稍后重试');return}if(json.code!==0&&json.error!==0){funError(json.msg||'返回数据格式不符合要求');return}let strHtml=objParams.parse(json);eleTbody.innerHTML=strHtml||'';let eleEmpty=objElement.empty;if(!strHtml||!strHtml.trim()){if(!eleEmpty){eleEmpty=document.querySelector('.'+CL.empty)||document.createElement('div');eleEmpty.className=CL.empty;this.insertAdjacentElement('afterend',eleEmpty);objElement.empty=eleEmpty}eleEmpty.style.display='flex'}let jsonKey=objKeyMap.key;let numTotal;if(jsonKey){numTotal=json.data[jsonKey][objKeyMap['total']]}else{numTotal=json.data[objKeyMap['total']]}if(numTotal||numTotal==0){eleContainer.querySelectorAll('output[data-type="total"]').forEach(function(j){j.innerHTML=numTotal});objParams.page.total=numTotal}this.page();if(typeof objAjax.success=='function'){objAjax.success(json)}};xhr.onerror=()=>{funError('网络异常，数据没有获取成功，您可以稍后重试！')};xhr.onloadend=()=>{funComplete()};xhr.send();this.setAttribute('aria-busy','true')};let numScrollTop=window.pageYOffset;let eleLoading=objElement.loading;if(!eleLoading){eleLoading=document.createElement('ui-loading');eleLoading.setAttribute('rows',15);this.insertAdjacentElement('afterend',eleLoading);objElement.loading=eleLoading}eleLoading.style.paddingBottom='';if(window.getComputedStyle(eleLoading).display=='none'){let eleThead=this.querySelector('thead');eleLoading.style.height=(this.clientHeight-(eleThead?eleThead.clientHeight:0))+'px';if(eleTbody.innerHTML.trim()==''){eleLoading.style.height=''}}let numDistance=parseFloat(eleLoading.style.height)-window.innerHeight;if(numDistance>0){eleLoading.style.paddingBottom=numDistance+'px'}eleLoading.style.display='block';if(objElement.empty){objElement.empty.style.display='none'}if(objElement.error){objElement.error.style.display='none'}eleTbody.innerHTML='';let objBound=this.getBoundingClientRect();if(!this.isFirstAjax&&objBound.top<0){numScrollTop=objBound.top+numScrollTop;Table.scrollTopTo(numScrollTop,funAjax)}else if(!this.isFirstAjax&&objBound.top>window.innerHeight){numScrollTop=numScrollTop-objBound.top;Table.scrollTopTo(numScrollTop,funAjax)}else{funAjax();this.isFirstAjax=false}return this}page(total){let objPage=this.params.page;let elePagination=this.element.pagination;if(!elePagination){return}let objParamPage={total:total||objPage.total,current:objPage.current,per:objPage.per,mode:objPage.mode||'long'};for(let key in objParamPage){elePagination[key]=objParamPage[key]}}show(){if(this.element.loading){this.element.loading.style.paddingBottom=''}let eleThCheckbox=this.querySelector('th:first-child '+CL.checkbox);if(eleThCheckbox){eleThCheckbox[CHECKED]=false}this.dispatchEvent(new CustomEvent('show',{detail:{type:'ui-table'}}));return this}connectedCallback(){let eleTbody=this.querySelector('tbody');if(!eleTbody){eleTbody=document.createElement('tbody');this.append(eleTbody)}let eleTemplate=this.querySelector('template');if(eleTemplate){this.params.template=eleTemplate.innerHTML}let elePagination=this.parentElement.querySelector('ui-pagination');if(elePagination){this.element.pagination=elePagination;this.setParams({page:{current:elePagination.current,total:elePagination.total,per:elePagination.per}})}else{elePagination=document.createElement('ui-pagination');this.element.pagination=elePagination;let elePage=this.parentElement.querySelector('.'+CL.page);if(elePage){elePage.appendChild(elePagination)}}let eleLoading=this.parentElement.querySelector('ui-loading');if(eleLoading){this.element.loading=eleLoading}let eleDrop=this.parentElement.querySelector('ui-drop[data-type="per"]');if(eleDrop){this.element.drop=eleDrop}setTimeout(()=>{this.events();if(eleTbody.textContent.trim()==''){this.isFirstAjax=true;this.ajax()}else{this.page()}},1);this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-table'}}));this.isConnectedCallback=true;this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}}if(!('').interpolate){String.prototype.interpolate=function(o){const names=Object.keys(o);const vals=Object.values(o);return new Function(...names,`return\`${(function(m){return m.replace(/&(lt|gt|amp|quot);/ig,function(j,k){return({'lt':'<','gt':'>','amp':'&','quot':'"'})[k]})})(this)}\`;`)(...vals)}}return Table})();Object.defineProperty(HTMLTableElement.prototype,'form',{get(){let attrForm=this.getAttribute('form');if(!attrForm){return null}return document.getElementById(attrForm)}});if(!customElements.get('ui-table')){customElements.define('ui-table',Table,{extends:'table'})}class Form extends HTMLFormElement{constructor(){super();this.element=this.element||{};this.params=this.params||{};this.callback=this.callback||{};Object.defineProperty(this.params,'validate',{set(value){if(this.validate){this.validate.setCustomValidity(value)}}});return this}ajax(){let optionCallback=this.callback;optionCallback=optionCallback||function(){};if(typeof optionCallback=='function'){optionCallback={success:optionCallback}}let eleButton=null;let eleSubmit=this.element.submit;eleButton=eleSubmit.id&&document.querySelector('label[for='+eleSubmit.id+']');if(!eleButton){eleButton=eleSubmit}this.element.button=eleButton;let strUrl=this.action.split('#')[0]||location.href.split('#')[0];let strMethod=this.method||'POST';eleButton.loading=true;eleSubmit.setAttribute('disabled','disabled');let objFormData=new FormData(this);if(this.params.data){Object.keys(this.params.data).forEach(key=>{objFormData.append(key,this.params.data[key])})}if(optionCallback.beforeSend){optionCallback.beforeSend.call(this,xhr,objFormData)}let strSearchParams='';if(strMethod.toLowerCase()=='get'){strSearchParams=new URLSearchParams(objFormData).toString();if(strUrl.split('?').length>1){strUrl=strUrl+'&'+strSearchParams}else{strUrl=strUrl+'?'+strSearchParams}}let xhr=new XMLHttpRequest();xhr.open(strMethod,strUrl);xhr.onload=()=>{let json={};try{json=JSON.parse(xhr.responseText)}catch(event){new LightTip('返回数据解析出错。','error');if(optionCallback.error){optionCallback.error.call(this,event)}this.dispatchEvent(new CustomEvent('error',{detail:{data:{code:-1,msg:'解析出错'}}}));return}if(json&&(json.code===0||json.error===0)){if(optionCallback.success){optionCallback.success.call(this,json)}else{new LightTip(json.msg||'操作成功。','success');this.reset()}this.dispatchEvent(new CustomEvent('success',{detail:{data:json}}))}else{new LightTip((json&&json.msg)||'返回数据格式不符合要求。','error');if(optionCallback.error){optionCallback.error.call(this,json)}this.dispatchEvent(new CustomEvent('error',{detail:{data:json}}))}};xhr.onerror=()=>{new LightTip('网络异常，刚才的操作没有成功，您可以稍后重试。','error');if(optionCallback.error){optionCallback.error.apply(this,arguments)}this.dispatchEvent(new CustomEvent('error',{detail:{code:-1,msg:'网络异常'}}))};xhr.onloadend=()=>{eleButton.loading=false;eleSubmit.removeAttribute('disabled');if(optionCallback.complete){optionCallback.complete.apply(this,arguments)}this.dispatchEvent(new CustomEvent('complete'))};xhr.send(objFormData)}connectedCallback(){let eleSubmit=[...this.elements].filter(function(j){return j.type&&/^(?:submit|image)$/i.test(j.type)})[0]||this.querySelector('button:nth-last-of-type(1)');if(!eleSubmit){eleSubmit=(()=>{let ele=document.createElement('button');ele.type='submit';ele.setAttribute('hidden','');this.appendChild(ele);return ele})()}this.element.submit=eleSubmit;this.validate=new Validate(this,()=>{let funAvoidSend=this.params.avoidSend||this.callback.avoidSend;if(!funAvoidSend||!funAvoidSend(this)){this.ajax()}},this.params.validate||{});this.dispatchEvent(new CustomEvent('connected',{detail:{type:'ui-form'}}));this.isConnectedCallback=true;this.dispatchEvent(new CustomEvent('DOMContentLoaded'))}}if(!customElements.get('ui-form')){customElements.define('ui-form',Form,{extends:'form'})};